--
-- Script was generated by Devart dbForge Studio 2021 for SQL Server, Version 6.0.563.0
-- Product home page: http://www.devart.com/dbforge/sql/studio
-- Script date 2/29/2024 10:57:26 AM
-- Server version: 12.0.2000.8
--


SET DATEFORMAT ymd
SET ARITHABORT, ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER, ANSI_NULLS, NOCOUNT ON
SET NUMERIC_ROUNDABORT, IMPLICIT_TRANSACTIONS, XACT_ABORT OFF
GO

--
-- Create table [dbo].[WorkflowState]
--
PRINT (N'Create table [dbo].[WorkflowState]')
GO
IF OBJECT_ID(N'dbo.WorkflowState', 'U') IS NULL
CREATE TABLE dbo.WorkflowState (
  Id int IDENTITY,
  State nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_WorkflowState PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[UserRole]
--
PRINT (N'Create table [dbo].[UserRole]')
GO
IF OBJECT_ID(N'dbo.UserRole', 'U') IS NULL
CREATE TABLE dbo.UserRole (
  Id nvarchar(450) NOT NULL,
  RoleId nvarchar(450) NULL,
  UserId nvarchar(450) NULL,
  CONSTRAINT PK_UserRole PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_UserRole_RoleId] on table [dbo].[UserRole]
--
PRINT (N'Create index [IX_UserRole_RoleId] on table [dbo].[UserRole]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UserRole_RoleId' AND object_id = OBJECT_ID(N'dbo.UserRole'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RoleId' AND object_id = OBJECT_ID(N'dbo.UserRole'))
CREATE INDEX IX_UserRole_RoleId
  ON dbo.UserRole (RoleId)
GO

--
-- Create index [IX_UserRole_UserId] on table [dbo].[UserRole]
--
PRINT (N'Create index [IX_UserRole_UserId] on table [dbo].[UserRole]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UserRole_UserId' AND object_id = OBJECT_ID(N'dbo.UserRole'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UserId' AND object_id = OBJECT_ID(N'dbo.UserRole'))
CREATE INDEX IX_UserRole_UserId
  ON dbo.UserRole (UserId)
GO

--
-- Create table [dbo].[UPrinceCustomerTenantsInfo]
--
PRINT (N'Create table [dbo].[UPrinceCustomerTenantsInfo]')
GO
IF OBJECT_ID(N'dbo.UPrinceCustomerTenantsInfo', 'U') IS NULL
CREATE TABLE dbo.UPrinceCustomerTenantsInfo (
  Id nvarchar(450) NOT NULL,
  Host nvarchar(max) NULL,
  DatabaseType nvarchar(max) NULL,
  Name nvarchar(max) NULL,
  AzureBlob nvarchar(max) NULL,
  StorageConnectionString nvarchar(max) NULL,
  AzureContainer nvarchar(max) NULL,
  ConnectionString nvarchar(max) NULL,
  CatelogConnectionString nvarchar(max) NULL,
  ClientId nvarchar(max) NULL,
  ClientSecretKey nvarchar(max) NULL,
  TenantId nvarchar(max) NULL,
  MapUrl nvarchar(max) NULL,
  ColorCode nvarchar(max) NULL,
  LogoUrl nvarchar(max) NULL,
  CONSTRAINT PK_UPrinceCustomerTenantsInfo PRIMARY KEY CLUSTERED (Id)
)
GO

SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

--
-- Create procedure [dbo].[FileTenantSourceUPrinceCustomerTenantsInfo]
--
GO
PRINT (N'Create procedure [dbo].[FileTenantSourceUPrinceCustomerTenantsInfo]')
GO
IF OBJECT_ID(N'dbo.FileTenantSourceUPrinceCustomerTenantsInfo', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.FileTenantSourceUPrinceCustomerTenantsInfo  AS
select * from [dbo].[UPrinceCustomerTenantsInfo]
'
GO

--
-- Create table [dbo].[UprinceCustomerProfile]
--
PRINT (N'Create table [dbo].[UprinceCustomerProfile]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomerProfile', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomerProfile (
  ID int IDENTITY,
  UprinceCustomerId int NOT NULL,
  VerificationStatus nvarchar(max) NULL,
  CompanyName nvarchar(max) NULL,
  CONSTRAINT PK_UprinceCustomerProfile PRIMARY KEY CLUSTERED (ID)
)
GO

--
-- Create index [IX_UprinceCustomerProfile_UprinceCustomerId] on table [dbo].[UprinceCustomerProfile]
--
PRINT (N'Create index [IX_UprinceCustomerProfile_UprinceCustomerId] on table [dbo].[UprinceCustomerProfile]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UprinceCustomerProfile_UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerProfile'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerProfile'))
CREATE UNIQUE INDEX IX_UprinceCustomerProfile_UprinceCustomerId
  ON dbo.UprinceCustomerProfile (UprinceCustomerId)
GO

--
-- Create table [dbo].[UprinceCustomerPrimaryContact]
--
PRINT (N'Create table [dbo].[UprinceCustomerPrimaryContact]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomerPrimaryContact', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomerPrimaryContact (
  ID int IDENTITY,
  UprinceCustomerProfileId int NOT NULL,
  Name nvarchar(max) NULL,
  phone nvarchar(max) NULL,
  Email nvarchar(max) NULL,
  CONSTRAINT PK_UprinceCustomerPrimaryContact PRIMARY KEY CLUSTERED (ID)
)
GO

--
-- Create index [IX_UprinceCustomerPrimaryContact_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerPrimaryContact]
--
PRINT (N'Create index [IX_UprinceCustomerPrimaryContact_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerPrimaryContact]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UprinceCustomerPrimaryContact_UprinceCustomerProfileId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerPrimaryContact'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerProfileId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerPrimaryContact'))
CREATE UNIQUE INDEX IX_UprinceCustomerPrimaryContact_UprinceCustomerProfileId
  ON dbo.UprinceCustomerPrimaryContact (UprinceCustomerProfileId)
GO

--
-- Create table [dbo].[UprinceCustomerLocation]
--
PRINT (N'Create table [dbo].[UprinceCustomerLocation]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomerLocation', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomerLocation (
  ID int IDENTITY,
  UprinceCustomerId int NOT NULL,
  Street nvarchar(max) NULL,
  City nvarchar(max) NULL,
  Country nvarchar(max) NULL,
  PostalCode nvarchar(max) NULL,
  CONSTRAINT PK_UprinceCustomerLocation PRIMARY KEY CLUSTERED (ID)
)
GO

--
-- Create index [IX_UprinceCustomerLocation_UprinceCustomerId] on table [dbo].[UprinceCustomerLocation]
--
PRINT (N'Create index [IX_UprinceCustomerLocation_UprinceCustomerId] on table [dbo].[UprinceCustomerLocation]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UprinceCustomerLocation_UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerLocation'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerLocation'))
CREATE INDEX IX_UprinceCustomerLocation_UprinceCustomerId
  ON dbo.UprinceCustomerLocation (UprinceCustomerId)
GO

--
-- Create table [dbo].[UprinceCustomerLegalAddress]
--
PRINT (N'Create table [dbo].[UprinceCustomerLegalAddress]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomerLegalAddress', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomerLegalAddress (
  ID int IDENTITY,
  UprinceCustomerProfileId int NOT NULL,
  Street nvarchar(max) NULL,
  City nvarchar(max) NULL,
  Country nvarchar(max) NULL,
  PostalCode nvarchar(max) NULL,
  CONSTRAINT PK_UprinceCustomerLegalAddress PRIMARY KEY CLUSTERED (ID)
)
GO

--
-- Create index [IX_UprinceCustomerLegalAddress_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerLegalAddress]
--
PRINT (N'Create index [IX_UprinceCustomerLegalAddress_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerLegalAddress]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UprinceCustomerLegalAddress_UprinceCustomerProfileId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerLegalAddress'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerProfileId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerLegalAddress'))
CREATE UNIQUE INDEX IX_UprinceCustomerLegalAddress_UprinceCustomerProfileId
  ON dbo.UprinceCustomerLegalAddress (UprinceCustomerProfileId)
GO

--
-- Create table [dbo].[UprinceCustomerJobRole]
--
PRINT (N'Create table [dbo].[UprinceCustomerJobRole]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomerJobRole', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomerJobRole (
  ID int IDENTITY,
  Role nvarchar(max) NULL,
  CONSTRAINT PK_UprinceCustomerJobRole PRIMARY KEY CLUSTERED (ID)
)
GO

--
-- Create table [dbo].[UPrinceCustomerContractingUnit]
--
PRINT (N'Create table [dbo].[UPrinceCustomerContractingUnit]')
GO
IF OBJECT_ID(N'dbo.UPrinceCustomerContractingUnit', 'U') IS NULL
CREATE TABLE dbo.UPrinceCustomerContractingUnit (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  ConnectionString nvarchar(max) NULL,
  UPrinceCustomerTenantsInfoId nvarchar(max) NULL,
  CatelogConnectionString nvarchar(max) NULL,
  SequenceCode nvarchar(max) NULL,
  ContractingUnitId nvarchar(max) NULL,
  IsDefault nvarchar(max) NULL,
  CONSTRAINT PK_UPrinceCustomerContractingUnit PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create procedure [dbo].[MapConnectionStringCuQuery]
--
GO
PRINT (N'Create procedure [dbo].[MapConnectionStringCuQuery]')
GO
IF OBJECT_ID(N'dbo.MapConnectionStringCuQuery', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.MapConnectionStringCuQuery @sequenceCode nvarchar(450) 
AS
select  ConnectionString from [dbo].[UPrinceCustomerContractingUnit] where ContractingUnitId = @sequenceCode;
'
GO

--
-- Create table [dbo].[UprinceCustomerContactPreference]
--
PRINT (N'Create table [dbo].[UprinceCustomerContactPreference]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomerContactPreference', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomerContactPreference (
  ID int IDENTITY,
  UPrinceCustomerJobRoleId int NOT NULL,
  UprinceCustomerId int NOT NULL,
  FirstName nvarchar(max) NULL,
  LastName nvarchar(max) NULL,
  Email nvarchar(max) NULL,
  CONSTRAINT PK_UprinceCustomerContactPreference PRIMARY KEY CLUSTERED (ID)
)
GO

--
-- Create index [IX_UprinceCustomerContactPreference_UprinceCustomerId] on table [dbo].[UprinceCustomerContactPreference]
--
PRINT (N'Create index [IX_UprinceCustomerContactPreference_UprinceCustomerId] on table [dbo].[UprinceCustomerContactPreference]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_UprinceCustomerContactPreference_UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerContactPreference'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerContactPreference'))
CREATE UNIQUE INDEX IX_UprinceCustomerContactPreference_UprinceCustomerId
  ON dbo.UprinceCustomerContactPreference (UprinceCustomerId)
GO

--
-- Create table [dbo].[UPData]
--
PRINT (N'Create table [dbo].[UPData]')
GO
IF OBJECT_ID(N'dbo.UPData', 'U') IS NULL
CREATE TABLE dbo.UPData (
  Id int IDENTITY,
  Name nchar(10) NULL,
  SysStartTime datetime2(0) GENERATED ALWAYS AS ROW START NOT NULL,
  SysEndTime datetime2(0) GENERATED ALWAYS AS ROW END NOT NULL,
  PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime),
  CONSTRAINT PK_UPData PRIMARY KEY CLUSTERED (Id)
)
WITH (SYSTEM_VERSIONING = ON (HISTORY_TABLE = dbo.UPDataHistory, DATA_CONSISTENCY_CHECK = ON))
GO

--
-- Create table [dbo].[TimeClockActivityType]
--
PRINT (N'Create table [dbo].[TimeClockActivityType]')
GO
IF OBJECT_ID(N'dbo.TimeClockActivityType', 'U') IS NULL
CREATE TABLE dbo.TimeClockActivityType (
  Id int IDENTITY,
  Type nvarchar(max) NULL,
  TypeId int NOT NULL,
  LocaleCode nvarchar(max) NULL,
  DisplayOrder int NOT NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_TimeClockActivityType PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[TimeClock]
--
PRINT (N'Create table [dbo].[TimeClock]')
GO
IF OBJECT_ID(N'dbo.TimeClock', 'U') IS NULL
CREATE TABLE dbo.TimeClock (
  Id nvarchar(450) NOT NULL,
  UserId nvarchar(450) NULL,
  Type int NOT NULL,
  StartDateTime datetime2 NOT NULL,
  EndDateTime datetime2 NULL,
  FromLocation nvarchar(max) NULL,
  ToLocation nvarchar(max) NULL,
  QRCodeId nvarchar(450) NULL,
  LocationId nvarchar(450) NULL,
  ShiftId nvarchar(450) NULL,
  CONSTRAINT PK_TimeClock PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_TimeClock_LocationId] on table [dbo].[TimeClock]
--
PRINT (N'Create index [IX_TimeClock_LocationId] on table [dbo].[TimeClock]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_TimeClock_LocationId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LocationId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
CREATE INDEX IX_TimeClock_LocationId
  ON dbo.TimeClock (LocationId)
GO

--
-- Create index [IX_TimeClock_QRCodeId] on table [dbo].[TimeClock]
--
PRINT (N'Create index [IX_TimeClock_QRCodeId] on table [dbo].[TimeClock]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_TimeClock_QRCodeId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QRCodeId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
CREATE INDEX IX_TimeClock_QRCodeId
  ON dbo.TimeClock (QRCodeId)
GO

--
-- Create index [IX_TimeClock_ShiftId] on table [dbo].[TimeClock]
--
PRINT (N'Create index [IX_TimeClock_ShiftId] on table [dbo].[TimeClock]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_TimeClock_ShiftId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ShiftId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
CREATE INDEX IX_TimeClock_ShiftId
  ON dbo.TimeClock (ShiftId)
GO

--
-- Create index [IX_TimeClock_UserId] on table [dbo].[TimeClock]
--
PRINT (N'Create index [IX_TimeClock_UserId] on table [dbo].[TimeClock]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_TimeClock_UserId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UserId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
CREATE INDEX IX_TimeClock_UserId
  ON dbo.TimeClock (UserId)
GO

--
-- Create table [dbo].[Shifts]
--
PRINT (N'Create table [dbo].[Shifts]')
GO
IF OBJECT_ID(N'dbo.Shifts', 'U') IS NULL
CREATE TABLE dbo.Shifts (
  Id nvarchar(450) NOT NULL,
  UserId nvarchar(450) NULL,
  StartDateTime datetime2 NOT NULL,
  EndDateTime datetime2 NULL,
  Status nvarchar(max) NULL,
  WorkflowStateId int NOT NULL,
  CONSTRAINT PK_Shifts PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_Shifts_UserId] on table [dbo].[Shifts]
--
PRINT (N'Create index [IX_Shifts_UserId] on table [dbo].[Shifts]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Shifts_UserId' AND object_id = OBJECT_ID(N'dbo.Shifts'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UserId' AND object_id = OBJECT_ID(N'dbo.Shifts'))
CREATE INDEX IX_Shifts_UserId
  ON dbo.Shifts (UserId)
GO

--
-- Create index [IX_Shifts_WorkflowStateId] on table [dbo].[Shifts]
--
PRINT (N'Create index [IX_Shifts_WorkflowStateId] on table [dbo].[Shifts]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Shifts_WorkflowStateId' AND object_id = OBJECT_ID(N'dbo.Shifts'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WorkflowStateId' AND object_id = OBJECT_ID(N'dbo.Shifts'))
CREATE INDEX IX_Shifts_WorkflowStateId
  ON dbo.Shifts (WorkflowStateId)
GO

--
-- Create table [dbo].[Role]
--
PRINT (N'Create table [dbo].[Role]')
GO
IF OBJECT_ID(N'dbo.Role', 'U') IS NULL
CREATE TABLE dbo.Role (
  Id nvarchar(450) NOT NULL,
  TenantId int NOT NULL,
  RoleName nvarchar(max) NOT NULL,
  CONSTRAINT PK_Role PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[RiskType]
--
PRINT (N'Create table [dbo].[RiskType]')
GO
IF OBJECT_ID(N'dbo.RiskType', 'U') IS NULL
CREATE TABLE dbo.RiskType (
  Id nvarchar(450) NOT NULL,
  Type nvarchar(max) NULL,
  CONSTRAINT PK_RiskType PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[RiskStatus]
--
PRINT (N'Create table [dbo].[RiskStatus]')
GO
IF OBJECT_ID(N'dbo.RiskStatus', 'U') IS NULL
CREATE TABLE dbo.RiskStatus (
  Id nvarchar(450) NOT NULL,
  Status nvarchar(max) NULL,
  CONSTRAINT PK_RiskStatus PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[RiskHistoryLog]
--
PRINT (N'Create table [dbo].[RiskHistoryLog]')
GO
IF OBJECT_ID(N'dbo.RiskHistoryLog', 'U') IS NULL
CREATE TABLE dbo.RiskHistoryLog (
  Id nvarchar(450) NOT NULL,
  HistoryLog nvarchar(max) NULL,
  ChangedByUserId nvarchar(450) NULL,
  Action nvarchar(max) NULL,
  ChangedTime datetime2 NOT NULL,
  RevisionNumber int IDENTITY,
  RiskId nvarchar(max) NULL,
  CONSTRAINT PK_RiskHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_RiskHistoryLog_ChangedByUserId] on table [dbo].[RiskHistoryLog]
--
PRINT (N'Create index [IX_RiskHistoryLog_ChangedByUserId] on table [dbo].[RiskHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_RiskHistoryLog_ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.RiskHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.RiskHistoryLog'))
CREATE INDEX IX_RiskHistoryLog_ChangedByUserId
  ON dbo.RiskHistoryLog (ChangedByUserId)
GO

--
-- Create table [dbo].[Risk]
--
PRINT (N'Create table [dbo].[Risk]')
GO
IF OBJECT_ID(N'dbo.Risk', 'U') IS NULL
CREATE TABLE dbo.Risk (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  RiskDetails nvarchar(max) NULL,
  RiskTypeId nvarchar(450) NULL,
  CabPersonId nvarchar(450) NULL,
  RiskStatusId nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  IsSaved bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  SequenceCode nvarchar(max) NULL,
  ProjectDefinitionId nvarchar(450) NULL,
  CONSTRAINT PK_Risk PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_Risk_CabPersonId] on table [dbo].[Risk]
--
PRINT (N'Create index [IX_Risk_CabPersonId] on table [dbo].[Risk]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Risk_CabPersonId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CabPersonId' AND object_id = OBJECT_ID(N'dbo.Risk'))
CREATE INDEX IX_Risk_CabPersonId
  ON dbo.Risk (CabPersonId)
GO

--
-- Create index [IX_Risk_ProjectDefinitionId] on table [dbo].[Risk]
--
PRINT (N'Create index [IX_Risk_ProjectDefinitionId] on table [dbo].[Risk]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Risk_ProjectDefinitionId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectDefinitionId' AND object_id = OBJECT_ID(N'dbo.Risk'))
CREATE INDEX IX_Risk_ProjectDefinitionId
  ON dbo.Risk (ProjectDefinitionId)
GO

--
-- Create index [IX_Risk_RiskStatusId] on table [dbo].[Risk]
--
PRINT (N'Create index [IX_Risk_RiskStatusId] on table [dbo].[Risk]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Risk_RiskStatusId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RiskStatusId' AND object_id = OBJECT_ID(N'dbo.Risk'))
CREATE INDEX IX_Risk_RiskStatusId
  ON dbo.Risk (RiskStatusId)
GO

--
-- Create index [IX_Risk_RiskTypeId] on table [dbo].[Risk]
--
PRINT (N'Create index [IX_Risk_RiskTypeId] on table [dbo].[Risk]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Risk_RiskTypeId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RiskTypeId' AND object_id = OBJECT_ID(N'dbo.Risk'))
CREATE INDEX IX_Risk_RiskTypeId
  ON dbo.Risk (RiskTypeId)
GO

--
-- Create table [dbo].[QualityHistoryLog]
--
PRINT (N'Create table [dbo].[QualityHistoryLog]')
GO
IF OBJECT_ID(N'dbo.QualityHistoryLog', 'U') IS NULL
CREATE TABLE dbo.QualityHistoryLog (
  Id nvarchar(450) NOT NULL,
  HistoryLog nvarchar(max) NULL,
  ChangedByUserId nvarchar(450) NULL,
  Action nvarchar(max) NULL,
  ChangedTime datetime2 NOT NULL,
  RevisionNumber int IDENTITY,
  QualityId nvarchar(max) NULL,
  CONSTRAINT PK_QualityHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_QualityHistoryLog_ChangedByUserId] on table [dbo].[QualityHistoryLog]
--
PRINT (N'Create index [IX_QualityHistoryLog_ChangedByUserId] on table [dbo].[QualityHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_QualityHistoryLog_ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.QualityHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.QualityHistoryLog'))
CREATE INDEX IX_QualityHistoryLog_ChangedByUserId
  ON dbo.QualityHistoryLog (ChangedByUserId)
GO

--
-- Create table [dbo].[Quality]
--
PRINT (N'Create table [dbo].[Quality]')
GO
IF OBJECT_ID(N'dbo.Quality', 'U') IS NULL
CREATE TABLE dbo.Quality (
  Id nvarchar(450) NOT NULL,
  IsDeleted bit NOT NULL,
  IsSaved bit NOT NULL,
  Name nvarchar(max) NULL,
  Criteria nvarchar(max) NULL,
  Tolerance nvarchar(max) NULL,
  Method nvarchar(max) NULL,
  Skills nvarchar(max) NULL,
  SequenceCode nvarchar(max) NULL,
  ProjectDefinitionId nvarchar(450) NULL,
  CONSTRAINT PK_Quality PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_Quality_ProjectDefinitionId] on table [dbo].[Quality]
--
PRINT (N'Create index [IX_Quality_ProjectDefinitionId] on table [dbo].[Quality]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_Quality_ProjectDefinitionId' AND object_id = OBJECT_ID(N'dbo.Quality'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectDefinitionId' AND object_id = OBJECT_ID(N'dbo.Quality'))
CREATE INDEX IX_Quality_ProjectDefinitionId
  ON dbo.Quality (ProjectDefinitionId)
GO

--
-- Create table [dbo].[QRCode]
--
PRINT (N'Create table [dbo].[QRCode]')
GO
IF OBJECT_ID(N'dbo.QRCode', 'U') IS NULL
CREATE TABLE dbo.QRCode (
  Id nvarchar(450) NOT NULL,
  ProjectId nvarchar(450) NULL,
  Date datetime2 NOT NULL,
  VehicleNo nvarchar(max) NULL,
  Location nvarchar(max) NULL,
  PersonalId nvarchar(max) NULL,
  Type int NOT NULL,
  CreatedByUserId nvarchar(max) NULL,
  ActivityTypeId int NOT NULL,
  CONSTRAINT PK_QRCode PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_QRCode_ActivityTypeId] on table [dbo].[QRCode]
--
PRINT (N'Create index [IX_QRCode_ActivityTypeId] on table [dbo].[QRCode]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_QRCode_ActivityTypeId' AND object_id = OBJECT_ID(N'dbo.QRCode'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ActivityTypeId' AND object_id = OBJECT_ID(N'dbo.QRCode'))
CREATE INDEX IX_QRCode_ActivityTypeId
  ON dbo.QRCode (ActivityTypeId)
GO

--
-- Create index [IX_QRCode_ProjectId] on table [dbo].[QRCode]
--
PRINT (N'Create index [IX_QRCode_ProjectId] on table [dbo].[QRCode]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_QRCode_ProjectId' AND object_id = OBJECT_ID(N'dbo.QRCode'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.QRCode'))
CREATE INDEX IX_QRCode_ProjectId
  ON dbo.QRCode (ProjectId)
GO

--
-- Create table [dbo].[Properties]
--
PRINT (N'Create table [dbo].[Properties]')
GO
IF OBJECT_ID(N'dbo.Properties', 'U') IS NULL
CREATE TABLE dbo.Properties (
  Id int IDENTITY,
  [Key] nvarchar(max) NULL,
  Value nvarchar(max) NULL,
  CONSTRAINT PK_Properties PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ProjectType]
--
PRINT (N'Create table [dbo].[ProjectType]')
GO
IF OBJECT_ID(N'dbo.ProjectType', 'U') IS NULL
CREATE TABLE dbo.ProjectType (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  IsDefault bit NOT NULL,
  LocaleCode nvarchar(max) NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_ProjectType PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ProjectToleranceState]
--
PRINT (N'Create table [dbo].[ProjectToleranceState]')
GO
IF OBJECT_ID(N'dbo.ProjectToleranceState', 'U') IS NULL
CREATE TABLE dbo.ProjectToleranceState (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  IsDefault bit NOT NULL,
  LocaleCode nvarchar(max) NULL,
  ListingOrder int NOT NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_ProjectToleranceState PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ProjectTime]
--
PRINT (N'Create table [dbo].[ProjectTime]')
GO
IF OBJECT_ID(N'dbo.ProjectTime', 'U') IS NULL
CREATE TABLE dbo.ProjectTime (
  Id nvarchar(450) NOT NULL,
  ExpectedEndDate datetime2 NULL,
  StartDate datetime2 NULL,
  EndDate datetime2 NULL,
  CalendarTemplateId nvarchar(450) NULL,
  ProjectId nvarchar(450) NULL,
  CONSTRAINT PK_ProjectTime PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectTime_CalendarTemplateId] on table [dbo].[ProjectTime]
--
PRINT (N'Create index [IX_ProjectTime_CalendarTemplateId] on table [dbo].[ProjectTime]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectTime_CalendarTemplateId' AND object_id = OBJECT_ID(N'dbo.ProjectTime'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CalendarTemplateId' AND object_id = OBJECT_ID(N'dbo.ProjectTime'))
CREATE INDEX IX_ProjectTime_CalendarTemplateId
  ON dbo.ProjectTime (CalendarTemplateId)
GO

--
-- Create index [IX_ProjectTime_ProjectId] on table [dbo].[ProjectTime]
--
PRINT (N'Create index [IX_ProjectTime_ProjectId] on table [dbo].[ProjectTime]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectTime_ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectTime'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectTime'))
CREATE UNIQUE INDEX IX_ProjectTime_ProjectId
  ON dbo.ProjectTime (ProjectId)
  WHERE ([ProjectId] IS NOT NULL)
GO

--
-- Create table [dbo].[ProjectTemplate]
--
PRINT (N'Create table [dbo].[ProjectTemplate]')
GO
IF OBJECT_ID(N'dbo.ProjectTemplate', 'U') IS NULL
CREATE TABLE dbo.ProjectTemplate (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_ProjectTemplate PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ProjectTeam]
--
PRINT (N'Create table [dbo].[ProjectTeam]')
GO
IF OBJECT_ID(N'dbo.ProjectTeam', 'U') IS NULL
CREATE TABLE dbo.ProjectTeam (
  Id nvarchar(450) NOT NULL,
  Customer nvarchar(max) NULL,
  ContractingUnit nvarchar(max) NOT NULL,
  ProjectOwnerId nvarchar(450) NULL,
  ProjectManagerId nvarchar(450) NOT NULL,
  ProjectEngineerId nvarchar(450) NULL,
  ProjectId nvarchar(450) NULL,
  CONSTRAINT PK_ProjectTeam PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectTeam_ProjectEngineerId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create index [IX_ProjectTeam_ProjectEngineerId] on table [dbo].[ProjectTeam]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectTeam_ProjectEngineerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectEngineerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
CREATE INDEX IX_ProjectTeam_ProjectEngineerId
  ON dbo.ProjectTeam (ProjectEngineerId)
GO

--
-- Create index [IX_ProjectTeam_ProjectId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create index [IX_ProjectTeam_ProjectId] on table [dbo].[ProjectTeam]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectTeam_ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
CREATE INDEX IX_ProjectTeam_ProjectId
  ON dbo.ProjectTeam (ProjectId)
GO

--
-- Create index [IX_ProjectTeam_ProjectManagerId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create index [IX_ProjectTeam_ProjectManagerId] on table [dbo].[ProjectTeam]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectTeam_ProjectManagerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectManagerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
CREATE INDEX IX_ProjectTeam_ProjectManagerId
  ON dbo.ProjectTeam (ProjectManagerId)
GO

--
-- Create index [IX_ProjectTeam_ProjectOwnerId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create index [IX_ProjectTeam_ProjectOwnerId] on table [dbo].[ProjectTeam]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectTeam_ProjectOwnerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectOwnerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
CREATE INDEX IX_ProjectTeam_ProjectOwnerId
  ON dbo.ProjectTeam (ProjectOwnerId)
GO

--
-- Create table [dbo].[ProjectState]
--
PRINT (N'Create table [dbo].[ProjectState]')
GO
IF OBJECT_ID(N'dbo.ProjectState', 'U') IS NULL
CREATE TABLE dbo.ProjectState (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  IsDefault bit NOT NULL,
  LocaleCode nvarchar(max) NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_ProjectState PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ProjectManagementLevel]
--
PRINT (N'Create table [dbo].[ProjectManagementLevel]')
GO
IF OBJECT_ID(N'dbo.ProjectManagementLevel', 'U') IS NULL
CREATE TABLE dbo.ProjectManagementLevel (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  IsDefault bit NOT NULL,
  LocaleCode nvarchar(max) NULL,
  ListingOrder int NOT NULL,
  IsDeleted bit NOT NULL,
  CONSTRAINT PK_ProjectManagementLevel PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ProjectKPI]
--
PRINT (N'Create table [dbo].[ProjectKPI]')
GO
IF OBJECT_ID(N'dbo.ProjectKPI', 'U') IS NULL
CREATE TABLE dbo.ProjectKPI (
  Id nvarchar(450) NOT NULL,
  CustomLabelOne nvarchar(max) NULL,
  CustomPropOne float NULL,
  CustomLabelTwo nvarchar(max) NULL,
  CustomPropTwo float NULL,
  CustomLabelThree nvarchar(max) NULL,
  CustomPropThree float NULL,
  ProjectId nvarchar(450) NULL,
  CONSTRAINT PK_ProjectKPI PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectKPI_ProjectId] on table [dbo].[ProjectKPI]
--
PRINT (N'Create index [IX_ProjectKPI_ProjectId] on table [dbo].[ProjectKPI]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectKPI_ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectKPI'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectKPI'))
CREATE UNIQUE INDEX IX_ProjectKPI_ProjectId
  ON dbo.ProjectKPI (ProjectId)
  WHERE ([ProjectId] IS NOT NULL)
GO

--
-- Create table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create table [dbo].[ProjectHistoryLog]')
GO
IF OBJECT_ID(N'dbo.ProjectHistoryLog', 'U') IS NULL
CREATE TABLE dbo.ProjectHistoryLog (
  Id nvarchar(450) NOT NULL,
  ProjectStateId nvarchar(450) NULL,
  CreatedDateTime datetime2 NOT NULL,
  CreatedByUserId nvarchar(450) NULL,
  ModifiedDateTime datetime2 NOT NULL,
  ModifiedByUserId nvarchar(450) NULL,
  RevisionNumber int NOT NULL,
  ProjectId nvarchar(450) NULL,
  CONSTRAINT PK_ProjectHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectHistoryLog_CreatedByUserId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create index [IX_ProjectHistoryLog_CreatedByUserId] on table [dbo].[ProjectHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectHistoryLog_CreatedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CreatedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
CREATE INDEX IX_ProjectHistoryLog_CreatedByUserId
  ON dbo.ProjectHistoryLog (CreatedByUserId)
GO

--
-- Create index [IX_ProjectHistoryLog_ModifiedByUserId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create index [IX_ProjectHistoryLog_ModifiedByUserId] on table [dbo].[ProjectHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectHistoryLog_ModifiedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ModifiedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
CREATE INDEX IX_ProjectHistoryLog_ModifiedByUserId
  ON dbo.ProjectHistoryLog (ModifiedByUserId)
GO

--
-- Create index [IX_ProjectHistoryLog_ProjectId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create index [IX_ProjectHistoryLog_ProjectId] on table [dbo].[ProjectHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectHistoryLog_ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
CREATE INDEX IX_ProjectHistoryLog_ProjectId
  ON dbo.ProjectHistoryLog (ProjectId)
GO

--
-- Create index [IX_ProjectHistoryLog_ProjectStateId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create index [IX_ProjectHistoryLog_ProjectStateId] on table [dbo].[ProjectHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectHistoryLog_ProjectStateId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectStateId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
CREATE INDEX IX_ProjectHistoryLog_ProjectStateId
  ON dbo.ProjectHistoryLog (ProjectStateId)
GO

--
-- Create table [dbo].[ProjectFinance]
--
PRINT (N'Create table [dbo].[ProjectFinance]')
GO
IF OBJECT_ID(N'dbo.ProjectFinance', 'U') IS NULL
CREATE TABLE dbo.ProjectFinance (
  Id nvarchar(450) NOT NULL,
  TotalBudget float NULL,
  BudgetLabour float NULL,
  BudgetMaterial float NULL,
  CurrencyId int NULL,
  ProjectId nvarchar(450) NULL,
  CONSTRAINT PK_ProjectFinance PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectFinance_CurrencyId] on table [dbo].[ProjectFinance]
--
PRINT (N'Create index [IX_ProjectFinance_CurrencyId] on table [dbo].[ProjectFinance]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectFinance_CurrencyId' AND object_id = OBJECT_ID(N'dbo.ProjectFinance'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CurrencyId' AND object_id = OBJECT_ID(N'dbo.ProjectFinance'))
CREATE INDEX IX_ProjectFinance_CurrencyId
  ON dbo.ProjectFinance (CurrencyId)
GO

--
-- Create index [IX_ProjectFinance_ProjectId] on table [dbo].[ProjectFinance]
--
PRINT (N'Create index [IX_ProjectFinance_ProjectId] on table [dbo].[ProjectFinance]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectFinance_ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectFinance'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectFinance'))
CREATE UNIQUE INDEX IX_ProjectFinance_ProjectId
  ON dbo.ProjectFinance (ProjectId)
  WHERE ([ProjectId] IS NOT NULL)
GO

--
-- Create table [dbo].[ProjectDefinitionHistoryLog]
--
PRINT (N'Create table [dbo].[ProjectDefinitionHistoryLog]')
GO
IF OBJECT_ID(N'dbo.ProjectDefinitionHistoryLog', 'U') IS NULL
CREATE TABLE dbo.ProjectDefinitionHistoryLog (
  Id nvarchar(450) NOT NULL,
  HistoryLog nvarchar(max) NULL,
  ProjectDefinitionId nvarchar(max) NULL,
  ChangedByUserId nvarchar(450) NULL,
  Action nvarchar(max) NULL,
  ChangedTime datetime2 NOT NULL,
  RevisionNumber int IDENTITY,
  CONSTRAINT PK_ProjectDefinitionHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectDefinitionHistoryLog_ChangedByUserId] on table [dbo].[ProjectDefinitionHistoryLog]
--
PRINT (N'Create index [IX_ProjectDefinitionHistoryLog_ChangedByUserId] on table [dbo].[ProjectDefinitionHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectDefinitionHistoryLog_ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinitionHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinitionHistoryLog'))
CREATE INDEX IX_ProjectDefinitionHistoryLog_ChangedByUserId
  ON dbo.ProjectDefinitionHistoryLog (ChangedByUserId)
GO

--
-- Create table [dbo].[ProjectDefinition]
--
PRINT (N'Create table [dbo].[ProjectDefinition]')
GO
IF OBJECT_ID(N'dbo.ProjectDefinition', 'U') IS NULL
CREATE TABLE dbo.ProjectDefinition (
  Id nvarchar(450) NOT NULL,
  Description nvarchar(max) NOT NULL,
  ProjectTypeId nvarchar(450) NULL,
  ProjectManagementLevelId nvarchar(450) NOT NULL,
  ProjectToleranceStateId nvarchar(450) NOT NULL,
  ProjectTemplateId nvarchar(450) NULL,
  SequenceCode nvarchar(450) NULL,
  Name nvarchar(max) NULL,
  CONSTRAINT PK_ProjectDefinition PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_ProjectDefinition_ProjectManagementLevelId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create index [IX_ProjectDefinition_ProjectManagementLevelId] on table [dbo].[ProjectDefinition]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectDefinition_ProjectManagementLevelId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectManagementLevelId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
CREATE INDEX IX_ProjectDefinition_ProjectManagementLevelId
  ON dbo.ProjectDefinition (ProjectManagementLevelId)
GO

--
-- Create index [IX_ProjectDefinition_ProjectTemplateId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create index [IX_ProjectDefinition_ProjectTemplateId] on table [dbo].[ProjectDefinition]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectDefinition_ProjectTemplateId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectTemplateId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
CREATE INDEX IX_ProjectDefinition_ProjectTemplateId
  ON dbo.ProjectDefinition (ProjectTemplateId)
GO

--
-- Create index [IX_ProjectDefinition_ProjectToleranceStateId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create index [IX_ProjectDefinition_ProjectToleranceStateId] on table [dbo].[ProjectDefinition]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectDefinition_ProjectToleranceStateId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectToleranceStateId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
CREATE INDEX IX_ProjectDefinition_ProjectToleranceStateId
  ON dbo.ProjectDefinition (ProjectToleranceStateId)
GO

--
-- Create index [IX_ProjectDefinition_ProjectTypeId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create index [IX_ProjectDefinition_ProjectTypeId] on table [dbo].[ProjectDefinition]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectDefinition_ProjectTypeId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectTypeId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
CREATE INDEX IX_ProjectDefinition_ProjectTypeId
  ON dbo.ProjectDefinition (ProjectTypeId)
GO

--
-- Create index [IX_ProjectDefinition_SequenceCode] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create index [IX_ProjectDefinition_SequenceCode] on table [dbo].[ProjectDefinition]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_ProjectDefinition_SequenceCode' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'SequenceCode' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
CREATE UNIQUE INDEX IX_ProjectDefinition_SequenceCode
  ON dbo.ProjectDefinition (SequenceCode)
  WHERE ([SequenceCode] IS NOT NULL)
GO

--
-- Create table [dbo].[PbsTools]
--
PRINT (N'Create table [dbo].[PbsTools]')
GO
IF OBJECT_ID(N'dbo.PbsTools', 'U') IS NULL
CREATE TABLE dbo.PbsTools (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  Quantity float NOT NULL,
  CONSTRAINT PK_PbsTools PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsTools_CoperateProductCatalogId] on table [dbo].[PbsTools]
--
PRINT (N'Create index [IX_PbsTools_CoperateProductCatalogId] on table [dbo].[PbsTools]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsTools_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsTools'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsTools'))
CREATE INDEX IX_PbsTools_CoperateProductCatalogId
  ON dbo.PbsTools (CoperateProductCatalogId)
GO

--
-- Create index [IX_PbsTools_PbsProductId] on table [dbo].[PbsTools]
--
PRINT (N'Create index [IX_PbsTools_PbsProductId] on table [dbo].[PbsTools]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsTools_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsTools'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsTools'))
CREATE INDEX IX_PbsTools_PbsProductId
  ON dbo.PbsTools (PbsProductId)
GO

--
-- Create table [dbo].[PbsToleranceState]
--
PRINT (N'Create table [dbo].[PbsToleranceState]')
GO
IF OBJECT_ID(N'dbo.PbsToleranceState', 'U') IS NULL
CREATE TABLE dbo.PbsToleranceState (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_PbsToleranceState PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsTaxonomyLevel]
--
PRINT (N'Create table [dbo].[PbsTaxonomyLevel]')
GO
IF OBJECT_ID(N'dbo.PbsTaxonomyLevel', 'U') IS NULL
CREATE TABLE dbo.PbsTaxonomyLevel (
  Id nvarchar(450) NOT NULL,
  Type nvarchar(max) NULL,
  Name nvarchar(max) NULL,
  [Order] int NOT NULL,
  CONSTRAINT PK_PbsTaxonomyLevel PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsTaxonomy]
--
PRINT (N'Create table [dbo].[PbsTaxonomy]')
GO
IF OBJECT_ID(N'dbo.PbsTaxonomy', 'U') IS NULL
CREATE TABLE dbo.PbsTaxonomy (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_PbsTaxonomy PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsSkillExperience]
--
PRINT (N'Create table [dbo].[PbsSkillExperience]')
GO
IF OBJECT_ID(N'dbo.PbsSkillExperience', 'U') IS NULL
CREATE TABLE dbo.PbsSkillExperience (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  PbsSkillId nvarchar(450) NULL,
  PbsExperienceId nvarchar(450) NULL,
  CONSTRAINT PK_PbsSkillExperience PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsSkillExperience_PbsExperienceId] on table [dbo].[PbsSkillExperience]
--
PRINT (N'Create index [IX_PbsSkillExperience_PbsExperienceId] on table [dbo].[PbsSkillExperience]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsSkillExperience_PbsExperienceId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsExperienceId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
CREATE INDEX IX_PbsSkillExperience_PbsExperienceId
  ON dbo.PbsSkillExperience (PbsExperienceId)
GO

--
-- Create index [IX_PbsSkillExperience_PbsProductId] on table [dbo].[PbsSkillExperience]
--
PRINT (N'Create index [IX_PbsSkillExperience_PbsProductId] on table [dbo].[PbsSkillExperience]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsSkillExperience_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
CREATE INDEX IX_PbsSkillExperience_PbsProductId
  ON dbo.PbsSkillExperience (PbsProductId)
GO

--
-- Create index [IX_PbsSkillExperience_PbsSkillId] on table [dbo].[PbsSkillExperience]
--
PRINT (N'Create index [IX_PbsSkillExperience_PbsSkillId] on table [dbo].[PbsSkillExperience]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsSkillExperience_PbsSkillId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsSkillId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
CREATE INDEX IX_PbsSkillExperience_PbsSkillId
  ON dbo.PbsSkillExperience (PbsSkillId)
GO

--
-- Create table [dbo].[PbsSkill]
--
PRINT (N'Create table [dbo].[PbsSkill]')
GO
IF OBJECT_ID(N'dbo.PbsSkill', 'U') IS NULL
CREATE TABLE dbo.PbsSkill (
  Id nvarchar(450) NOT NULL,
  LocaleCode nvarchar(max) NULL,
  ParentId nvarchar(450) NULL,
  Title nvarchar(max) NULL,
  CONSTRAINT PK_PbsSkill PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsSkill_ParentId] on table [dbo].[PbsSkill]
--
PRINT (N'Create index [IX_PbsSkill_ParentId] on table [dbo].[PbsSkill]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsSkill_ParentId' AND object_id = OBJECT_ID(N'dbo.PbsSkill'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ParentId' AND object_id = OBJECT_ID(N'dbo.PbsSkill'))
CREATE INDEX IX_PbsSkill_ParentId
  ON dbo.PbsSkill (ParentId)
GO

--
-- Create table [dbo].[PbsRisk]
--
PRINT (N'Create table [dbo].[PbsRisk]')
GO
IF OBJECT_ID(N'dbo.PbsRisk', 'U') IS NULL
CREATE TABLE dbo.PbsRisk (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  RiskId nvarchar(450) NULL,
  CONSTRAINT PK_PbsRisk PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsRisk_PbsProductId] on table [dbo].[PbsRisk]
--
PRINT (N'Create index [IX_PbsRisk_PbsProductId] on table [dbo].[PbsRisk]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsRisk_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsRisk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsRisk'))
CREATE INDEX IX_PbsRisk_PbsProductId
  ON dbo.PbsRisk (PbsProductId)
GO

--
-- Create index [IX_PbsRisk_RiskId] on table [dbo].[PbsRisk]
--
PRINT (N'Create index [IX_PbsRisk_RiskId] on table [dbo].[PbsRisk]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsRisk_RiskId' AND object_id = OBJECT_ID(N'dbo.PbsRisk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RiskId' AND object_id = OBJECT_ID(N'dbo.PbsRisk'))
CREATE INDEX IX_PbsRisk_RiskId
  ON dbo.PbsRisk (RiskId)
GO

--
-- Create table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create table [dbo].[PbsQualityResponsibility]')
GO
IF OBJECT_ID(N'dbo.PbsQualityResponsibility', 'U') IS NULL
CREATE TABLE dbo.PbsQualityResponsibility (
  Id nvarchar(450) NOT NULL,
  QualityProducerId nvarchar(450) NULL,
  QualityReviewerId nvarchar(450) NULL,
  QualityApproverId nvarchar(450) NULL,
  CONSTRAINT PK_PbsQualityResponsibility PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsQualityResponsibility_QualityApproverId] on table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create index [IX_PbsQualityResponsibility_QualityApproverId] on table [dbo].[PbsQualityResponsibility]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsQualityResponsibility_QualityApproverId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityApproverId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
CREATE INDEX IX_PbsQualityResponsibility_QualityApproverId
  ON dbo.PbsQualityResponsibility (QualityApproverId)
GO

--
-- Create index [IX_PbsQualityResponsibility_QualityProducerId] on table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create index [IX_PbsQualityResponsibility_QualityProducerId] on table [dbo].[PbsQualityResponsibility]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsQualityResponsibility_QualityProducerId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityProducerId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
CREATE INDEX IX_PbsQualityResponsibility_QualityProducerId
  ON dbo.PbsQualityResponsibility (QualityProducerId)
GO

--
-- Create index [IX_PbsQualityResponsibility_QualityReviewerId] on table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create index [IX_PbsQualityResponsibility_QualityReviewerId] on table [dbo].[PbsQualityResponsibility]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsQualityResponsibility_QualityReviewerId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityReviewerId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
CREATE INDEX IX_PbsQualityResponsibility_QualityReviewerId
  ON dbo.PbsQualityResponsibility (QualityReviewerId)
GO

--
-- Create table [dbo].[PbsQuality]
--
PRINT (N'Create table [dbo].[PbsQuality]')
GO
IF OBJECT_ID(N'dbo.PbsQuality', 'U') IS NULL
CREATE TABLE dbo.PbsQuality (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  QualityId nvarchar(450) NULL,
  CONSTRAINT PK_PbsQuality PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsQuality_PbsProductId] on table [dbo].[PbsQuality]
--
PRINT (N'Create index [IX_PbsQuality_PbsProductId] on table [dbo].[PbsQuality]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsQuality_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsQuality'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsQuality'))
CREATE INDEX IX_PbsQuality_PbsProductId
  ON dbo.PbsQuality (PbsProductId)
GO

--
-- Create index [IX_PbsQuality_QualityId] on table [dbo].[PbsQuality]
--
PRINT (N'Create index [IX_PbsQuality_QualityId] on table [dbo].[PbsQuality]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsQuality_QualityId' AND object_id = OBJECT_ID(N'dbo.PbsQuality'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityId' AND object_id = OBJECT_ID(N'dbo.PbsQuality'))
CREATE INDEX IX_PbsQuality_QualityId
  ON dbo.PbsQuality (QualityId)
GO

--
-- Create table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create table [dbo].[PbsProductTaxonomy]')
GO
IF OBJECT_ID(N'dbo.PbsProductTaxonomy', 'U') IS NULL
CREATE TABLE dbo.PbsProductTaxonomy (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  PbsTaxonomyId nvarchar(450) NULL,
  ParentId nvarchar(max) NULL,
  PbsTaxonomyLevelId nvarchar(450) NULL,
  CONSTRAINT PK_PbsProductTaxonomy PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsProductTaxonomy_PbsProductId] on table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create index [IX_PbsProductTaxonomy_PbsProductId] on table [dbo].[PbsProductTaxonomy]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProductTaxonomy_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
CREATE INDEX IX_PbsProductTaxonomy_PbsProductId
  ON dbo.PbsProductTaxonomy (PbsProductId)
GO

--
-- Create index [IX_PbsProductTaxonomy_PbsTaxonomyId] on table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create index [IX_PbsProductTaxonomy_PbsTaxonomyId] on table [dbo].[PbsProductTaxonomy]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProductTaxonomy_PbsTaxonomyId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsTaxonomyId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
CREATE INDEX IX_PbsProductTaxonomy_PbsTaxonomyId
  ON dbo.PbsProductTaxonomy (PbsTaxonomyId)
GO

--
-- Create index [IX_PbsProductTaxonomy_PbsTaxonomyLevelId] on table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create index [IX_PbsProductTaxonomy_PbsTaxonomyLevelId] on table [dbo].[PbsProductTaxonomy]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProductTaxonomy_PbsTaxonomyLevelId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsTaxonomyLevelId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
CREATE INDEX IX_PbsProductTaxonomy_PbsTaxonomyLevelId
  ON dbo.PbsProductTaxonomy (PbsTaxonomyLevelId)
GO

--
-- Create table [dbo].[PbsProductStatus]
--
PRINT (N'Create table [dbo].[PbsProductStatus]')
GO
IF OBJECT_ID(N'dbo.PbsProductStatus', 'U') IS NULL
CREATE TABLE dbo.PbsProductStatus (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  DisplayOrder int NOT NULL DEFAULT (0),
  CONSTRAINT PK_PbsProductStatus PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsProductItemType]
--
PRINT (N'Create table [dbo].[PbsProductItemType]')
GO
IF OBJECT_ID(N'dbo.PbsProductItemType', 'U') IS NULL
CREATE TABLE dbo.PbsProductItemType (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_PbsProductItemType PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsProduct]
--
PRINT (N'Create table [dbo].[PbsProduct]')
GO
IF OBJECT_ID(N'dbo.PbsProduct', 'U') IS NULL
CREATE TABLE dbo.PbsProduct (
  Id nvarchar(450) NOT NULL,
  ProductId nvarchar(max) NULL,
  Name nvarchar(max) NULL,
  PbsProductItemTypeId nvarchar(450) NULL,
  PbsProductStatusId nvarchar(450) NULL,
  Scope nvarchar(max) NULL,
  Contract nvarchar(max) NULL,
  ProductPurpose nvarchar(max) NULL,
  ProductComposition nvarchar(max) NULL,
  ProductDerivation nvarchar(max) NULL,
  ProductFormatPresentation nvarchar(max) NULL,
  PbsToleranceStateId nvarchar(450) NULL,
  ParentId nvarchar(450) NULL,
  PbsQualityResponsibilityId nvarchar(450) NULL,
  ProjectId nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_PbsProduct PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsProduct_ParentId] on table [dbo].[PbsProduct]
--
PRINT (N'Create index [IX_PbsProduct_ParentId] on table [dbo].[PbsProduct]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProduct_ParentId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ParentId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
CREATE INDEX IX_PbsProduct_ParentId
  ON dbo.PbsProduct (ParentId)
GO

--
-- Create index [IX_PbsProduct_PbsProductItemTypeId] on table [dbo].[PbsProduct]
--
PRINT (N'Create index [IX_PbsProduct_PbsProductItemTypeId] on table [dbo].[PbsProduct]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProduct_PbsProductItemTypeId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductItemTypeId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
CREATE INDEX IX_PbsProduct_PbsProductItemTypeId
  ON dbo.PbsProduct (PbsProductItemTypeId)
GO

--
-- Create index [IX_PbsProduct_PbsProductStatusId] on table [dbo].[PbsProduct]
--
PRINT (N'Create index [IX_PbsProduct_PbsProductStatusId] on table [dbo].[PbsProduct]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProduct_PbsProductStatusId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductStatusId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
CREATE INDEX IX_PbsProduct_PbsProductStatusId
  ON dbo.PbsProduct (PbsProductStatusId)
GO

--
-- Create index [IX_PbsProduct_PbsQualityResponsibilityId] on table [dbo].[PbsProduct]
--
PRINT (N'Create index [IX_PbsProduct_PbsQualityResponsibilityId] on table [dbo].[PbsProduct]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProduct_PbsQualityResponsibilityId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsQualityResponsibilityId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
CREATE INDEX IX_PbsProduct_PbsQualityResponsibilityId
  ON dbo.PbsProduct (PbsQualityResponsibilityId)
GO

--
-- Create index [IX_PbsProduct_PbsToleranceStateId] on table [dbo].[PbsProduct]
--
PRINT (N'Create index [IX_PbsProduct_PbsToleranceStateId] on table [dbo].[PbsProduct]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProduct_PbsToleranceStateId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsToleranceStateId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
CREATE INDEX IX_PbsProduct_PbsToleranceStateId
  ON dbo.PbsProduct (PbsToleranceStateId)
GO

--
-- Create index [IX_PbsProduct_ProjectId] on table [dbo].[PbsProduct]
--
PRINT (N'Create index [IX_PbsProduct_ProjectId] on table [dbo].[PbsProduct]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsProduct_ProjectId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
CREATE INDEX IX_PbsProduct_ProjectId
  ON dbo.PbsProduct (ProjectId)
GO

--
-- Create procedure [dbo].[GetPbsTreeStructureDataForVpPbsTreeStructure3]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsTreeStructureDataForVpPbsTreeStructure3]')
GO
IF OBJECT_ID(N'dbo.GetPbsTreeStructureDataForVpPbsTreeStructure3', 'P') IS NULL
EXEC sp_executesql N' 
 
 CREATE OR ALTER PROCEDURE dbo.GetPbsTreeStructureDataForVpPbsTreeStructure3 @Id nvarchar(450)
 AS
 WITH ret
 AS
 (SELECT
     *
   FROM PbsProduct
   WHERE Id = @Id
   UNION ALL
   SELECT
     t.*
   FROM PbsProduct t
   INNER JOIN ret r
     ON t.ProductId = r.ParentId
   WHERE r.IsDeleted = 0)
 SELECT
   ret.Id
  ,Title
  ,StartDate
  ,EndDate
  ,ProductId AS PbsSequenceId
  ,ProductId AS SequenceId
  ,ParentId
  ,PbsProductStatusId
  ,t4.TreeIndex
 FROM ret
 LEFT OUTER JOIN PbsTreeIndex t4
   ON ret.ProductId = t4.PbsProductId
 WHERE ret.IsDeleted = 0;
 '
GO

--
-- Create procedure [dbo].[GetPbsTreeStructureDataForVpPbsTreeStructure2]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsTreeStructureDataForVpPbsTreeStructure2]')
GO
IF OBJECT_ID(N'dbo.GetPbsTreeStructureDataForVpPbsTreeStructure2', 'P') IS NULL
EXEC sp_executesql N' 
 
 CREATE OR ALTER PROCEDURE dbo.GetPbsTreeStructureDataForVpPbsTreeStructure2 @Id nvarchar(450)
 AS
 WITH ret
 AS
 (SELECT
     *
   FROM PbsProduct
   WHERE Id = @Id
   UNION ALL
   SELECT
     t.*
   FROM PbsProduct t
   INNER JOIN ret r
     ON t.ParentId = r.ProductId
   WHERE r.IsDeleted = 0)
 SELECT
   ret.Id
  ,Title
  ,StartDate
  ,EndDate
  ,ProductId AS PbsSequenceId
  ,ProductId AS SequenceId
  ,ParentId
  ,PbsProductStatusId
  ,t4.TreeIndex
 FROM ret
 LEFT OUTER JOIN PbsTreeIndex t4
   ON ret.ProductId = t4.PbsProductId
 WHERE ret.IsDeleted = 0;
 '
GO

--
-- Create procedure [dbo].[GetPbsTreeStructureDataForVpPbsTreeStructure]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsTreeStructureDataForVpPbsTreeStructure]')
GO
IF OBJECT_ID(N'dbo.GetPbsTreeStructureDataForVpPbsTreeStructure', 'P') IS NULL
EXEC sp_executesql N' 
 
 CREATE OR ALTER PROCEDURE dbo.GetPbsTreeStructureDataForVpPbsTreeStructure @Id nvarchar(450)
 AS
 WITH ret
 AS
 (SELECT
     *
   FROM PbsProduct
   WHERE Id = @Id
   UNION ALL
   SELECT
     t.*
   FROM PbsProduct t
   INNER JOIN ret r
     ON t.ProductId = r.ParentId
   WHERE r.IsDeleted = 0)
 SELECT
   ret.Id
  ,Title
  ,StartDate
  ,EndDate
  ,ProductId AS PbsSequenceId
  ,ProductId AS SequenceId
  ,ParentId
  ,PbsProductStatusId
  ,t4.TreeIndex
 FROM ret
 LEFT OUTER JOIN PbsTreeIndex t4
   ON ret.ProductId = t4.PbsProductId
 WHERE ret.IsDeleted = 0;
 '
GO

--
-- Create procedure [dbo].[GetPbsResourceConsolidatedQuantity]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsResourceConsolidatedQuantity]')
GO
IF OBJECT_ID(N'dbo.GetPbsResourceConsolidatedQuantity', 'P') IS NULL
EXEC sp_executesql N'


CREATE OR ALTER PROCEDURE dbo.GetPbsResourceConsolidatedQuantity @Id nvarchar(450)
AS
WITH ret
                                                                            AS
                                                                            (SELECT
                                                                            *
                                                                            FROM PbsProduct
                                                                            WHERE Id = @Id
                                                                            UNION ALL
                                                                            SELECT
                                                                            t.*
                                                                            FROM PbsProduct t
                                                                            INNER JOIN ret r
                                                                            ON t.ParentId = r.ProductId WHERE r.IsDeleted = 0
                                                                            )
                                                                            SELECT
                                                                             ret.ProductId,ret.Id,ret.ParentId
                                                                            FROM ret WHERE ret.Id != @Id AND ret.IsDeleted = 0;
                                                                            '
GO

--
-- Create procedure [dbo].[GetPbsForVPpmol]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsForVPpmol]')
GO
IF OBJECT_ID(N'dbo.GetPbsForVPpmol', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetPbsForVPpmol
AS
SELECT
                                  PMol.Id
                                 ,PMol.Title
                                 ,Null AS ParentId
                                 ,''PMOL'' AS Type
                                 ,PMol.ExecutionDate AS StartDate
                                 ,PMol.ExecutionDate AS EndDate
                                 ,PMol.ProjectMoleculeId AS PMOLSequenceId
                                 ,PMol.StatusId AS PmolStatus
                                 ,Bor.ItemId AS BORSequenceId
                                 ,PbsProduct.ProductId AS PBSSequenceId
                                FROM dbo.PMol
                                LEFT OUTER JOIN dbo.Bor
                                  ON PMol.BorId = Bor.Id
                                LEFT OUTER JOIN dbo.PbsProduct
                                  ON Bor.PbsProductId = PbsProduct.Id
                                WHERE PMol.BorId IS NOT NULL;
                                SELECT
                                  MilestoneHeader.SequenceId AS MilestoneSequenceId
                                 ,MilestoneHeader.Title
                                 ,MilestoneHeader.ExpectedStartDate AS StartDate
                                 ,MilestoneHeader.ExpectedEndDate AS EndDate
                                 ,MilestoneHeader.Id
                                 ,''Milestone'' AS Type
                                FROM dbo.MilestoneHeader;
                                '
GO

--
-- Create procedure [dbo].[GetPbsForVPpbs]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsForVPpbs]')
GO
IF OBJECT_ID(N'dbo.GetPbsForVPpbs', 'P') IS NULL
EXEC sp_executesql N'

CREATE OR ALTER PROCEDURE dbo.GetPbsForVPpbs
AS
SELECT PbsProduct.Id,PbsProduct.Title,PbsProduct.ParentId,''PBS'' AS Type,PbsProduct.StartDate,PbsProduct.EndDate,PbsProduct.ProductId AS PBSSequenceId,PbsProduct.PbsProductStatusId As PbsStatus , t4.TreeIndex FROM dbo.PbsProduct LEFT OUTER JOIN PbsTreeIndex t4 ON PbsProduct.ProductId = t4.PbsProductId where NodeType = ''P'' AND IsDeleted = ''0''; 
SELECT
MilestoneHeader.SequenceId AS MilestoneSequenceId
,MilestoneHeader.Title
,MilestoneHeader.ExpectedStartDate AS StartDate
,MilestoneHeader.ExpectedEndDate AS EndDate
,MilestoneHeader.Id
,''Milestone'' AS Type
FROM dbo.MilestoneHeader;
'
GO

--
-- Create procedure [dbo].[GetPbsForVPbor]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsForVPbor]')
GO
IF OBJECT_ID(N'dbo.GetPbsForVPbor', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetPbsForVPbor
AS
SELECT
                                  Bor.Id
                                 ,Bor.Title
                                 ,Null AS ParentId
                                 ,''BOR'' AS Type
                                 ,Bor.ItemId AS BORSequenceId
                                 ,PbsProduct.ProductId AS PBSSequenceId
                                 ,Bor.StartDate
                                 ,Bor.EndDate
                                 ,Bor.BorStatusId As BorStatus
                                FROM dbo.Bor
                                LEFT OUTER JOIN dbo.PbsProduct
                                  ON Bor.PbsProductId = PbsProduct.Id
                                WHERE Bor.PbsProductId IS NOT NULL;
                                  SELECT
                                  MilestoneHeader.SequenceId AS MilestoneSequenceId
                                 ,MilestoneHeader.Title
                                 ,MilestoneHeader.ExpectedStartDate AS StartDate
                                 ,MilestoneHeader.ExpectedEndDate AS EndDate
                                 ,MilestoneHeader.Id
                                 ,''Milestone'' AS Type
                                FROM dbo.MilestoneHeader;
                                '
GO

--
-- Create procedure [dbo].[GetPbsForVPAll]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsForVPAll]')
GO
IF OBJECT_ID(N'dbo.GetPbsForVPAll', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetPbsForVPAll
AS
SELECT PbsProduct.Id,PbsProduct.Title,PbsProduct.ParentId,''PBS'' AS Type,PbsProduct.StartDate,PbsProduct.EndDate,PbsProduct.ProductId AS PBSSequenceId,PbsProduct.PbsProductStatusId As PbsStatus , t4.TreeIndex  FROM dbo.PbsProduct LEFT OUTER JOIN PbsTreeIndex t4 ON PbsProduct.ProductId = t4.PbsProductId where NodeType = ''P'' AND IsDeleted = ''0'' 
                                ; SELECT
                                  Bor.Id
                                 ,Bor.Title
                                 ,Bor.PbsProductId AS ParentId
                                 ,''BOR'' AS Type
                                 ,Bor.ItemId AS BORSequenceId
                                 ,Bor.BorStatusId As BorStatus
                                 ,PbsProduct.ProductId AS PBSSequenceId
                                 ,Bor.StartDate
                                 ,Bor.EndDate
                                FROM dbo.Bor
                                LEFT OUTER JOIN dbo.PbsProduct
                                  ON Bor.PbsProductId = PbsProduct.Id
                                WHERE Bor.PbsProductId IS NOT NULL;
                               SELECT
                                  PMol.Id
                                 ,PMol.Title
                                 ,PMol.BorId AS ParentId
                                 ,''PMOL'' AS Type
                                 ,PMol.ExecutionDate AS StartDate
                                 ,PMol.ExecutionDate AS EndDate
                                 ,PMol.ProjectMoleculeId AS PMOLSequenceId
                                 ,PMol.StatusId AS PmolStatus
                                 ,Bor.ItemId AS BORSequenceId
                                 ,PbsProduct.ProductId AS PBSSequenceId
                                FROM dbo.PMol
                                LEFT OUTER JOIN dbo.Bor
                                  ON PMol.BorId = Bor.Id
                                LEFT OUTER JOIN dbo.PbsProduct
                                  ON Bor.PbsProductId = PbsProduct.Id
                                WHERE PMol.BorId IS NOT NULL;
                                SELECT
                                  MilestoneHeader.SequenceId AS MilestoneSequenceId
                                 ,MilestoneHeader.Title
                                 ,MilestoneHeader.ExpectedStartDate AS StartDate
                                 ,MilestoneHeader.ExpectedEndDate AS EndDate
                                 ,MilestoneHeader.Id
                                 ,''Milestone'' AS Type
                                FROM dbo.MilestoneHeader;
                                '
GO

--
-- Create table [dbo].[PbsMaterial]
--
PRINT (N'Create table [dbo].[PbsMaterial]')
GO
IF OBJECT_ID(N'dbo.PbsMaterial', 'U') IS NULL
CREATE TABLE dbo.PbsMaterial (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  Quantity float NOT NULL,
  CONSTRAINT PK_PbsMaterial PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsMaterial_CoperateProductCatalogId] on table [dbo].[PbsMaterial]
--
PRINT (N'Create index [IX_PbsMaterial_CoperateProductCatalogId] on table [dbo].[PbsMaterial]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsMaterial_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsMaterial'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsMaterial'))
CREATE INDEX IX_PbsMaterial_CoperateProductCatalogId
  ON dbo.PbsMaterial (CoperateProductCatalogId)
GO

--
-- Create index [IX_PbsMaterial_PbsProductId] on table [dbo].[PbsMaterial]
--
PRINT (N'Create index [IX_PbsMaterial_PbsProductId] on table [dbo].[PbsMaterial]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsMaterial_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsMaterial'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsMaterial'))
CREATE INDEX IX_PbsMaterial_PbsProductId
  ON dbo.PbsMaterial (PbsProductId)
GO

--
-- Create table [dbo].[PbsLabour]
--
PRINT (N'Create table [dbo].[PbsLabour]')
GO
IF OBJECT_ID(N'dbo.PbsLabour', 'U') IS NULL
CREATE TABLE dbo.PbsLabour (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  Quantity float NOT NULL,
  CONSTRAINT PK_PbsLabour PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsLabour_CoperateProductCatalogId] on table [dbo].[PbsLabour]
--
PRINT (N'Create index [IX_PbsLabour_CoperateProductCatalogId] on table [dbo].[PbsLabour]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsLabour_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsLabour'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsLabour'))
CREATE INDEX IX_PbsLabour_CoperateProductCatalogId
  ON dbo.PbsLabour (CoperateProductCatalogId)
GO

--
-- Create index [IX_PbsLabour_PbsProductId] on table [dbo].[PbsLabour]
--
PRINT (N'Create index [IX_PbsLabour_PbsProductId] on table [dbo].[PbsLabour]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsLabour_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsLabour'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsLabour'))
CREATE INDEX IX_PbsLabour_PbsProductId
  ON dbo.PbsLabour (PbsProductId)
GO

--
-- Create table [dbo].[PbsInstructionLink]
--
PRINT (N'Create table [dbo].[PbsInstructionLink]')
GO
IF OBJECT_ID(N'dbo.PbsInstructionLink', 'U') IS NULL
CREATE TABLE dbo.PbsInstructionLink (
  Id nvarchar(450) NOT NULL,
  Title nvarchar(max) NULL,
  Link nvarchar(max) NULL,
  PbsInstructionId nvarchar(450) NULL,
  CONSTRAINT PK_PbsInstructionLink PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsInstructionLink_PbsInstructionId] on table [dbo].[PbsInstructionLink]
--
PRINT (N'Create index [IX_PbsInstructionLink_PbsInstructionId] on table [dbo].[PbsInstructionLink]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsInstructionLink_PbsInstructionId' AND object_id = OBJECT_ID(N'dbo.PbsInstructionLink'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsInstructionId' AND object_id = OBJECT_ID(N'dbo.PbsInstructionLink'))
CREATE INDEX IX_PbsInstructionLink_PbsInstructionId
  ON dbo.PbsInstructionLink (PbsInstructionId)
GO

--
-- Create table [dbo].[PbsInstructionFamily]
--
PRINT (N'Create table [dbo].[PbsInstructionFamily]')
GO
IF OBJECT_ID(N'dbo.PbsInstructionFamily', 'U') IS NULL
CREATE TABLE dbo.PbsInstructionFamily (
  Id nvarchar(450) NOT NULL,
  Family nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_PbsInstructionFamily PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsInstruction]
--
PRINT (N'Create table [dbo].[PbsInstruction]')
GO
IF OBJECT_ID(N'dbo.PbsInstruction', 'U') IS NULL
CREATE TABLE dbo.PbsInstruction (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  PbsInstructionFamilyId nvarchar(450) NULL,
  InstructionsDetails nvarchar(max) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  IsSaved bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  Name nvarchar(max) NULL,
  SequenceCode nvarchar(max) NULL,
  InstructionType nvarchar(max) NULL,
  CONSTRAINT PK_PbsInstruction PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsInstruction_PbsInstructionFamilyId] on table [dbo].[PbsInstruction]
--
PRINT (N'Create index [IX_PbsInstruction_PbsInstructionFamilyId] on table [dbo].[PbsInstruction]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsInstruction_PbsInstructionFamilyId' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsInstructionFamilyId' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
CREATE INDEX IX_PbsInstruction_PbsInstructionFamilyId
  ON dbo.PbsInstruction (PbsInstructionFamilyId)
GO

--
-- Create index [IX_PbsInstruction_PbsProductId] on table [dbo].[PbsInstruction]
--
PRINT (N'Create index [IX_PbsInstruction_PbsProductId] on table [dbo].[PbsInstruction]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsInstruction_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
CREATE INDEX IX_PbsInstruction_PbsProductId
  ON dbo.PbsInstruction (PbsProductId)
GO

--
-- Create table [dbo].[PbsHistoryLog]
--
PRINT (N'Create table [dbo].[PbsHistoryLog]')
GO
IF OBJECT_ID(N'dbo.PbsHistoryLog', 'U') IS NULL
CREATE TABLE dbo.PbsHistoryLog (
  Id nvarchar(450) NOT NULL,
  HistoryLog nvarchar(max) NULL,
  ChangedByUserId nvarchar(450) NULL,
  Action nvarchar(max) NULL,
  ChangedTime datetime2 NOT NULL,
  RevisionNumber int IDENTITY,
  PbsProductId nvarchar(max) NULL,
  CONSTRAINT PK_PbsHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsHistoryLog_ChangedByUserId] on table [dbo].[PbsHistoryLog]
--
PRINT (N'Create index [IX_PbsHistoryLog_ChangedByUserId] on table [dbo].[PbsHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsHistoryLog_ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.PbsHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.PbsHistoryLog'))
CREATE INDEX IX_PbsHistoryLog_ChangedByUserId
  ON dbo.PbsHistoryLog (ChangedByUserId)
GO

--
-- Create table [dbo].[PbsExperience]
--
PRINT (N'Create table [dbo].[PbsExperience]')
GO
IF OBJECT_ID(N'dbo.PbsExperience', 'U') IS NULL
CREATE TABLE dbo.PbsExperience (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_PbsExperience PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[PbsConsumable]
--
PRINT (N'Create table [dbo].[PbsConsumable]')
GO
IF OBJECT_ID(N'dbo.PbsConsumable', 'U') IS NULL
CREATE TABLE dbo.PbsConsumable (
  Id nvarchar(450) NOT NULL,
  PbsProductId nvarchar(450) NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  Quantity float NOT NULL,
  CONSTRAINT PK_PbsConsumable PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_PbsConsumable_CoperateProductCatalogId] on table [dbo].[PbsConsumable]
--
PRINT (N'Create index [IX_PbsConsumable_CoperateProductCatalogId] on table [dbo].[PbsConsumable]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsConsumable_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsConsumable'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsConsumable'))
CREATE INDEX IX_PbsConsumable_CoperateProductCatalogId
  ON dbo.PbsConsumable (CoperateProductCatalogId)
GO

--
-- Create index [IX_PbsConsumable_PbsProductId] on table [dbo].[PbsConsumable]
--
PRINT (N'Create index [IX_PbsConsumable_PbsProductId] on table [dbo].[PbsConsumable]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_PbsConsumable_PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsConsumable'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsConsumable'))
CREATE INDEX IX_PbsConsumable_PbsProductId
  ON dbo.PbsConsumable (PbsProductId)
GO

--
-- Create table [dbo].[Log]
--
PRINT (N'Create table [dbo].[Log]')
GO
IF OBJECT_ID(N'dbo.Log', 'U') IS NULL
CREATE TABLE dbo.Log (
  Id int IDENTITY,
  Date datetime2 NOT NULL,
  Thread nvarchar(max) NULL,
  Level nvarchar(max) NULL,
  Logger nvarchar(max) NULL,
  Message nvarchar(max) NULL,
  Exception nvarchar(max) NULL,
  CONSTRAINT PK_Log PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[Location]
--
PRINT (N'Create table [dbo].[Location]')
GO
IF OBJECT_ID(N'dbo.Location', 'U') IS NULL
CREATE TABLE dbo.Location (
  Id nvarchar(450) NOT NULL,
  Latitude float NOT NULL,
  Longitude float NOT NULL,
  Altitude float NOT NULL,
  HorizontalAccuracy float NOT NULL,
  VerticleAccuracy float NOT NULL,
  Speed float NOT NULL,
  Heading float NOT NULL,
  CONSTRAINT PK_Location PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[LocalizedData]
--
PRINT (N'Create table [dbo].[LocalizedData]')
GO
IF OBJECT_ID(N'dbo.LocalizedData', 'U') IS NULL
CREATE TABLE dbo.LocalizedData (
  Id int IDENTITY,
  LanguageCode nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  Label nvarchar(max) NULL,
  CONSTRAINT PK_LocalizedData PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[Locales]
--
PRINT (N'Create table [dbo].[Locales]')
GO
IF OBJECT_ID(N'dbo.Locales', 'U') IS NULL
CREATE TABLE dbo.Locales (
  Id nvarchar(450) NOT NULL,
  TenantId int NOT NULL,
  Language nvarchar(max) NOT NULL,
  Country nvarchar(max) NULL,
  Icon nvarchar(max) NULL,
  Locale nvarchar(max) NOT NULL,
  CONSTRAINT PK_Locales PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[LastSeenProjectDefinition]
--
PRINT (N'Create table [dbo].[LastSeenProjectDefinition]')
GO
IF OBJECT_ID(N'dbo.LastSeenProjectDefinition', 'U') IS NULL
CREATE TABLE dbo.LastSeenProjectDefinition (
  Id int IDENTITY,
  ProjectId nvarchar(max) NULL,
  ViewedUserId nvarchar(max) NULL,
  ViewTime datetime2 NOT NULL,
  CONSTRAINT PK_LastSeenProjectDefinition PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[ErrorMessage]
--
PRINT (N'Create table [dbo].[ErrorMessage]')
GO
IF OBJECT_ID(N'dbo.ErrorMessage', 'U') IS NULL
CREATE TABLE dbo.ErrorMessage (
  Id nvarchar(450) NOT NULL,
  Message nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_ErrorMessage PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[Currency]
--
PRINT (N'Create table [dbo].[Currency]')
GO
IF OBJECT_ID(N'dbo.Currency', 'U') IS NULL
CREATE TABLE dbo.Currency (
  Id int IDENTITY,
  Name nvarchar(max) NULL,
  IsDefault bit NOT NULL,
  CONSTRAINT PK_Currency PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CpcVendor]
--
PRINT (N'Create table [dbo].[CpcVendor]')
GO
IF OBJECT_ID(N'dbo.CpcVendor', 'U') IS NULL
CREATE TABLE dbo.CpcVendor (
  Id nvarchar(450) NOT NULL,
  ResourceNumber nvarchar(max) NULL,
  ResourceTitle nvarchar(max) NULL,
  PurchasingUnit nvarchar(max) NULL,
  ResourcePrice float NULL,
  ResourceLeadTime nvarchar(max) NULL,
  MinOrderQuantity float NULL,
  MaxOrderQuantity float NULL,
  RoundingValue float NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  PreferredParty bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CompanyId nvarchar(450) NULL,
  CONSTRAINT PK_CpcVendor PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CpcVendor_CompanyId] on table [dbo].[CpcVendor]
--
PRINT (N'Create index [IX_CpcVendor_CompanyId] on table [dbo].[CpcVendor]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcVendor_CompanyId' AND object_id = OBJECT_ID(N'dbo.CpcVendor'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CompanyId' AND object_id = OBJECT_ID(N'dbo.CpcVendor'))
CREATE INDEX IX_CpcVendor_CompanyId
  ON dbo.CpcVendor (CompanyId)
GO

--
-- Create index [IX_CpcVendor_CoperateProductCatalogId] on table [dbo].[CpcVendor]
--
PRINT (N'Create index [IX_CpcVendor_CoperateProductCatalogId] on table [dbo].[CpcVendor]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcVendor_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcVendor'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcVendor'))
CREATE INDEX IX_CpcVendor_CoperateProductCatalogId
  ON dbo.CpcVendor (CoperateProductCatalogId)
GO

--
-- Create table [dbo].[CpcUnitOfSizeMeasure]
--
PRINT (N'Create table [dbo].[CpcUnitOfSizeMeasure]')
GO
IF OBJECT_ID(N'dbo.CpcUnitOfSizeMeasure', 'U') IS NULL
CREATE TABLE dbo.CpcUnitOfSizeMeasure (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  DisplayOrder int NOT NULL,
  CONSTRAINT PK_CpcUnitOfSizeMeasure PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CpcResourceType]
--
PRINT (N'Create table [dbo].[CpcResourceType]')
GO
IF OBJECT_ID(N'dbo.CpcResourceType', 'U') IS NULL
CREATE TABLE dbo.CpcResourceType (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  DisplayOrder int NOT NULL,
  CONSTRAINT PK_CpcResourceType PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CpcResourceNickname]
--
PRINT (N'Create table [dbo].[CpcResourceNickname]')
GO
IF OBJECT_ID(N'dbo.CpcResourceNickname', 'U') IS NULL
CREATE TABLE dbo.CpcResourceNickname (
  Id nvarchar(450) NOT NULL,
  NickName nvarchar(max) NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  Language nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_CpcResourceNickname PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CpcResourceNickname_CoperateProductCatalogId] on table [dbo].[CpcResourceNickname]
--
PRINT (N'Create index [IX_CpcResourceNickname_CoperateProductCatalogId] on table [dbo].[CpcResourceNickname]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcResourceNickname_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcResourceNickname'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcResourceNickname'))
CREATE INDEX IX_CpcResourceNickname_CoperateProductCatalogId
  ON dbo.CpcResourceNickname (CoperateProductCatalogId)
GO

--
-- Create table [dbo].[CpcResourceFamily]
--
PRINT (N'Create table [dbo].[CpcResourceFamily]')
GO
IF OBJECT_ID(N'dbo.CpcResourceFamily', 'U') IS NULL
CREATE TABLE dbo.CpcResourceFamily (
  Id nvarchar(450) NOT NULL,
  LocaleCode nvarchar(max) NULL,
  ParentId nvarchar(450) NULL,
  DisplayOrder int NOT NULL,
  Title nvarchar(max) NULL,
  CONSTRAINT PK_CpcResourceFamily PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CpcResourceFamily_ParentId] on table [dbo].[CpcResourceFamily]
--
PRINT (N'Create index [IX_CpcResourceFamily_ParentId] on table [dbo].[CpcResourceFamily]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcResourceFamily_ParentId' AND object_id = OBJECT_ID(N'dbo.CpcResourceFamily'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ParentId' AND object_id = OBJECT_ID(N'dbo.CpcResourceFamily'))
CREATE INDEX IX_CpcResourceFamily_ParentId
  ON dbo.CpcResourceFamily (ParentId)
GO

--
-- Create table [dbo].[CpcPressureClass]
--
PRINT (N'Create table [dbo].[CpcPressureClass]')
GO
IF OBJECT_ID(N'dbo.CpcPressureClass', 'U') IS NULL
CREATE TABLE dbo.CpcPressureClass (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  DisplayOrder int NOT NULL,
  CONSTRAINT PK_CpcPressureClass PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CpcMaterial]
--
PRINT (N'Create table [dbo].[CpcMaterial]')
GO
IF OBJECT_ID(N'dbo.CpcMaterial', 'U') IS NULL
CREATE TABLE dbo.CpcMaterial (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  DisplayOrder int NOT NULL,
  CONSTRAINT PK_CpcMaterial PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CpcImage]
--
PRINT (N'Create table [dbo].[CpcImage]')
GO
IF OBJECT_ID(N'dbo.CpcImage', 'U') IS NULL
CREATE TABLE dbo.CpcImage (
  Id nvarchar(450) NOT NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  Image nvarchar(max) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_CpcImage PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CpcImage_CoperateProductCatalogId] on table [dbo].[CpcImage]
--
PRINT (N'Create index [IX_CpcImage_CoperateProductCatalogId] on table [dbo].[CpcImage]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcImage_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcImage'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcImage'))
CREATE INDEX IX_CpcImage_CoperateProductCatalogId
  ON dbo.CpcImage (CoperateProductCatalogId)
GO

--
-- Create table [dbo].[CpcHistoryLog]
--
PRINT (N'Create table [dbo].[CpcHistoryLog]')
GO
IF OBJECT_ID(N'dbo.CpcHistoryLog', 'U') IS NULL
CREATE TABLE dbo.CpcHistoryLog (
  Id nvarchar(450) NOT NULL,
  HistoryLog nvarchar(max) NULL,
  CoperateProductCatalogId nvarchar(450) NULL,
  ChangedByUserId nvarchar(450) NULL,
  Action nvarchar(max) NULL,
  ChangedTime datetime2 NOT NULL,
  RevisionNumber int IDENTITY,
  CONSTRAINT PK_CpcHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CpcHistoryLog_ChangedByUserId] on table [dbo].[CpcHistoryLog]
--
PRINT (N'Create index [IX_CpcHistoryLog_ChangedByUserId] on table [dbo].[CpcHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcHistoryLog_ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.CpcHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.CpcHistoryLog'))
CREATE INDEX IX_CpcHistoryLog_ChangedByUserId
  ON dbo.CpcHistoryLog (ChangedByUserId)
GO

--
-- Create index [IX_CpcHistoryLog_CoperateProductCatalogId] on table [dbo].[CpcHistoryLog]
--
PRINT (N'Create index [IX_CpcHistoryLog_CoperateProductCatalogId] on table [dbo].[CpcHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CpcHistoryLog_CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcHistoryLog'))
CREATE INDEX IX_CpcHistoryLog_CoperateProductCatalogId
  ON dbo.CpcHistoryLog (CoperateProductCatalogId)
GO

--
-- Create table [dbo].[CpcBrand]
--
PRINT (N'Create table [dbo].[CpcBrand]')
GO
IF OBJECT_ID(N'dbo.CpcBrand', 'U') IS NULL
CREATE TABLE dbo.CpcBrand (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_CpcBrand PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CpcBasicUnitOfMeasure]
--
PRINT (N'Create table [dbo].[CpcBasicUnitOfMeasure]')
GO
IF OBJECT_ID(N'dbo.CpcBasicUnitOfMeasure', 'U') IS NULL
CREATE TABLE dbo.CpcBasicUnitOfMeasure (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  DisplayOrder int NOT NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_CpcBasicUnitOfMeasure PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[Country]
--
PRINT (N'Create table [dbo].[Country]')
GO
IF OBJECT_ID(N'dbo.Country', 'U') IS NULL
CREATE TABLE dbo.Country (
  Id nvarchar(450) NOT NULL,
  CountryName nvarchar(450) NULL,
  LocaleCode nvarchar(max) NULL,
  CONSTRAINT PK_Country PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID(N'dbo.CorporateProductCatalog', 'U') IS NULL
CREATE TABLE dbo.CorporateProductCatalog (
  Id nvarchar(450) NOT NULL,
  ResourceTitle nvarchar(max) NULL,
  ResourceTypeId nvarchar(450) NULL,
  ResourceFamilyId nvarchar(450) NULL,
  CpcBasicUnitOfMeasureId nvarchar(450) NULL,
  CpcMaterialId nvarchar(450) NULL,
  CpcPressureClassId nvarchar(450) NULL,
  InventoryPrice float NULL,
  CpcUnitOfSizeMeasureId nvarchar(450) NULL,
  Size float NULL,
  WallThickness float NULL,
  MinOrderQuantity float NULL,
  MaxOrderQuantity float NULL,
  Weight float NULL,
  Status int NOT NULL,
  ResourceNumber nvarchar(450) NULL,
  IsDeleted bit NOT NULL,
  CpcBrandId nvarchar(450) NULL,
  CONSTRAINT PK_CorporateProductCatalog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CorporateProductCatalog_CpcBasicUnitOfMeasureId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_CpcBasicUnitOfMeasureId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_CpcBasicUnitOfMeasureId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcBasicUnitOfMeasureId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_CpcBasicUnitOfMeasureId
  ON dbo.CorporateProductCatalog (CpcBasicUnitOfMeasureId)
GO

--
-- Create index [IX_CorporateProductCatalog_CpcBrandId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_CpcBrandId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_CpcBrandId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcBrandId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_CpcBrandId
  ON dbo.CorporateProductCatalog (CpcBrandId)
GO

--
-- Create index [IX_CorporateProductCatalog_CpcMaterialId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_CpcMaterialId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_CpcMaterialId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcMaterialId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_CpcMaterialId
  ON dbo.CorporateProductCatalog (CpcMaterialId)
GO

--
-- Create index [IX_CorporateProductCatalog_CpcPressureClassId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_CpcPressureClassId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_CpcPressureClassId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcPressureClassId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_CpcPressureClassId
  ON dbo.CorporateProductCatalog (CpcPressureClassId)
GO

--
-- Create index [IX_CorporateProductCatalog_CpcUnitOfSizeMeasureId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_CpcUnitOfSizeMeasureId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_CpcUnitOfSizeMeasureId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcUnitOfSizeMeasureId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_CpcUnitOfSizeMeasureId
  ON dbo.CorporateProductCatalog (CpcUnitOfSizeMeasureId)
GO

--
-- Create index [IX_CorporateProductCatalog_ResourceFamilyId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_ResourceFamilyId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_ResourceFamilyId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ResourceFamilyId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_ResourceFamilyId
  ON dbo.CorporateProductCatalog (ResourceFamilyId)
GO

--
-- Create index [IX_CorporateProductCatalog_ResourceNumber] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_ResourceNumber] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_ResourceNumber' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ResourceNumber' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE UNIQUE INDEX IX_CorporateProductCatalog_ResourceNumber
  ON dbo.CorporateProductCatalog (ResourceNumber)
  WHERE ([ResourceNumber] IS NOT NULL)
GO

--
-- Create index [IX_CorporateProductCatalog_ResourceTypeId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create index [IX_CorporateProductCatalog_ResourceTypeId] on table [dbo].[CorporateProductCatalog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CorporateProductCatalog_ResourceTypeId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ResourceTypeId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
CREATE INDEX IX_CorporateProductCatalog_ResourceTypeId
  ON dbo.CorporateProductCatalog (ResourceTypeId)
GO

--
-- Create procedure [dbo].[GetPbsForVPlabour]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsForVPlabour]')
GO
IF OBJECT_ID(N'dbo.GetPbsForVPlabour', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetPbsForVPlabour
AS
SELECT
                                 PmolTeamRole.Id AS Id
                                 ,''Labour'' AS Title
                                 ,PMolPlannedWorkLabour.Id AS ParentId
                                 ,''Labour'' AS Type
                                 ,''CPCId'' AS CPCId
                                 ,PmolTeamRole.CabPersonId
                                FROM dbo.PMolPlannedWorkLabour
                                INNER JOIN dbo.PMol
                                  ON PMolPlannedWorkLabour.PmolId = PMol.Id
                                INNER JOIN dbo.PmolTeamRole
                                  ON PmolTeamRole.PmolLabourId = PMolPlannedWorkLabour.Id
                                WHERE PMolPlannedWorkLabour.IsDeleted = 0
                                AND PmolTeamRole.CabPersonId IS NOT NULL
                                AND dbo.PMolPlannedWorkLabour.PmolId IS NOT NULL
                                AND PMol.IsDeleted = ''0''
                                AND PmolTeamRole.IsDeleted = ''0''
                                GROUP BY PMol.ProjectMoleculeId
                                        ,PmolTeamRole.Id
                                        ,PmolTeamRole.CabPersonId
                                        ,PMol.Name
                                        ,PMolPlannedWorkLabour.Id
                                        ,PMol.ExecutionEndTime
                                        ,PMol.ExecutionStartTime
                                        ,PMol.ExecutionDate
                                        ,PMol.Title
                                        ,PMol.ProjectSequenceCode
                                         union
                                        SELECT
                                          PMolPlannedWorkTools.Id
                                         ,CorporateProductCatalog.Title
                                         ,PMol.Id AS ParentId
                                         ,''Tools'' AS Type
										 ,PMolPlannedWorkTools.CoperateProductCatalogId AS CPCId
                                         ,''CabPersonId'' as CabPersonId
                                        FROM dbo.PMolPlannedWorkTools
                                        LEFT OUTER JOIN dbo.PMol        
                                          ON PMolPlannedWorkTools.PmolId = PMol.Id
                                        LEFT OUTER JOIN dbo.CorporateProductCatalog
                                          ON PMolPlannedWorkTools.CoperateProductCatalogId = CorporateProductCatalog.Id
                                          where PMolPlannedWorkTools.IsDeleted = 0
                                            union
										  SELECT
                                          PMolPlannedWorkLabour.Id
                                         ,CorporateProductCatalog.Title
                                         ,PMol.Id AS ParentId
                                         ,''Labours'' AS Type
                                         ,PMolPlannedWorkLabour.CoperateProductCatalogId AS CPCId
                                         ,''CabPersonId'' as CabPersonId
                                        FROM dbo.PMolPlannedWorkLabour
                                        LEFT OUTER JOIN dbo.PMol
                                          ON PMolPlannedWorkLabour.PmolId = PMol.Id
                                        LEFT OUTER JOIN dbo.CorporateProductCatalog
                                          ON PMolPlannedWorkLabour.CoperateProductCatalogId = CorporateProductCatalog.Id
                                        WHERE PMolPlannedWorkLabour.IsDeleted = ''0'';
                                        '
GO

--
-- Create procedure [dbo].[GetBurnDownChartDataLabourQuery]
--
GO
PRINT (N'Create procedure [dbo].[GetBurnDownChartDataLabourQuery]')
GO
IF OBJECT_ID(N'dbo.GetBurnDownChartDataLabourQuery', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetBurnDownChartDataLabourQuery @StartDate DATETIME,@EndDate DATETIME AS   SELECT     PMolPlannedWorkLabour.RequiredQuantity    ,PMolPlannedWorkLabour.CoperateProductCatalogId    ,PMolPlannedWorkLabour.ConsumedQuantity    ,PMol.ExecutionDate    ,CorporateProductCatalog.ResourceFamilyId   FROM dbo.PMolPlannedWorkLabour   LEFT OUTER JOIN dbo.PMol     ON PMolPlannedWorkLabour.PmolId = PMol.Id   LEFT OUTER JOIN dbo.CorporateProductCatalog     ON PMolPlannedWorkLabour.CoperateProductCatalogId = CorporateProductCatalog.Id   WHERE PMolPlannedWorkLabour.IsDeleted = 0   AND PMol.IsDeleted = 0   AND CorporateProductCatalog.IsDeleted = 0   AND CorporateProductCatalog.ResourceFamilyId IS NOT NULL   AND PMol.ExecutionDate BETWEEN @StartDate AND @EndDate
'
GO

--
-- Create table [dbo].[CalendarTemplate]
--
PRINT (N'Create table [dbo].[CalendarTemplate]')
GO
IF OBJECT_ID(N'dbo.CalendarTemplate', 'U') IS NULL
CREATE TABLE dbo.CalendarTemplate (
  Id nvarchar(450) NOT NULL,
  Name nvarchar(max) NULL,
  IsDefault bit NOT NULL,
  CONSTRAINT PK_CalendarTemplate PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabWorkingStatus]
--
PRINT (N'Create table [dbo].[CabWorkingStatus]')
GO
IF OBJECT_ID(N'dbo.CabWorkingStatus', 'U') IS NULL
CREATE TABLE dbo.CabWorkingStatus (
  Id nvarchar(450) NOT NULL,
  State nvarchar(max) NULL,
  CONSTRAINT PK_CabWorkingStatus PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabWhatsApp]
--
PRINT (N'Create table [dbo].[CabWhatsApp]')
GO
IF OBJECT_ID(N'dbo.CabWhatsApp', 'U') IS NULL
CREATE TABLE dbo.CabWhatsApp (
  Id nvarchar(450) NOT NULL,
  WhatsAppNumber nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_CabWhatsApp PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabWhatsApp_WhatsAppNumber] on table [dbo].[CabWhatsApp]
--
PRINT (N'Create index [IX_CabWhatsApp_WhatsAppNumber] on table [dbo].[CabWhatsApp]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabWhatsApp_WhatsAppNumber' AND object_id = OBJECT_ID(N'dbo.CabWhatsApp'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WhatsAppNumber' AND object_id = OBJECT_ID(N'dbo.CabWhatsApp'))
CREATE UNIQUE INDEX IX_CabWhatsApp_WhatsAppNumber
  ON dbo.CabWhatsApp (WhatsAppNumber)
  WHERE ([WhatsAppNumber] IS NOT NULL)
GO

--
-- Create table [dbo].[CabVat]
--
PRINT (N'Create table [dbo].[CabVat]')
GO
IF OBJECT_ID(N'dbo.CabVat', 'U') IS NULL
CREATE TABLE dbo.CabVat (
  Id nvarchar(450) NOT NULL,
  Vat nvarchar(max) NULL,
  CONSTRAINT PK_CabVat PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabSpecialization]
--
PRINT (N'Create table [dbo].[CabSpecialization]')
GO
IF OBJECT_ID(N'dbo.CabSpecialization', 'U') IS NULL
CREATE TABLE dbo.CabSpecialization (
  Id nvarchar(450) NOT NULL,
  Speciality nvarchar(max) NULL,
  CONSTRAINT PK_CabSpecialization PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabSkype]
--
PRINT (N'Create table [dbo].[CabSkype]')
GO
IF OBJECT_ID(N'dbo.CabSkype', 'U') IS NULL
CREATE TABLE dbo.CabSkype (
  Id nvarchar(450) NOT NULL,
  SkypeNumber nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_CabSkype PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabSkype_SkypeNumber] on table [dbo].[CabSkype]
--
PRINT (N'Create index [IX_CabSkype_SkypeNumber] on table [dbo].[CabSkype]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabSkype_SkypeNumber' AND object_id = OBJECT_ID(N'dbo.CabSkype'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'SkypeNumber' AND object_id = OBJECT_ID(N'dbo.CabSkype'))
CREATE UNIQUE INDEX IX_CabSkype_SkypeNumber
  ON dbo.CabSkype (SkypeNumber)
  WHERE ([SkypeNumber] IS NOT NULL)
GO

--
-- Create table [dbo].[CabSalutation]
--
PRINT (N'Create table [dbo].[CabSalutation]')
GO
IF OBJECT_ID(N'dbo.CabSalutation', 'U') IS NULL
CREATE TABLE dbo.CabSalutation (
  Id nvarchar(450) NOT NULL,
  SalutationName nvarchar(max) NULL,
  CONSTRAINT PK_CabSalutation PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabPrimarySubjectMatterDomain]
--
PRINT (N'Create table [dbo].[CabPrimarySubjectMatterDomain]')
GO
IF OBJECT_ID(N'dbo.CabPrimarySubjectMatterDomain', 'U') IS NULL
CREATE TABLE dbo.CabPrimarySubjectMatterDomain (
  Id nvarchar(450) NOT NULL,
  SubjectMatter nvarchar(max) NULL,
  CONSTRAINT PK_CabPrimarySubjectMatterDomain PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabPersonCompany]
--
PRINT (N'Create table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID(N'dbo.CabPersonCompany', 'U') IS NULL
CREATE TABLE dbo.CabPersonCompany (
  Id nvarchar(450) NOT NULL,
  IsDeleted bit NOT NULL,
  IsSaved bit NOT NULL,
  PersonId nvarchar(450) NULL,
  CompanyId nvarchar(450) NULL,
  JobRole nvarchar(max) NULL,
  EmailId nvarchar(450) NULL,
  MobilePhoneId nvarchar(450) NULL,
  LandPhoneId nvarchar(450) NULL,
  WhatsAppId nvarchar(450) NULL,
  SkypeId nvarchar(450) NULL,
  CONSTRAINT PK_CabPersonCompany PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabPersonCompany_CompanyId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_CompanyId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_CompanyId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CompanyId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_CompanyId
  ON dbo.CabPersonCompany (CompanyId)
GO

--
-- Create index [IX_CabPersonCompany_EmailId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_EmailId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_EmailId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'EmailId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_EmailId
  ON dbo.CabPersonCompany (EmailId)
GO

--
-- Create index [IX_CabPersonCompany_LandPhoneId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_LandPhoneId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_LandPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LandPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_LandPhoneId
  ON dbo.CabPersonCompany (LandPhoneId)
GO

--
-- Create index [IX_CabPersonCompany_MobilePhoneId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_MobilePhoneId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_MobilePhoneId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'MobilePhoneId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_MobilePhoneId
  ON dbo.CabPersonCompany (MobilePhoneId)
GO

--
-- Create index [IX_CabPersonCompany_PersonId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_PersonId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_PersonId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PersonId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_PersonId
  ON dbo.CabPersonCompany (PersonId)
GO

--
-- Create index [IX_CabPersonCompany_SkypeId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_SkypeId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_SkypeId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'SkypeId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_SkypeId
  ON dbo.CabPersonCompany (SkypeId)
GO

--
-- Create index [IX_CabPersonCompany_WhatsAppId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create index [IX_CabPersonCompany_WhatsAppId] on table [dbo].[CabPersonCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPersonCompany_WhatsAppId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WhatsAppId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
CREATE INDEX IX_CabPersonCompany_WhatsAppId
  ON dbo.CabPersonCompany (WhatsAppId)
GO

--
-- Create table [dbo].[CabPerson]
--
PRINT (N'Create table [dbo].[CabPerson]')
GO
IF OBJECT_ID(N'dbo.CabPerson', 'U') IS NULL
CREATE TABLE dbo.CabPerson (
  Id nvarchar(450) NOT NULL,
  IsDeleted bit NOT NULL,
  IsSaved bit NOT NULL,
  FirstName nvarchar(max) NULL,
  Surname nvarchar(max) NULL,
  FullName nvarchar(max) NULL,
  CallName nvarchar(max) NULL,
  BusinessEmailId nvarchar(450) NULL,
  BusinessPhoneId nvarchar(450) NULL,
  Image nvarchar(max) NULL,
  AddressId nvarchar(450) NULL,
  EmailId nvarchar(450) NULL,
  LandPhoneId nvarchar(450) NULL,
  MobilePhoneId nvarchar(450) NULL,
  WhatsAppId nvarchar(450) NULL,
  SkypeId nvarchar(450) NULL,
  CONSTRAINT PK_CabPerson PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabPerson_AddressId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_AddressId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_AddressId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'AddressId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_AddressId
  ON dbo.CabPerson (AddressId)
GO

--
-- Create index [IX_CabPerson_BusinessEmailId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_BusinessEmailId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_BusinessEmailId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'BusinessEmailId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_BusinessEmailId
  ON dbo.CabPerson (BusinessEmailId)
GO

--
-- Create index [IX_CabPerson_BusinessPhoneId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_BusinessPhoneId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_BusinessPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'BusinessPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_BusinessPhoneId
  ON dbo.CabPerson (BusinessPhoneId)
GO

--
-- Create index [IX_CabPerson_EmailId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_EmailId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_EmailId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'EmailId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_EmailId
  ON dbo.CabPerson (EmailId)
GO

--
-- Create index [IX_CabPerson_LandPhoneId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_LandPhoneId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_LandPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LandPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_LandPhoneId
  ON dbo.CabPerson (LandPhoneId)
GO

--
-- Create index [IX_CabPerson_MobilePhoneId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_MobilePhoneId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_MobilePhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'MobilePhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_MobilePhoneId
  ON dbo.CabPerson (MobilePhoneId)
GO

--
-- Create index [IX_CabPerson_SkypeId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_SkypeId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_SkypeId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'SkypeId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_SkypeId
  ON dbo.CabPerson (SkypeId)
GO

--
-- Create index [IX_CabPerson_WhatsAppId] on table [dbo].[CabPerson]
--
PRINT (N'Create index [IX_CabPerson_WhatsAppId] on table [dbo].[CabPerson]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabPerson_WhatsAppId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WhatsAppId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
CREATE INDEX IX_CabPerson_WhatsAppId
  ON dbo.CabPerson (WhatsAppId)
GO

--
-- Create table [dbo].[CabMobilePhone]
--
PRINT (N'Create table [dbo].[CabMobilePhone]')
GO
IF OBJECT_ID(N'dbo.CabMobilePhone', 'U') IS NULL
CREATE TABLE dbo.CabMobilePhone (
  Id nvarchar(450) NOT NULL,
  MobilePhoneNumber nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_CabMobilePhone PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabMobilePhone_MobilePhoneNumber] on table [dbo].[CabMobilePhone]
--
PRINT (N'Create index [IX_CabMobilePhone_MobilePhoneNumber] on table [dbo].[CabMobilePhone]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabMobilePhone_MobilePhoneNumber' AND object_id = OBJECT_ID(N'dbo.CabMobilePhone'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'MobilePhoneNumber' AND object_id = OBJECT_ID(N'dbo.CabMobilePhone'))
CREATE UNIQUE INDEX IX_CabMobilePhone_MobilePhoneNumber
  ON dbo.CabMobilePhone (MobilePhoneNumber)
  WHERE ([MobilePhoneNumber] IS NOT NULL)
GO

--
-- Create table [dbo].[CabLandPhone]
--
PRINT (N'Create table [dbo].[CabLandPhone]')
GO
IF OBJECT_ID(N'dbo.CabLandPhone', 'U') IS NULL
CREATE TABLE dbo.CabLandPhone (
  Id nvarchar(450) NOT NULL,
  LandPhoneNumber nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_CabLandPhone PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabLandPhone_LandPhoneNumber] on table [dbo].[CabLandPhone]
--
PRINT (N'Create index [IX_CabLandPhone_LandPhoneNumber] on table [dbo].[CabLandPhone]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabLandPhone_LandPhoneNumber' AND object_id = OBJECT_ID(N'dbo.CabLandPhone'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LandPhoneNumber' AND object_id = OBJECT_ID(N'dbo.CabLandPhone'))
CREATE UNIQUE INDEX IX_CabLandPhone_LandPhoneNumber
  ON dbo.CabLandPhone (LandPhoneNumber)
  WHERE ([LandPhoneNumber] IS NOT NULL)
GO

--
-- Create table [dbo].[CabHistoryLog]
--
PRINT (N'Create table [dbo].[CabHistoryLog]')
GO
IF OBJECT_ID(N'dbo.CabHistoryLog', 'U') IS NULL
CREATE TABLE dbo.CabHistoryLog (
  Id nvarchar(450) NOT NULL,
  HistoryLog nvarchar(max) NULL,
  ChangedByUserId nvarchar(450) NULL,
  Action nvarchar(max) NULL,
  ChangedTime datetime2 NOT NULL,
  RevisionNumber int IDENTITY,
  PersonId nvarchar(450) NULL,
  CompanyId nvarchar(450) NULL,
  CONSTRAINT PK_CabHistoryLog PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabHistoryLog_ChangedByUserId] on table [dbo].[CabHistoryLog]
--
PRINT (N'Create index [IX_CabHistoryLog_ChangedByUserId] on table [dbo].[CabHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabHistoryLog_ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
CREATE INDEX IX_CabHistoryLog_ChangedByUserId
  ON dbo.CabHistoryLog (ChangedByUserId)
GO

--
-- Create index [IX_CabHistoryLog_CompanyId] on table [dbo].[CabHistoryLog]
--
PRINT (N'Create index [IX_CabHistoryLog_CompanyId] on table [dbo].[CabHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabHistoryLog_CompanyId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CompanyId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
CREATE INDEX IX_CabHistoryLog_CompanyId
  ON dbo.CabHistoryLog (CompanyId)
GO

--
-- Create index [IX_CabHistoryLog_PersonId] on table [dbo].[CabHistoryLog]
--
PRINT (N'Create index [IX_CabHistoryLog_PersonId] on table [dbo].[CabHistoryLog]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabHistoryLog_PersonId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PersonId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
CREATE INDEX IX_CabHistoryLog_PersonId
  ON dbo.CabHistoryLog (PersonId)
GO

--
-- Create table [dbo].[CabEmail]
--
PRINT (N'Create table [dbo].[CabEmail]')
GO
IF OBJECT_ID(N'dbo.CabEmail', 'U') IS NULL
CREATE TABLE dbo.CabEmail (
  Id nvarchar(450) NOT NULL,
  EmailAddress nvarchar(450) NULL,
  IsDeleted bit NOT NULL DEFAULT (CONVERT([bit],(0))),
  CONSTRAINT PK_CabEmail PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabEmail_EmailAddress] on table [dbo].[CabEmail]
--
PRINT (N'Create index [IX_CabEmail_EmailAddress] on table [dbo].[CabEmail]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabEmail_EmailAddress' AND object_id = OBJECT_ID(N'dbo.CabEmail'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'EmailAddress' AND object_id = OBJECT_ID(N'dbo.CabEmail'))
CREATE UNIQUE INDEX IX_CabEmail_EmailAddress
  ON dbo.CabEmail (EmailAddress)
  WHERE ([EmailAddress] IS NOT NULL)
GO

--
-- Create table [dbo].[CabCompany]
--
PRINT (N'Create table [dbo].[CabCompany]')
GO
IF OBJECT_ID(N'dbo.CabCompany', 'U') IS NULL
CREATE TABLE dbo.CabCompany (
  Id nvarchar(450) NOT NULL,
  IsDeleted bit NOT NULL,
  IsSaved bit NOT NULL,
  Name nvarchar(max) NULL,
  VatId nvarchar(450) NULL,
  BankAccountId nvarchar(450) NULL,
  AddressId nvarchar(450) NULL,
  CabPersonId nvarchar(450) NULL,
  CONSTRAINT PK_CabCompany PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create index [IX_CabCompany_AddressId] on table [dbo].[CabCompany]
--
PRINT (N'Create index [IX_CabCompany_AddressId] on table [dbo].[CabCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabCompany_AddressId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'AddressId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
CREATE INDEX IX_CabCompany_AddressId
  ON dbo.CabCompany (AddressId)
GO

--
-- Create index [IX_CabCompany_BankAccountId] on table [dbo].[CabCompany]
--
PRINT (N'Create index [IX_CabCompany_BankAccountId] on table [dbo].[CabCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabCompany_BankAccountId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'BankAccountId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
CREATE INDEX IX_CabCompany_BankAccountId
  ON dbo.CabCompany (BankAccountId)
GO

--
-- Create index [IX_CabCompany_CabPersonId] on table [dbo].[CabCompany]
--
PRINT (N'Create index [IX_CabCompany_CabPersonId] on table [dbo].[CabCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabCompany_CabPersonId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CabPersonId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
CREATE INDEX IX_CabCompany_CabPersonId
  ON dbo.CabCompany (CabPersonId)
GO

--
-- Create index [IX_CabCompany_VatId] on table [dbo].[CabCompany]
--
PRINT (N'Create index [IX_CabCompany_VatId] on table [dbo].[CabCompany]')
GO
IF NOT EXISTS (
  SELECT 1 FROM sys.indexes WITH (NOLOCK)
  WHERE name = N'IX_CabCompany_VatId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'VatId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
CREATE INDEX IX_CabCompany_VatId
  ON dbo.CabCompany (VatId)
GO

--
-- Create table [dbo].[CabBankAccount]
--
PRINT (N'Create table [dbo].[CabBankAccount]')
GO
IF OBJECT_ID(N'dbo.CabBankAccount', 'U') IS NULL
CREATE TABLE dbo.CabBankAccount (
  Id nvarchar(450) NOT NULL,
  BankAccount nvarchar(max) NULL,
  CONSTRAINT PK_CabBankAccount PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[CabAddress]
--
PRINT (N'Create table [dbo].[CabAddress]')
GO
IF OBJECT_ID(N'dbo.CabAddress', 'U') IS NULL
CREATE TABLE dbo.CabAddress (
  Id nvarchar(450) NOT NULL,
  Street nvarchar(max) NULL,
  StreetNumber nvarchar(max) NULL,
  MailBox nvarchar(max) NULL,
  PostalCode nvarchar(max) NULL,
  City nvarchar(max) NULL,
  Region nvarchar(max) NULL,
  CountryId nvarchar(450) NULL,
  CONSTRAINT PK_CabAddress PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[AppConfigurationData]
--
PRINT (N'Create table [dbo].[AppConfigurationData]')
GO
IF OBJECT_ID(N'dbo.AppConfigurationData', 'U') IS NULL
CREATE TABLE dbo.AppConfigurationData (
  Id int IDENTITY,
  Name nvarchar(max) NULL,
  Url nvarchar(max) NULL,
  IsConfigured bit NOT NULL,
  CONSTRAINT PK_AppConfigurationData PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[AllUsers]
--
PRINT (N'Create table [dbo].[AllUsers]')
GO
IF OBJECT_ID(N'dbo.AllUsers', 'U') IS NULL
CREATE TABLE dbo.AllUsers (
  Id nvarchar(450) NOT NULL,
  TenantId int NOT NULL,
  OId nvarchar(max) NULL,
  FirstName nvarchar(max) NULL,
  LastName nvarchar(max) NULL,
  Company nvarchar(max) NULL,
  Email nvarchar(max) NULL,
  PhoneNo nvarchar(max) NULL,
  Comment nvarchar(max) NULL,
  Avatar nvarchar(max) NULL,
  Country nvarchar(max) NULL,
  CONSTRAINT PK_AllUsers PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create table [dbo].[__EFMigrationsHistory]
--
PRINT (N'Create table [dbo].[__EFMigrationsHistory]')
GO
IF OBJECT_ID(N'dbo.__EFMigrationsHistory', 'U') IS NULL
CREATE TABLE dbo.__EFMigrationsHistory (
  MigrationId nvarchar(150) NOT NULL,
  ProductVersion nvarchar(32) NOT NULL,
  CONSTRAINT PK___EFMigrationsHistory PRIMARY KEY CLUSTERED (MigrationId)
)
GO

--
-- Create table [dbo].[UprinceCustomer]
--
PRINT (N'Create table [dbo].[UprinceCustomer]')
GO
IF OBJECT_ID(N'dbo.UprinceCustomer', 'U') IS NULL
CREATE TABLE dbo.UprinceCustomer (
  Id int IDENTITY,
  CONSTRAINT PK_UprinceCustomer PRIMARY KEY CLUSTERED (Id)
)
GO

--
-- Create procedure [dbo].[GetTranslations]
--
GO
PRINT (N'Create procedure [dbo].[GetTranslations]')
GO
IF OBJECT_ID(N'dbo.GetTranslations', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetTranslations @lang nvarchar(450) 
AS
SELECT WebTranslation.[Key] ,WebTranslation.Value FROM dbo.WebTranslation INNER JOIN dbo.Language ON WebTranslation.LanguageId = Language.Id WHERE Language.Code = @lang
'
GO

--
-- Create procedure [dbo].[GetPmolCbcResourcesById]
--
GO
PRINT (N'Create procedure [dbo].[GetPmolCbcResourcesById]')
GO
IF OBJECT_ID(N'dbo.GetPmolCbcResourcesById', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetPmolCbcResourcesById @Id nvarchar(450) AS SELECT pcr.id,pcr.ArticleNo,pcr.LotId,pcr.Quantity,pcr.PmolId,pcr.ConsumedQuantity,Concat(pcpd.ArticleNo,'' - '',pcpd.Title) AS Title,pcpd.Unit,pcpd.Quantity AS CbcQuantity FROM PmolCbcResources pcr LEFT OUTER JOIN ContractorTotalValuesPublished ctvp ON pcr.LotId = ctvp.LotId LEFT OUTER JOIN PublishedContractorsPdfData pcpd ON pcr.ArticleNo = pcpd.ArticleNo AND ctvp.CompanyId = pcpd.CompanyId   WHERE pcr.PmolId = @Id AND ctvp.IsWinner = 1;
'
GO

--
-- Create procedure [dbo].[GetPbsCbcResourcesById]
--
GO
PRINT (N'Create procedure [dbo].[GetPbsCbcResourcesById]')
GO
IF OBJECT_ID(N'dbo.GetPbsCbcResourcesById', 'P') IS NULL
EXEC sp_executesql N'
CREATE OR ALTER PROCEDURE dbo.GetPbsCbcResourcesById @Id nvarchar(450) AS SELECT pcr.id,pcr.ArticleNo,pcr.LotId,pcr.Quantity,pcr.PbsId,pcr.ConsumedQuantity,pcr.InvoicedQuantity,Concat(pcpd.ArticleNo,'' - '',pcpd.Title) AS Title,pcpd.Unit,pcpd.Quantity AS CbcQuantity FROM PbsCbcResources pcr LEFT OUTER JOIN ContractorTotalValuesPublished ctvp ON pcr.LotId = ctvp.LotId LEFT OUTER JOIN PublishedContractorsPdfData pcpd ON pcr.ArticleNo = pcpd.ArticleNo AND ctvp.CompanyId = pcpd.CompanyId   WHERE pcr.PbsId = @Id AND ctvp.IsWinner = 1
'
GO

--
-- Create procedure [dbo].[GetAwardedLotInProject]
--
GO
PRINT (N'Create procedure [dbo].[GetAwardedLotInProject]')
GO
IF OBJECT_ID(N'dbo.GetAwardedLotInProject', 'P') IS NULL
EXEC sp_executesql N' 
 CREATE OR ALTER PROCEDURE dbo.GetAwardedLotInProject AS  SELECT LotId AS [Key],LotId AS Text FROM  ContractorTotalValuesPublished LEFT OUTER JOIN ContractorHeader ch ON ContractorTotalValuesPublished.LotId = ch.SequenceId WHERE IsWinner = 1;
 '
GO

-- 
-- Dumping data for table __EFMigrationsHistory
--
PRINT (N'Dumping data for table __EFMigrationsHistory')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200715094331_cabupdate', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200715100851_cabupdateDev', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200715104333_AddedBasicUnitOfMeasure', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720054053_FirstMigration', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720060107_AddedIsDeletedToVendor', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720084045_DroppedCPCIsDeleted', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720084156_AddedIsDeletedToCPC', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720093144_RemovedPersonCompany', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720095036_RemovedEmail', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720095313_RemovedCompany', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720095443_RemovedPerson', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720095559_RemovedContact', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720095824_RemovedCabTest', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720100947_AddedCab', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720102831_AddedLocaleIdentifierToCountry', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720103304_RemovedIdentifierFromCountry', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720114050_DroppedTableBasicUnitOfMeasure', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720114319_AddedTableBasicUnitOfMeasure', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200720114819_AddedLocaleCodeToCountry', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200721045218_AddedLanguageToNickName', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200721065741_AddedPreferedPartyToVendor', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200721093624_AddedForeignkeyToBasicUnitOfMeasure', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200721101142_RenamedPreferedParty', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722054843_AddedRevisionNumberToCpc', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722055659_ConfiguredResourceNumberToBeUnique', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722112346_CabTest', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722112509_CabTest1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722112824_cabupdate60', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722135255_RemovedRelationshipInResourceFamily', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200722140022_RenamedNameToTitle', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200723025038_cabupdateSam1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200727085826_AddedCpcNewAttributed', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200728050523_AddedIsDeletedToCorporatePC', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200730142158_AddedCabCompanyToCpcVendor', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200731060849_AddedWeightToCPC', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200731070506_AddedSizeUnitOfMeasure', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200805045630_AddedPbs', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200805052117_droppedPbsTolerancestatus', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200805052418_addedProjectToleranceStateIdToPbsProduct', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200806115728_TestSeed', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200806120250_TestSeed1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200806120523_TestSeedUpdate', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200807042947_AddedCpcUnitOfmeasuredata', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200807053234_risk1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200807075007_AddedDisplayOrdertoPbsStatus', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200807075657_risk2', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200807082157_SeedDataToPbsProductStatus', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200810055321_AddedLogTable', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200810093209_quqlity1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200810134521_REnamedTables', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200810141838_RenamedSkillstoSkill', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200810142440_AddedPbsQualityandRisks', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200810150602_RenamedCorporateProductCatalog', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811053811_quality2', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811053936_AddedCpcBrand', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811055905_AddedCpcBrandData', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811060724_risk5', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811102813_RemovedSuffixinPbs1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811103842_AddedPbsTaxonomy', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811113413_AddedQualityResponsibility', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811113943_RenamedPbsTools', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811114420_PbsToleranceState', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200811121415_ModifiedPbsQualityResponsibility', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812053710_RemovedTitleFromPbsProduct', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812053845_ConvertedScopeToNullable', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812061152_SeededPbsSequenceNumber', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812061327_SeededPbsSequenceNumber1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812063636_UpdatedPbsSkillExperience', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812063751_UpdatedPbsSkillExperienceName', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812065114_SeededDataToPbsToleranceState', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812082759_SeededDataToPbsErrors', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812101203_SeededLocalizedDatapbs', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812103500_seedpbsExp', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812105728_seedpbsSkill', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812112401_seedpbsSkill2', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200812113609_AddedPbsSkillData', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813043525_PbsinstructionPicklistAdded', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813054203_RenamedNamrtoTitleinPbsSkill', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813054454_projectIdAddedToRiskInstrucQuality', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813055632_AddedProjectIdtoPbs', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813070632_pbsInstructionsModified1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813092336_seedPbsInstructionsFamily', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200813093251_seedPbsInstructionsFamily1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814040312_AddedLocalizedDataSeedsTaxonomy', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814060730_seedInstructiondata2', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814060955_seedInstructiondata3', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814062411_seedInstructiondata4', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814072947_pbsInstructionTypeAdded', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814073941_pbsInstructionTyperm', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200814074133_pbsInstructionTypeaddag', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200817051111_AddedScopeLocalizationData', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818034849_productHistoryAdded', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818064639_AddedIsDeletedToPbs', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818064806_productHistoryAdded1', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818082938_historyforriskandquality', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818083347_AddedPbsTaxonomyLevel', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818095317_AddedPbsTaxonomyLevelData', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200818112023_ConvertedScopeToString', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200915072250_TenantTables', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200915073829_TenantTables', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200915074432_TenantTables1', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200915124449_TenantTables2', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200915130039_TenantTables3', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200928103435_tenantInforTableUpdated', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20200929091804_compantsqCOde', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20201005085132_AddedSequenceCodeToContractingUnit', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20201010090044_addedCuIDToContractongunit', N'3.1.4')
INSERT dbo.__EFMigrationsHistory VALUES (N'20201209110851_addedMapUrl', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20201217050755_addColorToTenant', N'3.1.9')
INSERT dbo.__EFMigrationsHistory VALUES (N'20201222073022_defaultCuAdded', N'5.0.1')
INSERT dbo.__EFMigrationsHistory VALUES (N'20210126093110_AddedIsDefaultToCUInfo', N'5.0.1')
GO

-- 
-- Dumping data for table WorkflowState
--
PRINT (N'Dumping data for table WorkflowState')
-- Table CodicTenderCatelog.dbo.WorkflowState does not contain any data (it is empty)

-- 
-- Dumping data for table UserRole
--
PRINT (N'Dumping data for table UserRole')
-- Table CodicTenderCatelog.dbo.UserRole does not contain any data (it is empty)

-- 
-- Dumping data for table UPrinceCustomerTenantsInfo
--
PRINT (N'Dumping data for table UPrinceCustomerTenantsInfo')
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'1', N'localhost:5000', N'1', N'Mickiesoft', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=UPrinceV4Einstein;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=UPrinceV4EinsteinCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'ed863e3f-50b5-4d43-ad7a-4ce4723ad373', N'-0O1yLwpWILx9QWIq4YK021bwc-j_5eX~_', N'7892c08a-ffcd-4a61-a996-72854b657d74', N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', N'#90ff33', NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'10', N'192.168.1.4:5000', N'1', N'Mickiesoft', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:uprincev4staging.database.windows.net,1433;Initial Catalog=UPrinceV4Staging;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'Server=tcp:uprincev4staging.database.windows.net,1433;Initial Catalog=UPrinceV4StagingCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', NULL, NULL, NULL, N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'11', N'goddeerishrmdevapi.azurewebsites.net', N'1', N'Codic', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=CodicTenderOrg;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=CodicTenderCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'ed863e3f-50b5-4d43-ad7a-4ce4723ad373', N'-0O1yLwpWILx9QWIq4YK021bwc-j_5eX~_', N'7892c08a-ffcd-4a61-a996-72854b657d74', N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', N'{"themePrimary":"#3364FF","themeLighterAlt":"#eff6fc","themeLighter":"#deecf9","themeLight":"#c7e0f4","themeTertiary":"#71afe5","themeSecondary":"#2b88d8","themeDarkAlt":"#106ebe","themeDark":"#005a9e","themeDarker":"#004578","neutralLighterAlt":"#faf9f8","neutralLighter":"#f3f2f1","neutralLight":"#edebe9","neutralQuaternaryAlt":"#e1dfdd","neutralQuaternary":"#d0d0d0","neutralTertiaryAlt":"#c8c6c4","neutralTertiary":"#a19f9d","neutralSecondary":"#605e5c","neutralPrimaryAlt":"#3b3a39","neutralPrimary":"#323130","neutralDark":"#201f1e","black":"#000000","white":"#ffffff"}', N'https://goddeerishrmproduction.blob.core.windows.net/goddeerishrmproduction/logo-filled-codic.png')
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'13', N'localhost:5002', N'1', N'Codic', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=CodicTenderOrg;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=CodicTenderCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'ed863e3f-50b5-4d43-ad7a-4ce4723ad373', N'-0O1yLwpWILx9QWIq4YK021bwc-j_5eX~_', N'7892c08a-ffcd-4a61-a996-72854b657d74', N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', N'{"themePrimary":"#3364FF","themeLighterAlt":"#eff6fc","themeLighter":"#deecf9","themeLight":"#c7e0f4","themeTertiary":"#71afe5","themeSecondary":"#2b88d8","themeDarkAlt":"#106ebe","themeDark":"#005a9e","themeDarker":"#004578","neutralLighterAlt":"#faf9f8","neutralLighter":"#f3f2f1","neutralLight":"#edebe9","neutralQuaternaryAlt":"#e1dfdd","neutralQuaternary":"#d0d0d0","neutralTertiaryAlt":"#c8c6c4","neutralTertiary":"#a19f9d","neutralSecondary":"#605e5c","neutralPrimaryAlt":"#3b3a39","neutralPrimary":"#323130","neutralDark":"#201f1e","black":"#000000","white":"#ffffff"}', N'https://goddeerishrmproduction.blob.core.windows.net/goddeerishrmproduction/logo-filled-codic.png')
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'2', N'uprincev4apidev.azurewebsites.net', N'1', N'Mickiesoft', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:bmengineering.database.windows.net,1433;Initial Catalog=bmengineering;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'Server=tcp:bmengineering.database.windows.net,1433;Initial Catalog=bmengineeringCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'ed863e3f-50b5-4d43-ad7a-4ce4723ad373', N'-0O1yLwpWILx9QWIq4YK021bwc-j_5eX~_', N'7892c08a-ffcd-4a61-a996-72854b657d74', NULL, NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'3', N'uprincev4apistaging.azurewebsites.net', N'1', N'Mickiesoft', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:uprincev4staging.database.windows.net,1433;Initial Catalog=UPrinceV4Staging;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'Server=tcp:uprincev4staging.database.windows.net,1433;Initial Catalog=UPrinceV4StagingCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'ed863e3f-50b5-4d43-ad7a-4ce4723ad373', N'-0O1yLwpWILx9QWIq4YK021bwc-j_5eX~_', N'7892c08a-ffcd-4a61-a996-72854b657d74', N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'4', N'uprincev4uat.azurewebsites.net', N'1', N'Mickiesoft', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4UAT;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4UATCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'ed863e3f-50b5-4d43-ad7a-4ce4723ad373', N'-0O1yLwpWILx9QWIq4YK021bwc-j_5eX~_', N'7892c08a-ffcd-4a61-a996-72854b657d74', N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'5', N'uprincev4production.azurewebsites.net', N'1', N'Goddeeris', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4uat;AccountKey=z30DHjc7t+O417deSPhxNn/3Fr9ALmJVbhBr5DDuxof0TYLt20AuYrodm8Sobj0Raw+19wo7qI+yJ0ln7/jqEg==;EndpointSuffix=core.windows.net', N'uprincev4uat', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4Production;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4UATCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', NULL, NULL, NULL, NULL, NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'6', N'uprincev4apiproduction.azurewebsites.net', N'1', N'Goddeeris', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4uat;AccountKey=z30DHjc7t+O417deSPhxNn/3Fr9ALmJVbhBr5DDuxof0TYLt20AuYrodm8Sobj0Raw+19wo7qI+yJ0ln7/jqEg==;EndpointSuffix=core.windows.net', N'uprincev4uat', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4Production;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4UATCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', NULL, NULL, NULL, NULL, NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'7', N'brain.goddeeris.be', N'1', N'Goddeeris', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4uat;AccountKey=z30DHjc7t+O417deSPhxNn/3Fr9ALmJVbhBr5DDuxof0TYLt20AuYrodm8Sobj0Raw+19wo7qI+yJ0ln7/jqEg==;EndpointSuffix=core.windows.net', N'uprincev4uat', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=UPrinceV4Einstein;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=UPrinceV4EinsteinCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', NULL, NULL, NULL, N'https://atlas.microsoft.com/route/directions/batch/sync/json?api-version=1.0&subscription-key=1vju_5glNJUztg8XATTMHJjjaNdnlIuomHT5qp-lEh0', N'{"themePrimary":"#000000","themeLighterAlt":"#eff6fc","themeLighter":"#deecf9","themeLight":"#c7e0f4","themeTertiary":"#71afe5","themeSecondary":"#2b88d8","themeDarkAlt":"#106ebe","themeDark":"#005a9e","themeDarker":"#004578","neutralLighterAlt":"#faf9f8","neutralLighter":"#f3f2f1","neutralLight":"#edebe9","neutralQuaternaryAlt":"#e1dfdd","neutralQuaternary":"#d0d0d0","neutralTertiaryAlt":"#c8c6c4","neutralTertiary":"#a19f9d","neutralSecondary":"#605e5c","neutralPrimaryAlt":"#3b3a39","neutralPrimary":"#323130","neutralDark":"#201f1e","black":"#000000","white":"#ffffff"}', N'https://uprincev4uat.blob.core.windows.net/uprincev4uat/organization.png')
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'8', N'193.168.1.54:5000', N'1', N'Goddeeris', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4uat;AccountKey=z30DHjc7t+O417deSPhxNn/3Fr9ALmJVbhBr5DDuxof0TYLt20AuYrodm8Sobj0Raw+19wo7qI+yJ0ln7/jqEg==;EndpointSuffix=core.windows.net', N'uprincev4uat', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4Production;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', N'Server=tcp:uprincev4uatdb.database.windows.net,1433;Initial Catalog=UPrinceV4UATCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30; MultipleActiveResultSets=true;', NULL, NULL, NULL, NULL, NULL, NULL)
INSERT dbo.UPrinceCustomerTenantsInfo VALUES (N'9', N'uprincev4apibmengineering.azurewebsites.net', N'1', N'Mickiesoft', N'AzureBlob', N'DefaultEndpointsProtocol=https;AccountName=uprincev4dev;AccountKey=rZrNDwBXL0cKSkf7JD0b6/+NBhafqS3GPNOHN4UyeZ0aoy7MMgTV1fAm4tmo0rmDBHreZReZx165R0LZ0yf5DA==;EndpointSuffix=core.windows.net', N'uprincev4dev', N'Server=tcp:bmengineering.database.windows.net,1433;Initial Catalog=bmengineering;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'Server=tcp:bmengineering.database.windows.net,1433;Initial Catalog=bmengineeringCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', NULL, NULL, NULL, NULL, N'#90ff33', NULL)
GO

-- 
-- Dumping data for table UprinceCustomerProfile
--
PRINT (N'Dumping data for table UprinceCustomerProfile')
SET IDENTITY_INSERT dbo.UprinceCustomerProfile ON
GO
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (4, 2, N'pending', N'PrimeFirst')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (5, 3, NULL, NULL)
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (6, 4, NULL, NULL)
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (8, 5, N'string', N'string')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (10, 6, N'Active', N'Prime First')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (12, 7, N'Pending', N'Prime First 2')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (14, 8, NULL, NULL)
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (16, 9, N'Pending', N'Prime First')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (18, 10, N'Pending', N'P2')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (20, 11, N'string', N'string')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (22, 12, N'string', N'string')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (24, 13, N'fdsfs', N'fdfdsfsd')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (26, 14, N'string', N'string')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (28, 15, N'Pending', N'Test Company')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (30, 16, N'Pending', N'Test2')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (32, 17, N'Pending', N'Test3')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (34, 18, N'Active', N'Test 5')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (36, 19, N'Active', N'S14')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (38, 20, N'Pending', N'ABC group')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (40, 21, N'Pending', N'Test Shanuka')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (42, 22, N'Pending', N'Test')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (44, 23, N'Pending', N'Test')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (46, 24, N'Active', N'Test dev')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (48, 25, N'Active', N'First Demo')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (50, 26, N'Pending', N'MickieSoft')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (52, 27, N'Active', N'CSR')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (54, 28, N'Active', N'CSR')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (56, 29, N'Active', N'CSR')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (58, 30, N'Active', N'Goddeeris')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (60, 31, N'Pending', N'Mickiesoft')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (62, 32, N'Pending', N'MICROSOFT')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (64, 33, N'Active', N'Minisoft')
INSERT dbo.UprinceCustomerProfile(ID, UprinceCustomerId, VerificationStatus, CompanyName) VALUES (66, 34, N'Pending', N'Nanosoft')
GO
SET IDENTITY_INSERT dbo.UprinceCustomerProfile OFF
GO

-- 
-- Dumping data for table UprinceCustomerPrimaryContact
--
PRINT (N'Dumping data for table UprinceCustomerPrimaryContact')
-- Table CodicTenderCatelog.dbo.UprinceCustomerPrimaryContact does not contain any data (it is empty)

-- 
-- Dumping data for table UprinceCustomerLocation
--
PRINT (N'Dumping data for table UprinceCustomerLocation')
SET IDENTITY_INSERT dbo.UprinceCustomerLocation ON
GO
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (7, 1, N'S Weerasena silva mawatha', N'Ratmalana', N'Sri Lanka', N'10390')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (10, 17, N'24/A', N'Nugegoda', N'Åland Islands', N'10250')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (11, 18, N'24/A', N'Nugegoda', N'Afghanistan', N'10250')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (12, 19, N'24/A', N'Nugegoda', N'Åland Islands', N'10250')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (13, 20, N'24/A', N'Nugegoda', N'Armenia', N'10250')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (14, 20, N'24/A', N'Nugegoda', N'Armenia', N'10250')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (15, 21, N'1/16', N'Rathmalana', N'Sri Lanka', N'10390')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (16, 25, N'24/A', N'Nugegoda', N'Angola', N'10250')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (17, 30, N'Ovenhoek 26', N'Roeselare', N'Belgium', N'8800')
INSERT dbo.UprinceCustomerLocation(ID, UprinceCustomerId, Street, City, Country, PostalCode) VALUES (18, 32, N'278 Union Pl,', N'Colombo2', N'Sri Lanka', N'10390')
GO
SET IDENTITY_INSERT dbo.UprinceCustomerLocation OFF
GO

-- 
-- Dumping data for table UprinceCustomerLegalAddress
--
PRINT (N'Dumping data for table UprinceCustomerLegalAddress')
-- Table CodicTenderCatelog.dbo.UprinceCustomerLegalAddress does not contain any data (it is empty)

-- 
-- Dumping data for table UprinceCustomerJobRole
--
PRINT (N'Dumping data for table UprinceCustomerJobRole')
SET IDENTITY_INSERT dbo.UprinceCustomerJobRole ON
GO
INSERT dbo.UprinceCustomerJobRole(ID, Role) VALUES (1, N'Administrator')
INSERT dbo.UprinceCustomerJobRole(ID, Role) VALUES (2, N'Project Manager')
INSERT dbo.UprinceCustomerJobRole(ID, Role) VALUES (3, N'Supervisor')
GO
SET IDENTITY_INSERT dbo.UprinceCustomerJobRole OFF
GO

-- 
-- Dumping data for table UPrinceCustomerContractingUnit
--
PRINT (N'Dumping data for table UPrinceCustomerContractingUnit')
INSERT dbo.UPrinceCustomerContractingUnit VALUES (N'1', N'Goddeeris', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=CodicTenderCOM0001;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'1', N'Server=tcp:uprincev4einstein.database.windows.net,1433;Initial Catalog=CodicTenderCatelog;Persist Security Info=False;User ID=uprincedbuser;Password=UPrince2017!;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', N'e0386eac-c9a0-4f93-8baf-d24948bedda9', N'COM-0001', N'1')
GO

-- 
-- Dumping data for table UprinceCustomerContactPreference
--
PRINT (N'Dumping data for table UprinceCustomerContactPreference')
SET IDENTITY_INSERT dbo.UprinceCustomerContactPreference ON
GO
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (1, 0, 1, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (2, 0, 2, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (3, 0, 3, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (6, 0, 4, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (10, 0, 5, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (12, 0, 6, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (13, 0, 7, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (14, 0, 8, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (15, 0, 9, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (18, 0, 10, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (20, 0, 11, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (21, 0, 12, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (22, 0, 13, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (23, 0, 14, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (24, 0, 15, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (25, 0, 16, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (26, 0, 17, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (32, 0, 18, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (35, 0, 19, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (36, 8, 20, N'Mesith', N'Wettasinghe', N'mesith621@gmail.com')
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (37, 1, 21, N'shanuka', N'Gayashan', N'shanukagayashan@gmail.com')
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (38, 0, 22, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (39, 0, 23, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (40, 0, 24, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (41, 7, 25, N'Mesith', N'Wettasinghe', N'mesith621@gmail.com')
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (42, 0, 26, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (43, 0, 27, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (44, 0, 28, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (45, 0, 29, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (46, 1, 30, N'Jan', N'Goddeeris', N'Jan@Goddeeris.be')
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (47, 0, 31, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (48, 1, 32, N'David', N'Fernando', N'davidFernando@microsoft.com')
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (49, 0, 33, NULL, NULL, NULL)
INSERT dbo.UprinceCustomerContactPreference(ID, UPrinceCustomerJobRoleId, UprinceCustomerId, FirstName, LastName, Email) VALUES (50, 0, 34, NULL, NULL, NULL)
GO
SET IDENTITY_INSERT dbo.UprinceCustomerContactPreference OFF
GO

-- 
-- Dumping data for table UprinceCustomer
--
PRINT (N'Dumping data for table UprinceCustomer')
SET IDENTITY_INSERT dbo.UprinceCustomer ON
GO
INSERT dbo.UprinceCustomer(Id) VALUES (1)
INSERT dbo.UprinceCustomer(Id) VALUES (2)
INSERT dbo.UprinceCustomer(Id) VALUES (3)
INSERT dbo.UprinceCustomer(Id) VALUES (4)
INSERT dbo.UprinceCustomer(Id) VALUES (5)
INSERT dbo.UprinceCustomer(Id) VALUES (6)
INSERT dbo.UprinceCustomer(Id) VALUES (7)
INSERT dbo.UprinceCustomer(Id) VALUES (8)
INSERT dbo.UprinceCustomer(Id) VALUES (9)
INSERT dbo.UprinceCustomer(Id) VALUES (10)
INSERT dbo.UprinceCustomer(Id) VALUES (11)
INSERT dbo.UprinceCustomer(Id) VALUES (12)
INSERT dbo.UprinceCustomer(Id) VALUES (13)
INSERT dbo.UprinceCustomer(Id) VALUES (14)
INSERT dbo.UprinceCustomer(Id) VALUES (15)
INSERT dbo.UprinceCustomer(Id) VALUES (16)
INSERT dbo.UprinceCustomer(Id) VALUES (17)
INSERT dbo.UprinceCustomer(Id) VALUES (18)
INSERT dbo.UprinceCustomer(Id) VALUES (19)
INSERT dbo.UprinceCustomer(Id) VALUES (20)
INSERT dbo.UprinceCustomer(Id) VALUES (21)
INSERT dbo.UprinceCustomer(Id) VALUES (22)
INSERT dbo.UprinceCustomer(Id) VALUES (23)
INSERT dbo.UprinceCustomer(Id) VALUES (24)
INSERT dbo.UprinceCustomer(Id) VALUES (25)
INSERT dbo.UprinceCustomer(Id) VALUES (26)
INSERT dbo.UprinceCustomer(Id) VALUES (27)
INSERT dbo.UprinceCustomer(Id) VALUES (28)
INSERT dbo.UprinceCustomer(Id) VALUES (29)
INSERT dbo.UprinceCustomer(Id) VALUES (30)
INSERT dbo.UprinceCustomer(Id) VALUES (31)
INSERT dbo.UprinceCustomer(Id) VALUES (32)
INSERT dbo.UprinceCustomer(Id) VALUES (33)
INSERT dbo.UprinceCustomer(Id) VALUES (34)
GO
SET IDENTITY_INSERT dbo.UprinceCustomer OFF
GO

-- 
-- Dumping data for table UPData
--
PRINT (N'Dumping data for table UPData')
-- Table CodicTenderCatelog.dbo.UPData does not contain any data (it is empty)

-- 
-- Dumping data for table TimeClockActivityType
--
PRINT (N'Dumping data for table TimeClockActivityType')
-- Table CodicTenderCatelog.dbo.TimeClockActivityType does not contain any data (it is empty)

-- 
-- Dumping data for table TimeClock
--
PRINT (N'Dumping data for table TimeClock')
-- Table CodicTenderCatelog.dbo.TimeClock does not contain any data (it is empty)

-- 
-- Dumping data for table Shifts
--
PRINT (N'Dumping data for table Shifts')
-- Table CodicTenderCatelog.dbo.Shifts does not contain any data (it is empty)

-- 
-- Dumping data for table Role
--
PRINT (N'Dumping data for table Role')
-- Table CodicTenderCatelog.dbo.Role does not contain any data (it is empty)

-- 
-- Dumping data for table RiskType
--
PRINT (N'Dumping data for table RiskType')
INSERT dbo.RiskType VALUES (N'4dba0e61-15f8-47a9-8fcd-0ced2e2ce210', N'Threat')
INSERT dbo.RiskType VALUES (N'ac9f4655-f14c-43c7-8e4a-5390bfdc16d0', N'Opportunity')
GO

-- 
-- Dumping data for table RiskStatus
--
PRINT (N'Dumping data for table RiskStatus')
INSERT dbo.RiskStatus VALUES (N'00b0a1c6-e5c8-4143-90f1-7dec0b0397ae', N'Active')
INSERT dbo.RiskStatus VALUES (N'8b0d0513-6111-466f-86c8-b26278c3c4f7', N'Closed')
GO

-- 
-- Dumping data for table RiskHistoryLog
--
PRINT (N'Dumping data for table RiskHistoryLog')
-- Table CodicTenderCatelog.dbo.RiskHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table Risk
--
PRINT (N'Dumping data for table Risk')
-- Table CodicTenderCatelog.dbo.Risk does not contain any data (it is empty)

-- 
-- Dumping data for table QualityHistoryLog
--
PRINT (N'Dumping data for table QualityHistoryLog')
-- Table CodicTenderCatelog.dbo.QualityHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table Quality
--
PRINT (N'Dumping data for table Quality')
-- Table CodicTenderCatelog.dbo.Quality does not contain any data (it is empty)

-- 
-- Dumping data for table QRCode
--
PRINT (N'Dumping data for table QRCode')
-- Table CodicTenderCatelog.dbo.QRCode does not contain any data (it is empty)

-- 
-- Dumping data for table Properties
--
PRINT (N'Dumping data for table Properties')
SET IDENTITY_INSERT dbo.Properties ON
GO
INSERT dbo.Properties(Id, [Key], Value) VALUES (6, N'PbsSequenceCode', N'PBS-0001')
GO
SET IDENTITY_INSERT dbo.Properties OFF
GO

-- 
-- Dumping data for table ProjectType
--
PRINT (N'Dumping data for table ProjectType')
-- Table CodicTenderCatelog.dbo.ProjectType does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectToleranceState
--
PRINT (N'Dumping data for table ProjectToleranceState')
-- Table CodicTenderCatelog.dbo.ProjectToleranceState does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectTime
--
PRINT (N'Dumping data for table ProjectTime')
-- Table CodicTenderCatelog.dbo.ProjectTime does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectTemplate
--
PRINT (N'Dumping data for table ProjectTemplate')
-- Table CodicTenderCatelog.dbo.ProjectTemplate does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectTeam
--
PRINT (N'Dumping data for table ProjectTeam')
-- Table CodicTenderCatelog.dbo.ProjectTeam does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectState
--
PRINT (N'Dumping data for table ProjectState')
-- Table CodicTenderCatelog.dbo.ProjectState does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectManagementLevel
--
PRINT (N'Dumping data for table ProjectManagementLevel')
-- Table CodicTenderCatelog.dbo.ProjectManagementLevel does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectKPI
--
PRINT (N'Dumping data for table ProjectKPI')
-- Table CodicTenderCatelog.dbo.ProjectKPI does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectHistoryLog
--
PRINT (N'Dumping data for table ProjectHistoryLog')
-- Table CodicTenderCatelog.dbo.ProjectHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectFinance
--
PRINT (N'Dumping data for table ProjectFinance')
-- Table CodicTenderCatelog.dbo.ProjectFinance does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectDefinitionHistoryLog
--
PRINT (N'Dumping data for table ProjectDefinitionHistoryLog')
-- Table CodicTenderCatelog.dbo.ProjectDefinitionHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table ProjectDefinition
--
PRINT (N'Dumping data for table ProjectDefinition')
-- Table CodicTenderCatelog.dbo.ProjectDefinition does not contain any data (it is empty)

-- 
-- Dumping data for table PbsTools
--
PRINT (N'Dumping data for table PbsTools')
-- Table CodicTenderCatelog.dbo.PbsTools does not contain any data (it is empty)

-- 
-- Dumping data for table PbsToleranceState
--
PRINT (N'Dumping data for table PbsToleranceState')
INSERT dbo.PbsToleranceState VALUES (N'004eb795-8bba-47e8-9049-d14774ab0b18', N'Within Tolerance (green)', N'ProjectToleranceState.csvWithin Tolerance (green)')
INSERT dbo.PbsToleranceState VALUES (N'8f33bdf6-7600-4ad7-b558-c98899c1e5b2', N'Out of Tolerance (red)', N'ProjectToleranceState.csvOut of Tolerance (red)')
INSERT dbo.PbsToleranceState VALUES (N'd9712fb3-02b6-4c2a-991c-ee904c87d8a8', N'Tolerance limit (orange)', N'ProjectToleranceState.csvTolerance limit (orange)')
GO

-- 
-- Dumping data for table PbsTaxonomyLevel
--
PRINT (N'Dumping data for table PbsTaxonomyLevel')
INSERT dbo.PbsTaxonomyLevel VALUES (N'077845b7-79a7-4883-a02d-6094fc6d6563', N'Location', N'Separation', 200)
INSERT dbo.PbsTaxonomyLevel VALUES (N'8bb27024-ce91-4406-8e48-db08286f0b4b', N'Utility', N'Product', 100)
INSERT dbo.PbsTaxonomyLevel VALUES (N'cd8418c0-502e-4893-b387-1426a5edd3a4', N'Utility', N'Traject Part', 200)
INSERT dbo.PbsTaxonomyLevel VALUES (N'f0d64941-145a-4a8a-8619-165c965a16eb', N'Location', N'Product', 100)
GO

-- 
-- Dumping data for table PbsTaxonomy
--
PRINT (N'Dumping data for table PbsTaxonomy')
-- Table CodicTenderCatelog.dbo.PbsTaxonomy does not contain any data (it is empty)

-- 
-- Dumping data for table PbsSkillExperience
--
PRINT (N'Dumping data for table PbsSkillExperience')
-- Table CodicTenderCatelog.dbo.PbsSkillExperience does not contain any data (it is empty)

-- 
-- Dumping data for table PbsSkill
--
PRINT (N'Dumping data for table PbsSkill')
INSERT dbo.PbsSkill VALUES (N'0ffe382d-fe7d-4ac7-91b3-204570427c371', N'PbsSkillCommunication', N'8b145fdc-b666-488c-beec-f335627024601', NULL)
INSERT dbo.PbsSkill VALUES (N'1ae3028d-ab5b-4d88-bf4a-5bf53d969c4d1', N'PbsSkillListening', N'8b145fdc-b666-488c-beec-f335627024601', NULL)
INSERT dbo.PbsSkill VALUES (N'4a2cb5e5-e9ab-47a6-b1c5-080bdc5d60b61', N'PbsSkillNumeracy', N'fb88dff8-cf84-4cdb-acae-4a8b9241178f1', NULL)
INSERT dbo.PbsSkill VALUES (N'74e9f3ce-5338-467c-add0-ba7116cd300b1', N'PbsSkillReporting', N'fb88dff8-cf84-4cdb-acae-4a8b9241178f1', NULL)
INSERT dbo.PbsSkill VALUES (N'7fd2a1b0-c559-4727-a596-dbc0af7c171e1', N'PbsSkillCritical thinking', N'fb88dff8-cf84-4cdb-acae-4a8b9241178f1', NULL)
INSERT dbo.PbsSkill VALUES (N'8b145fdc-b666-488c-beec-f335627024601', N'PbsSkillTeam Building Skills', N'8b145fdc-b666-488c-beec-f335627024601', NULL)
INSERT dbo.PbsSkill VALUES (N'8f992d6e-7fee-43a3-b06c-430fa4d9d8e41', N'PbsSkillFlexibility', N'8b145fdc-b666-488c-beec-f335627024601', NULL)
INSERT dbo.PbsSkill VALUES (N'a1e3c91b-a8cf-43b1-b551-8bba9f64c3351', N'PbsSkillData analysis', N'fb88dff8-cf84-4cdb-acae-4a8b9241178f1', NULL)
INSERT dbo.PbsSkill VALUES (N'bfd3f176-cc91-4d01-b27f-bef8888fc21c1', N'PbsSkillCollaboration', N'8b145fdc-b666-488c-beec-f335627024601', NULL)
INSERT dbo.PbsSkill VALUES (N'fb88dff8-cf84-4cdb-acae-4a8b9241178f1', N'PbsSkillAnalytical Skills', N'fb88dff8-cf84-4cdb-acae-4a8b9241178f1', NULL)
GO

-- 
-- Dumping data for table PbsRisk
--
PRINT (N'Dumping data for table PbsRisk')
-- Table CodicTenderCatelog.dbo.PbsRisk does not contain any data (it is empty)

-- 
-- Dumping data for table PbsQualityResponsibility
--
PRINT (N'Dumping data for table PbsQualityResponsibility')
-- Table CodicTenderCatelog.dbo.PbsQualityResponsibility does not contain any data (it is empty)

-- 
-- Dumping data for table PbsQuality
--
PRINT (N'Dumping data for table PbsQuality')
-- Table CodicTenderCatelog.dbo.PbsQuality does not contain any data (it is empty)

-- 
-- Dumping data for table PbsProductTaxonomy
--
PRINT (N'Dumping data for table PbsProductTaxonomy')
-- Table CodicTenderCatelog.dbo.PbsProductTaxonomy does not contain any data (it is empty)

-- 
-- Dumping data for table PbsProductStatus
--
PRINT (N'Dumping data for table PbsProductStatus')
INSERT dbo.PbsProductStatus VALUES (N'4010e768-3e06-4702-b337-ee367a82addb', N'Handed Over', N'PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb', 5)
INSERT dbo.PbsProductStatus VALUES (N'7143ff01-d173-4a20-8c17-cacdfecdb84c', N'In Review', N'PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c', 3)
INSERT dbo.PbsProductStatus VALUES (N'7bcb4e8d-8e8c-487d-8170-6b91c89fc3da', N'Approved', N'PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da', 4)
INSERT dbo.PbsProductStatus VALUES (N'94282458-0b40-40a3-b0f9-c2e40344c8f1', N'In Development', N'PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1', 2)
INSERT dbo.PbsProductStatus VALUES (N'd60aad0b-2e84-482b-ad25-618d80d49477', N'Pending Development', N'PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477', 1)
GO

-- 
-- Dumping data for table PbsProductItemType
--
PRINT (N'Dumping data for table PbsProductItemType')
INSERT dbo.PbsProductItemType VALUES (N'48a7dd9c-55ac-4e7c-a2f3-653811c0eb14', N'External Products', N'PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14')
INSERT dbo.PbsProductItemType VALUES (N'aa0c8e3c-f716-4f92-afee-851d485164da', N'Internal Products', N'PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da')
GO

-- 
-- Dumping data for table PbsProduct
--
PRINT (N'Dumping data for table PbsProduct')
-- Table CodicTenderCatelog.dbo.PbsProduct does not contain any data (it is empty)

-- 
-- Dumping data for table PbsMaterial
--
PRINT (N'Dumping data for table PbsMaterial')
-- Table CodicTenderCatelog.dbo.PbsMaterial does not contain any data (it is empty)

-- 
-- Dumping data for table PbsLabour
--
PRINT (N'Dumping data for table PbsLabour')
-- Table CodicTenderCatelog.dbo.PbsLabour does not contain any data (it is empty)

-- 
-- Dumping data for table PbsInstructionLink
--
PRINT (N'Dumping data for table PbsInstructionLink')
-- Table CodicTenderCatelog.dbo.PbsInstructionLink does not contain any data (it is empty)

-- 
-- Dumping data for table PbsInstructionFamily
--
PRINT (N'Dumping data for table PbsInstructionFamily')
INSERT dbo.PbsInstructionFamily VALUES (N'26f71a21-b062-4fc8-b47a-f50038e71fe1', N'Family 01', N'PbsInstructionFamilyTechnical instructions')
INSERT dbo.PbsInstructionFamily VALUES (N'48ec5849-1daf-425c-8fcf-fb0dd9748b8c', N'Family 03', N'PbsInstructionFamilyEnvironmental instructions')
INSERT dbo.PbsInstructionFamily VALUES (N'e286e905-c157-4d19-ac7c-55550df0ee9a', N'Family 04', N'PbsInstructionFamilyHealth instructions')
INSERT dbo.PbsInstructionFamily VALUES (N'fc925493-c443-437d-a367-b88e81941aaa', N'Family 02', N'PbsInstructionFamilySafety instructions')
GO

-- 
-- Dumping data for table PbsInstruction
--
PRINT (N'Dumping data for table PbsInstruction')
-- Table CodicTenderCatelog.dbo.PbsInstruction does not contain any data (it is empty)

-- 
-- Dumping data for table PbsHistoryLog
--
PRINT (N'Dumping data for table PbsHistoryLog')
-- Table CodicTenderCatelog.dbo.PbsHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table PbsExperience
--
PRINT (N'Dumping data for table PbsExperience')
INSERT dbo.PbsExperience VALUES (N'0ffe382d-fe7d-4ac7-91b3-204570427c37', N'Communication', N'PbsSkillCommunication')
INSERT dbo.PbsExperience VALUES (N'1a56fb81-8308-4f72-97c7-32bb0692d297', N'Rookie', N'PbsExperienceRookie')
INSERT dbo.PbsExperience VALUES (N'1ae3028d-ab5b-4d88-bf4a-5bf53d969c4d', N'Listening', N'PbsSkillListening')
INSERT dbo.PbsExperience VALUES (N'2c945d24-3937-47c6-a793-d82f6b53d0c7', N'Skilled', N'PbsExperienceSkilled')
INSERT dbo.PbsExperience VALUES (N'3417e806-8e97-46d3-adb6-34426cd93bf4', N'Intermediate', N'PbsExperienceIntermediate')
INSERT dbo.PbsExperience VALUES (N'42325533-9834-4fd8-ac51-5b4e02fc0494', N'Advanced', N'PbsExperienceAdvanced')
INSERT dbo.PbsExperience VALUES (N'46e02a0c-4c87-437b-8342-b16c2fa6cf45', N'Novice', N'PbsExperienceNovice')
INSERT dbo.PbsExperience VALUES (N'49c32125-f8c2-498b-83a7-48c4a8d112f1', N'Newbie', N'PbsExperienceNewbie')
INSERT dbo.PbsExperience VALUES (N'4a2cb5e5-e9ab-47a6-b1c5-080bdc5d60b6', N'Numeracy', N'PbsSkillNumeracy')
INSERT dbo.PbsExperience VALUES (N'74e9f3ce-5338-467c-add0-ba7116cd300b', N'Reporting', N'PbsSkillReporting')
INSERT dbo.PbsExperience VALUES (N'7fd2a1b0-c559-4727-a596-dbc0af7c171e', N'Critical thinking', N'PbsSkillCritical thinking')
INSERT dbo.PbsExperience VALUES (N'8b145fdc-b666-488c-beec-f33562702460', N'Team Building Skills', N'PbsSkillTeam Building Skills')
INSERT dbo.PbsExperience VALUES (N'8c4bd8eb-f087-4904-8507-0f494dcf7d86', N'Expert', N'PbsExperienceExpert')
INSERT dbo.PbsExperience VALUES (N'8f992d6e-7fee-43a3-b06c-430fa4d9d8e4', N'Flexibility', N'PbsSkillFlexibility')
INSERT dbo.PbsExperience VALUES (N'a1e3c91b-a8cf-43b1-b551-8bba9f64c335', N'Data analysis', N'PbsSkillData analysis')
INSERT dbo.PbsExperience VALUES (N'b08b0641-e260-4750-8141-3cd8c25f6344', N'Skilful', N'PbsExperienceSkilful')
INSERT dbo.PbsExperience VALUES (N'bfd3f176-cc91-4d01-b27f-bef8888fc21c', N'Collaboration', N'PbsSkillCollaboration')
INSERT dbo.PbsExperience VALUES (N'c98e47d8-6b1f-4bee-97a1-fd1207e3670d', N'Talented', N'PbsExperienceTalented')
INSERT dbo.PbsExperience VALUES (N'cec1293c-7f89-48ed-865c-65cc7cbe526f', N'Senior', N'PbsExperienceSenior')
INSERT dbo.PbsExperience VALUES (N'df186961-6453-4c42-af53-c8866684a075', N'Proficient', N'PbsExperienceProficient')
INSERT dbo.PbsExperience VALUES (N'e2ce864c-564c-49a4-8860-b79dbbffb673', N'Beginner', N'PbsExperienceBeginner')
INSERT dbo.PbsExperience VALUES (N'ea27ee00-8b38-48b6-8cc7-6872dc3cf09c', N'Seasoned', N'PbsExperienceSeasoned')
INSERT dbo.PbsExperience VALUES (N'ee146eff-0f1f-44b1-a6ba-73b267416973', N'Experienced', N'PbsExperienceExperienced')
INSERT dbo.PbsExperience VALUES (N'fb88dff8-cf84-4cdb-acae-4a8b9241178f', N'Analytical Skills', N'PbsSkillAnalytical Skills')
GO

-- 
-- Dumping data for table PbsConsumable
--
PRINT (N'Dumping data for table PbsConsumable')
-- Table CodicTenderCatelog.dbo.PbsConsumable does not contain any data (it is empty)

-- 
-- Dumping data for table Log
--
PRINT (N'Dumping data for table Log')
-- Table CodicTenderCatelog.dbo.Log does not contain any data (it is empty)

-- 
-- Dumping data for table Location
--
PRINT (N'Dumping data for table Location')
-- Table CodicTenderCatelog.dbo.Location does not contain any data (it is empty)

-- 
-- Dumping data for table LocalizedData
--
PRINT (N'Dumping data for table LocalizedData')
SET IDENTITY_INSERT dbo.LocalizedData ON
GO
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1628, N'es', N'NoProjectBreakdownStructureAvailable', N'No available project breakdown structure (es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1629, N'nl', N'NoProjectBreakdownStructureAvailable', N'No available project breakdown structure (nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1630, N'nl-BE', N'NoProjectBreakdownStructureAvailable', N'No available project breakdown structure (nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1631, N'zh', N'NoProjectBreakdownStructureAvailable', N'No available project breakdown structure (zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1632, N'zh', N'NoProjectBreakdownStructureAvailable', N'No available project breakdown structure (zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1633, N'es', N'PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14', N'External Products(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1634, N'nl', N'PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14', N'External Products(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1635, N'nl-BE', N'PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14', N'External Products(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1636, N'zh', N'PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14', N'External Products(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1637, N'es', N'PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da', N'Internal Products(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1638, N'nl', N'PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da', N'Internal Products(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1639, N'nl-BE', N'PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da', N'Internal Products(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1640, N'zh', N'PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da', N'Internal Products(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1641, N'es', N'PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477', N'Pending Development(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1643, N'nl', N'PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477', N'Pending Development(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1644, N'nl-BE', N'PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477', N'Pending Development(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1645, N'zh', N'PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477', N'Pending Development(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1646, N'es', N'PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1', N'In Development(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1647, N'nl', N'PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1', N'In Development(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1648, N'nl-BE', N'PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1', N'In Development(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1649, N'zh', N'PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1', N'In Development(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1650, N'es', N'PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c', N'In Review(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1651, N'nl', N'PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c', N'In Review(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1652, N'nl-BE', N'PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c', N'In Review(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1653, N'zh', N'PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c', N'In Review(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1654, N'es', N'PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da', N'Approved(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1655, N'nl', N'PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da', N'Approved(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1656, N'nl-BE', N'PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da', N'Approved(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1657, N'zh', N'PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da', N'Approved(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1658, N'es', N'PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb', N'Handed Over(es)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1659, N'nl', N'PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb', N'Handed Over(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1660, N'nl-BE', N'PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb', N'Handed Over(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1661, N'zh', N'PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb', N'Handed Over(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1662, N'nl', N'PbsExperienceNewbie', N'Newbie(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1663, N'nl', N'PbsExperienceNovice', N'Novice(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1664, N'nl', N'PbsExperienceRookie', N'Rookie(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1665, N'nl', N'PbsExperienceBeginner', N'Beginner(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1666, N'nl', N'PbsExperienceTalented', N'Talented(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1667, N'nl', N'PbsExperienceSkilled', N'Skilled(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1668, N'nl', N'PbsExperienceIntermediate', N'Intermediate(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1669, N'nl', N'PbsExperienceSkilful', N'Skilful(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1670, N'nl', N'PbsExperienceSeasoned', N'Seasoned(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1671, N'nl', N'PbsExperienceProficient', N'Proficient(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1672, N'nl', N'PbsExperienceExperienced', N'Experienced(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1673, N'nl', N'PbsExperienceAdvanced', N'Advanced(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1674, N'nl', N'PbsExperienceSenior', N'Senior(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1675, N'nl', N'PbsExperienceExpert', N'Expert(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1676, N'nl', N'PbsSkillTeam Building Skills', N'Team Building Skills(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1677, N'nl', N'PbsSkillCollaboration', N'Collaboration(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1678, N'nl', N'PbsSkillCommunication', N'Communication(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1679, N'nl', N'PbsSkillFlexibility', N'Flexibility(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1680, N'nl', N'PbsSkillListening', N'Listening(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1681, N'nl', N'PbsSkillAnalytical Skills', N'Analytical Skills(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1682, N'nl', N'PbsSkillCritical thinking', N'Critical thinking(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1683, N'nl', N'PbsSkillData analysis', N'Data analysis(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1684, N'nl', N'PbsSkillNumeracy', N'Numeracy(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1685, N'nl', N'PbsSkillReporting', N'Reporting(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1686, N'nl', N'PbsInstructionFamilyTechnical instructions', N'Technical instructions(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1687, N'nl', N'PbsInstructionFamilySafety instructions', N'Safety instructions(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1688, N'nl', N'PbsInstructionFamilyEnvironmental instructions', N'Environmental instructions(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1689, N'nl', N'PbsInstructionFamilyHealth instructions', N'Health instructions(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1690, N'nl', N'PbsTaxonomy.Utility', N'Utility(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1691, N'nl', N'PbsTaxonomy.Location', N'Location(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1692, N'nl', N'PbsTaxonomy.Scope', N'Scope(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1693, N'nl-BE', N'PbsTaxonomy.Utility', N'Utility(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1694, N'nl-BE', N'PbsTaxonomy.Location', N'Location(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1695, N'nl-BE', N'PbsTaxonomy.Scope', N'Scope(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1696, N'zh', N'PbsTaxonomy.Utility', N'Utility(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1697, N'zh', N'PbsTaxonomy.Location', N'Location(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1698, N'zh', N'PbsTaxonomy.Scope', N'Scope(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1700, N'nl', N'4dba0e61-15f8-47a9-8fcd-0ced2e2ce210', N'Threat(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1701, N'nl', N'ac9f4655-f14c-43c7-8e4a-5390bfdc16d0', N'Opportunity(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1702, N'nl', N'00b0a1c6-e5c8-4143-90f1-7dec0b0397ae', N'Active(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1703, N'nl', N'8b0d0513-6111-466f-86c8-b26278c3c4f7', N'Closed(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1704, N'nl-BE', N'scope.inscope', N'In Scope(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1705, N'nl', N'scope.inscope', N'In Scope(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1706, N'zh', N'scope.inscope', N'In Scope(zh)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1707, N'nl-BE', N'scope.outofscope', N'Out of Scope(nl-BE)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1708, N'nl', N'scope.outofscope', N'Out of Scope(nl)')
INSERT dbo.LocalizedData(Id, LanguageCode, LocaleCode, Label) VALUES (1709, N'zh', N'scope.outofscope', N'Out of Scope(zh)')
GO
SET IDENTITY_INSERT dbo.LocalizedData OFF
GO

-- 
-- Dumping data for table Locales
--
PRINT (N'Dumping data for table Locales')
-- Table CodicTenderCatelog.dbo.Locales does not contain any data (it is empty)

-- 
-- Dumping data for table LastSeenProjectDefinition
--
PRINT (N'Dumping data for table LastSeenProjectDefinition')
-- Table CodicTenderCatelog.dbo.LastSeenProjectDefinition does not contain any data (it is empty)

-- 
-- Dumping data for table ErrorMessage
--
PRINT (N'Dumping data for table ErrorMessage')
INSERT dbo.ErrorMessage VALUES (N'NoProjectBreakdownStructureAvailable', N'No available project breakdown structure', N'NoProjectBreakdownStructureAvailable')
GO

-- 
-- Dumping data for table Currency
--
PRINT (N'Dumping data for table Currency')
-- Table CodicTenderCatelog.dbo.Currency does not contain any data (it is empty)

-- 
-- Dumping data for table CpcVendor
--
PRINT (N'Dumping data for table CpcVendor')
-- Table CodicTenderCatelog.dbo.CpcVendor does not contain any data (it is empty)

-- 
-- Dumping data for table CpcUnitOfSizeMeasure
--
PRINT (N'Dumping data for table CpcUnitOfSizeMeasure')
-- Table CodicTenderCatelog.dbo.CpcUnitOfSizeMeasure does not contain any data (it is empty)

-- 
-- Dumping data for table CpcResourceType
--
PRINT (N'Dumping data for table CpcResourceType')
-- Table CodicTenderCatelog.dbo.CpcResourceType does not contain any data (it is empty)

-- 
-- Dumping data for table CpcResourceNickname
--
PRINT (N'Dumping data for table CpcResourceNickname')
-- Table CodicTenderCatelog.dbo.CpcResourceNickname does not contain any data (it is empty)

-- 
-- Dumping data for table CpcResourceFamily
--
PRINT (N'Dumping data for table CpcResourceFamily')
-- Table CodicTenderCatelog.dbo.CpcResourceFamily does not contain any data (it is empty)

-- 
-- Dumping data for table CpcPressureClass
--
PRINT (N'Dumping data for table CpcPressureClass')
-- Table CodicTenderCatelog.dbo.CpcPressureClass does not contain any data (it is empty)

-- 
-- Dumping data for table CpcMaterial
--
PRINT (N'Dumping data for table CpcMaterial')
INSERT dbo.CpcMaterial VALUES (N'123d2354a-8d13-4041-b756-d25f1bc0e444', N'PVC-U1', N'', 0)
INSERT dbo.CpcMaterial VALUES (N'123d2354a-8d13-4041-b756-d25f1bc0e890', N'PVC', N'', 0)
GO

-- 
-- Dumping data for table CpcImage
--
PRINT (N'Dumping data for table CpcImage')
-- Table CodicTenderCatelog.dbo.CpcImage does not contain any data (it is empty)

-- 
-- Dumping data for table CpcHistoryLog
--
PRINT (N'Dumping data for table CpcHistoryLog')
-- Table CodicTenderCatelog.dbo.CpcHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table CpcBrand
--
PRINT (N'Dumping data for table CpcBrand')
INSERT dbo.CpcBrand VALUES (N'013f0f14-2675-41e5-8219-ff91c9d2c688', N'Geberit', N'')
INSERT dbo.CpcBrand VALUES (N'141f28dd-6fea-4d76-a07c-7e7c65d52a3b', N'Mepla', N'')
GO

-- 
-- Dumping data for table CpcBasicUnitOfMeasure
--
PRINT (N'Dumping data for table CpcBasicUnitOfMeasure')
INSERT dbo.CpcBasicUnitOfMeasure VALUES (N'bcndu374be1-dcdf-cdfg-b13f-482cvsje75262', N'(stuk)', 0, N'')
INSERT dbo.CpcBasicUnitOfMeasure VALUES (N'xmmrkim-dcdf-4749-b13f-482cvsje75262', N'm', 0, N'')
GO

-- 
-- Dumping data for table Country
--
PRINT (N'Dumping data for table Country')
-- Table CodicTenderCatelog.dbo.Country does not contain any data (it is empty)

-- 
-- Dumping data for table CorporateProductCatalog
--
PRINT (N'Dumping data for table CorporateProductCatalog')
-- Table CodicTenderCatelog.dbo.CorporateProductCatalog does not contain any data (it is empty)

-- 
-- Dumping data for table CalendarTemplate
--
PRINT (N'Dumping data for table CalendarTemplate')
-- Table CodicTenderCatelog.dbo.CalendarTemplate does not contain any data (it is empty)

-- 
-- Dumping data for table CabWorkingStatus
--
PRINT (N'Dumping data for table CabWorkingStatus')
-- Table CodicTenderCatelog.dbo.CabWorkingStatus does not contain any data (it is empty)

-- 
-- Dumping data for table CabWhatsApp
--
PRINT (N'Dumping data for table CabWhatsApp')
-- Table CodicTenderCatelog.dbo.CabWhatsApp does not contain any data (it is empty)

-- 
-- Dumping data for table CabVat
--
PRINT (N'Dumping data for table CabVat')
-- Table CodicTenderCatelog.dbo.CabVat does not contain any data (it is empty)

-- 
-- Dumping data for table CabSpecialization
--
PRINT (N'Dumping data for table CabSpecialization')
-- Table CodicTenderCatelog.dbo.CabSpecialization does not contain any data (it is empty)

-- 
-- Dumping data for table CabSkype
--
PRINT (N'Dumping data for table CabSkype')
-- Table CodicTenderCatelog.dbo.CabSkype does not contain any data (it is empty)

-- 
-- Dumping data for table CabSalutation
--
PRINT (N'Dumping data for table CabSalutation')
-- Table CodicTenderCatelog.dbo.CabSalutation does not contain any data (it is empty)

-- 
-- Dumping data for table CabPrimarySubjectMatterDomain
--
PRINT (N'Dumping data for table CabPrimarySubjectMatterDomain')
-- Table CodicTenderCatelog.dbo.CabPrimarySubjectMatterDomain does not contain any data (it is empty)

-- 
-- Dumping data for table CabPersonCompany
--
PRINT (N'Dumping data for table CabPersonCompany')
-- Table CodicTenderCatelog.dbo.CabPersonCompany does not contain any data (it is empty)

-- 
-- Dumping data for table CabPerson
--
PRINT (N'Dumping data for table CabPerson')
-- Table CodicTenderCatelog.dbo.CabPerson does not contain any data (it is empty)

-- 
-- Dumping data for table CabMobilePhone
--
PRINT (N'Dumping data for table CabMobilePhone')
-- Table CodicTenderCatelog.dbo.CabMobilePhone does not contain any data (it is empty)

-- 
-- Dumping data for table CabLandPhone
--
PRINT (N'Dumping data for table CabLandPhone')
-- Table CodicTenderCatelog.dbo.CabLandPhone does not contain any data (it is empty)

-- 
-- Dumping data for table CabHistoryLog
--
PRINT (N'Dumping data for table CabHistoryLog')
-- Table CodicTenderCatelog.dbo.CabHistoryLog does not contain any data (it is empty)

-- 
-- Dumping data for table CabEmail
--
PRINT (N'Dumping data for table CabEmail')
-- Table CodicTenderCatelog.dbo.CabEmail does not contain any data (it is empty)

-- 
-- Dumping data for table CabCompany
--
PRINT (N'Dumping data for table CabCompany')
-- Table CodicTenderCatelog.dbo.CabCompany does not contain any data (it is empty)

-- 
-- Dumping data for table CabBankAccount
--
PRINT (N'Dumping data for table CabBankAccount')
-- Table CodicTenderCatelog.dbo.CabBankAccount does not contain any data (it is empty)

-- 
-- Dumping data for table CabAddress
--
PRINT (N'Dumping data for table CabAddress')
-- Table CodicTenderCatelog.dbo.CabAddress does not contain any data (it is empty)

-- 
-- Dumping data for table AppConfigurationData
--
PRINT (N'Dumping data for table AppConfigurationData')
-- Table CodicTenderCatelog.dbo.AppConfigurationData does not contain any data (it is empty)

-- 
-- Dumping data for table AllUsers
--
PRINT (N'Dumping data for table AllUsers')
-- Table CodicTenderCatelog.dbo.AllUsers does not contain any data (it is empty)

--
-- Create foreign key [FK_UserRole_AllUsers_UserId] on table [dbo].[UserRole]
--
PRINT (N'Create foreign key [FK_UserRole_AllUsers_UserId] on table [dbo].[UserRole]')
GO
IF OBJECT_ID('dbo.FK_UserRole_AllUsers_UserId', 'F') IS NULL
  AND OBJECT_ID('dbo.UserRole', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UserId' AND object_id = OBJECT_ID(N'dbo.UserRole'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.UserRole
  ADD CONSTRAINT FK_UserRole_AllUsers_UserId FOREIGN KEY (UserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_UserRole_Role_RoleId] on table [dbo].[UserRole]
--
PRINT (N'Create foreign key [FK_UserRole_Role_RoleId] on table [dbo].[UserRole]')
GO
IF OBJECT_ID('dbo.FK_UserRole_Role_RoleId', 'F') IS NULL
  AND OBJECT_ID('dbo.UserRole', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Role', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RoleId' AND object_id = OBJECT_ID(N'dbo.UserRole'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Role'))
ALTER TABLE dbo.UserRole
  ADD CONSTRAINT FK_UserRole_Role_RoleId FOREIGN KEY (RoleId) REFERENCES dbo.Role (Id)
GO

--
-- Create foreign key [FK_UprinceCustomerProfile_UprinceCustomer_UprinceCustomerId] on table [dbo].[UprinceCustomerProfile]
--
PRINT (N'Create foreign key [FK_UprinceCustomerProfile_UprinceCustomer_UprinceCustomerId] on table [dbo].[UprinceCustomerProfile]')
GO
IF OBJECT_ID('dbo.FK_UprinceCustomerProfile_UprinceCustomer_UprinceCustomerId', 'F') IS NULL
  AND OBJECT_ID('dbo.UprinceCustomerProfile', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.UprinceCustomer', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerProfile'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.UprinceCustomer'))
ALTER TABLE dbo.UprinceCustomerProfile
  ADD CONSTRAINT FK_UprinceCustomerProfile_UprinceCustomer_UprinceCustomerId FOREIGN KEY (UprinceCustomerId) REFERENCES dbo.UprinceCustomer (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_UprinceCustomerPrimaryContact_UprinceCustomerProfile_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerPrimaryContact]
--
PRINT (N'Create foreign key [FK_UprinceCustomerPrimaryContact_UprinceCustomerProfile_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerPrimaryContact]')
GO
IF OBJECT_ID('dbo.FK_UprinceCustomerPrimaryContact_UprinceCustomerProfile_UprinceCustomerProfileId', 'F') IS NULL
  AND OBJECT_ID('dbo.UprinceCustomerPrimaryContact', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.UprinceCustomerProfile', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerProfileId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerPrimaryContact'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ID' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerProfile'))
ALTER TABLE dbo.UprinceCustomerPrimaryContact
  ADD CONSTRAINT FK_UprinceCustomerPrimaryContact_UprinceCustomerProfile_UprinceCustomerProfileId FOREIGN KEY (UprinceCustomerProfileId) REFERENCES dbo.UprinceCustomerProfile (ID) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_UprinceCustomerLegalAddress_UprinceCustomerProfile_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerLegalAddress]
--
PRINT (N'Create foreign key [FK_UprinceCustomerLegalAddress_UprinceCustomerProfile_UprinceCustomerProfileId] on table [dbo].[UprinceCustomerLegalAddress]')
GO
IF OBJECT_ID('dbo.FK_UprinceCustomerLegalAddress_UprinceCustomerProfile_UprinceCustomerProfileId', 'F') IS NULL
  AND OBJECT_ID('dbo.UprinceCustomerLegalAddress', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.UprinceCustomerProfile', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerProfileId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerLegalAddress'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ID' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerProfile'))
ALTER TABLE dbo.UprinceCustomerLegalAddress
  ADD CONSTRAINT FK_UprinceCustomerLegalAddress_UprinceCustomerProfile_UprinceCustomerProfileId FOREIGN KEY (UprinceCustomerProfileId) REFERENCES dbo.UprinceCustomerProfile (ID) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_UprinceCustomerLocation_UprinceCustomer_UprinceCustomerId] on table [dbo].[UprinceCustomerLocation]
--
PRINT (N'Create foreign key [FK_UprinceCustomerLocation_UprinceCustomer_UprinceCustomerId] on table [dbo].[UprinceCustomerLocation]')
GO
IF OBJECT_ID('dbo.FK_UprinceCustomerLocation_UprinceCustomer_UprinceCustomerId', 'F') IS NULL
  AND OBJECT_ID('dbo.UprinceCustomerLocation', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.UprinceCustomer', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerLocation'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.UprinceCustomer'))
ALTER TABLE dbo.UprinceCustomerLocation
  ADD CONSTRAINT FK_UprinceCustomerLocation_UprinceCustomer_UprinceCustomerId FOREIGN KEY (UprinceCustomerId) REFERENCES dbo.UprinceCustomer (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_UprinceCustomerContactPreference_UprinceCustomer_UprinceCustomerId] on table [dbo].[UprinceCustomerContactPreference]
--
PRINT (N'Create foreign key [FK_UprinceCustomerContactPreference_UprinceCustomer_UprinceCustomerId] on table [dbo].[UprinceCustomerContactPreference]')
GO
IF OBJECT_ID('dbo.FK_UprinceCustomerContactPreference_UprinceCustomer_UprinceCustomerId', 'F') IS NULL
  AND OBJECT_ID('dbo.UprinceCustomerContactPreference', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.UprinceCustomer', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UprinceCustomerId' AND object_id = OBJECT_ID(N'dbo.UprinceCustomerContactPreference'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.UprinceCustomer'))
ALTER TABLE dbo.UprinceCustomerContactPreference
  ADD CONSTRAINT FK_UprinceCustomerContactPreference_UprinceCustomer_UprinceCustomerId FOREIGN KEY (UprinceCustomerId) REFERENCES dbo.UprinceCustomer (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_Shifts_AllUsers_UserId] on table [dbo].[Shifts]
--
PRINT (N'Create foreign key [FK_Shifts_AllUsers_UserId] on table [dbo].[Shifts]')
GO
IF OBJECT_ID('dbo.FK_Shifts_AllUsers_UserId', 'F') IS NULL
  AND OBJECT_ID('dbo.Shifts', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UserId' AND object_id = OBJECT_ID(N'dbo.Shifts'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.Shifts
  ADD CONSTRAINT FK_Shifts_AllUsers_UserId FOREIGN KEY (UserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_Shifts_WorkflowState_WorkflowStateId] on table [dbo].[Shifts]
--
PRINT (N'Create foreign key [FK_Shifts_WorkflowState_WorkflowStateId] on table [dbo].[Shifts]')
GO
IF OBJECT_ID('dbo.FK_Shifts_WorkflowState_WorkflowStateId', 'F') IS NULL
  AND OBJECT_ID('dbo.Shifts', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.WorkflowState', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WorkflowStateId' AND object_id = OBJECT_ID(N'dbo.Shifts'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.WorkflowState'))
ALTER TABLE dbo.Shifts
  ADD CONSTRAINT FK_Shifts_WorkflowState_WorkflowStateId FOREIGN KEY (WorkflowStateId) REFERENCES dbo.WorkflowState (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_RiskHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[RiskHistoryLog]
--
PRINT (N'Create foreign key [FK_RiskHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[RiskHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_RiskHistoryLog_AllUsers_ChangedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.RiskHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.RiskHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.RiskHistoryLog
  ADD CONSTRAINT FK_RiskHistoryLog_AllUsers_ChangedByUserId FOREIGN KEY (ChangedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_QualityHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[QualityHistoryLog]
--
PRINT (N'Create foreign key [FK_QualityHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[QualityHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_QualityHistoryLog_AllUsers_ChangedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.QualityHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.QualityHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.QualityHistoryLog
  ADD CONSTRAINT FK_QualityHistoryLog_AllUsers_ChangedByUserId FOREIGN KEY (ChangedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_ProjectDefinitionHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[ProjectDefinitionHistoryLog]
--
PRINT (N'Create foreign key [FK_ProjectDefinitionHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[ProjectDefinitionHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_ProjectDefinitionHistoryLog_AllUsers_ChangedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectDefinitionHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinitionHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.ProjectDefinitionHistoryLog
  ADD CONSTRAINT FK_ProjectDefinitionHistoryLog_AllUsers_ChangedByUserId FOREIGN KEY (ChangedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_ProjectDefinition_ProjectManagementLevel_ProjectManagementLevelId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create foreign key [FK_ProjectDefinition_ProjectManagementLevel_ProjectManagementLevelId] on table [dbo].[ProjectDefinition]')
GO
IF OBJECT_ID('dbo.FK_ProjectDefinition_ProjectManagementLevel_ProjectManagementLevelId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectManagementLevel', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectManagementLevelId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectManagementLevel'))
ALTER TABLE dbo.ProjectDefinition
  ADD CONSTRAINT FK_ProjectDefinition_ProjectManagementLevel_ProjectManagementLevelId FOREIGN KEY (ProjectManagementLevelId) REFERENCES dbo.ProjectManagementLevel (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_ProjectDefinition_ProjectTemplate_ProjectTemplateId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create foreign key [FK_ProjectDefinition_ProjectTemplate_ProjectTemplateId] on table [dbo].[ProjectDefinition]')
GO
IF OBJECT_ID('dbo.FK_ProjectDefinition_ProjectTemplate_ProjectTemplateId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectTemplate', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectTemplateId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectTemplate'))
ALTER TABLE dbo.ProjectDefinition
  ADD CONSTRAINT FK_ProjectDefinition_ProjectTemplate_ProjectTemplateId FOREIGN KEY (ProjectTemplateId) REFERENCES dbo.ProjectTemplate (Id)
GO

--
-- Create foreign key [FK_ProjectDefinition_ProjectToleranceState_ProjectToleranceStateId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create foreign key [FK_ProjectDefinition_ProjectToleranceState_ProjectToleranceStateId] on table [dbo].[ProjectDefinition]')
GO
IF OBJECT_ID('dbo.FK_ProjectDefinition_ProjectToleranceState_ProjectToleranceStateId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectToleranceState', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectToleranceStateId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectToleranceState'))
ALTER TABLE dbo.ProjectDefinition
  ADD CONSTRAINT FK_ProjectDefinition_ProjectToleranceState_ProjectToleranceStateId FOREIGN KEY (ProjectToleranceStateId) REFERENCES dbo.ProjectToleranceState (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_ProjectDefinition_ProjectType_ProjectTypeId] on table [dbo].[ProjectDefinition]
--
PRINT (N'Create foreign key [FK_ProjectDefinition_ProjectType_ProjectTypeId] on table [dbo].[ProjectDefinition]')
GO
IF OBJECT_ID('dbo.FK_ProjectDefinition_ProjectType_ProjectTypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectType', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectTypeId' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectType'))
ALTER TABLE dbo.ProjectDefinition
  ADD CONSTRAINT FK_ProjectDefinition_ProjectType_ProjectTypeId FOREIGN KEY (ProjectTypeId) REFERENCES dbo.ProjectType (Id)
GO

--
-- Create foreign key [FK_Quality_ProjectDefinition_ProjectDefinitionId] on table [dbo].[Quality]
--
PRINT (N'Create foreign key [FK_Quality_ProjectDefinition_ProjectDefinitionId] on table [dbo].[Quality]')
GO
IF OBJECT_ID('dbo.FK_Quality_ProjectDefinition_ProjectDefinitionId', 'F') IS NULL
  AND OBJECT_ID('dbo.Quality', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectDefinitionId' AND object_id = OBJECT_ID(N'dbo.Quality'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.Quality
  ADD CONSTRAINT FK_Quality_ProjectDefinition_ProjectDefinitionId FOREIGN KEY (ProjectDefinitionId) REFERENCES dbo.ProjectDefinition (Id)
GO

--
-- Create foreign key [FK_QRCode_ProjectDefinition_ProjectId] on table [dbo].[QRCode]
--
PRINT (N'Create foreign key [FK_QRCode_ProjectDefinition_ProjectId] on table [dbo].[QRCode]')
GO
IF OBJECT_ID('dbo.FK_QRCode_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.QRCode', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.QRCode'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.QRCode
  ADD CONSTRAINT FK_QRCode_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id)
GO

--
-- Create foreign key [FK_QRCode_TimeClockActivityType_ActivityTypeId] on table [dbo].[QRCode]
--
PRINT (N'Create foreign key [FK_QRCode_TimeClockActivityType_ActivityTypeId] on table [dbo].[QRCode]')
GO
IF OBJECT_ID('dbo.FK_QRCode_TimeClockActivityType_ActivityTypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.QRCode', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.TimeClockActivityType', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ActivityTypeId' AND object_id = OBJECT_ID(N'dbo.QRCode'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.TimeClockActivityType'))
ALTER TABLE dbo.QRCode
  ADD CONSTRAINT FK_QRCode_TimeClockActivityType_ActivityTypeId FOREIGN KEY (ActivityTypeId) REFERENCES dbo.TimeClockActivityType (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_TimeClock_AllUsers_UserId] on table [dbo].[TimeClock]
--
PRINT (N'Create foreign key [FK_TimeClock_AllUsers_UserId] on table [dbo].[TimeClock]')
GO
IF OBJECT_ID('dbo.FK_TimeClock_AllUsers_UserId', 'F') IS NULL
  AND OBJECT_ID('dbo.TimeClock', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'UserId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.TimeClock
  ADD CONSTRAINT FK_TimeClock_AllUsers_UserId FOREIGN KEY (UserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_TimeClock_Location_LocationId] on table [dbo].[TimeClock]
--
PRINT (N'Create foreign key [FK_TimeClock_Location_LocationId] on table [dbo].[TimeClock]')
GO
IF OBJECT_ID('dbo.FK_TimeClock_Location_LocationId', 'F') IS NULL
  AND OBJECT_ID('dbo.TimeClock', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Location', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LocationId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Location'))
ALTER TABLE dbo.TimeClock
  ADD CONSTRAINT FK_TimeClock_Location_LocationId FOREIGN KEY (LocationId) REFERENCES dbo.Location (Id)
GO

--
-- Create foreign key [FK_TimeClock_QRCode_QRCodeId] on table [dbo].[TimeClock]
--
PRINT (N'Create foreign key [FK_TimeClock_QRCode_QRCodeId] on table [dbo].[TimeClock]')
GO
IF OBJECT_ID('dbo.FK_TimeClock_QRCode_QRCodeId', 'F') IS NULL
  AND OBJECT_ID('dbo.TimeClock', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.QRCode', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QRCodeId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.QRCode'))
ALTER TABLE dbo.TimeClock
  ADD CONSTRAINT FK_TimeClock_QRCode_QRCodeId FOREIGN KEY (QRCodeId) REFERENCES dbo.QRCode (Id)
GO

--
-- Create foreign key [FK_TimeClock_Shifts_ShiftId] on table [dbo].[TimeClock]
--
PRINT (N'Create foreign key [FK_TimeClock_Shifts_ShiftId] on table [dbo].[TimeClock]')
GO
IF OBJECT_ID('dbo.FK_TimeClock_Shifts_ShiftId', 'F') IS NULL
  AND OBJECT_ID('dbo.TimeClock', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Shifts', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ShiftId' AND object_id = OBJECT_ID(N'dbo.TimeClock'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Shifts'))
ALTER TABLE dbo.TimeClock
  ADD CONSTRAINT FK_TimeClock_Shifts_ShiftId FOREIGN KEY (ShiftId) REFERENCES dbo.Shifts (Id)
GO

--
-- Create foreign key [FK_ProjectTime_CalendarTemplate_CalendarTemplateId] on table [dbo].[ProjectTime]
--
PRINT (N'Create foreign key [FK_ProjectTime_CalendarTemplate_CalendarTemplateId] on table [dbo].[ProjectTime]')
GO
IF OBJECT_ID('dbo.FK_ProjectTime_CalendarTemplate_CalendarTemplateId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectTime', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CalendarTemplate', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CalendarTemplateId' AND object_id = OBJECT_ID(N'dbo.ProjectTime'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CalendarTemplate'))
ALTER TABLE dbo.ProjectTime
  ADD CONSTRAINT FK_ProjectTime_CalendarTemplate_CalendarTemplateId FOREIGN KEY (CalendarTemplateId) REFERENCES dbo.CalendarTemplate (Id)
GO

--
-- Create foreign key [FK_ProjectTime_ProjectDefinition_ProjectId] on table [dbo].[ProjectTime]
--
PRINT (N'Create foreign key [FK_ProjectTime_ProjectDefinition_ProjectId] on table [dbo].[ProjectTime]')
GO
IF OBJECT_ID('dbo.FK_ProjectTime_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectTime', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectTime'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.ProjectTime
  ADD CONSTRAINT FK_ProjectTime_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_ProjectTeam_AllUsers_ProjectEngineerId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create foreign key [FK_ProjectTeam_AllUsers_ProjectEngineerId] on table [dbo].[ProjectTeam]')
GO
IF OBJECT_ID('dbo.FK_ProjectTeam_AllUsers_ProjectEngineerId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectTeam', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectEngineerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.ProjectTeam
  ADD CONSTRAINT FK_ProjectTeam_AllUsers_ProjectEngineerId FOREIGN KEY (ProjectEngineerId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_ProjectTeam_AllUsers_ProjectManagerId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create foreign key [FK_ProjectTeam_AllUsers_ProjectManagerId] on table [dbo].[ProjectTeam]')
GO
IF OBJECT_ID('dbo.FK_ProjectTeam_AllUsers_ProjectManagerId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectTeam', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectManagerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.ProjectTeam
  ADD CONSTRAINT FK_ProjectTeam_AllUsers_ProjectManagerId FOREIGN KEY (ProjectManagerId) REFERENCES dbo.AllUsers (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_ProjectTeam_AllUsers_ProjectOwnerId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create foreign key [FK_ProjectTeam_AllUsers_ProjectOwnerId] on table [dbo].[ProjectTeam]')
GO
IF OBJECT_ID('dbo.FK_ProjectTeam_AllUsers_ProjectOwnerId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectTeam', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectOwnerId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.ProjectTeam
  ADD CONSTRAINT FK_ProjectTeam_AllUsers_ProjectOwnerId FOREIGN KEY (ProjectOwnerId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_ProjectTeam_ProjectDefinition_ProjectId] on table [dbo].[ProjectTeam]
--
PRINT (N'Create foreign key [FK_ProjectTeam_ProjectDefinition_ProjectId] on table [dbo].[ProjectTeam]')
GO
IF OBJECT_ID('dbo.FK_ProjectTeam_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectTeam', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectTeam'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.ProjectTeam
  ADD CONSTRAINT FK_ProjectTeam_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id)
GO

--
-- Create foreign key [FK_ProjectKPI_ProjectDefinition_ProjectId] on table [dbo].[ProjectKPI]
--
PRINT (N'Create foreign key [FK_ProjectKPI_ProjectDefinition_ProjectId] on table [dbo].[ProjectKPI]')
GO
IF OBJECT_ID('dbo.FK_ProjectKPI_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectKPI', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectKPI'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.ProjectKPI
  ADD CONSTRAINT FK_ProjectKPI_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_ProjectHistoryLog_AllUsers_CreatedByUserId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create foreign key [FK_ProjectHistoryLog_AllUsers_CreatedByUserId] on table [dbo].[ProjectHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_ProjectHistoryLog_AllUsers_CreatedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CreatedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.ProjectHistoryLog
  ADD CONSTRAINT FK_ProjectHistoryLog_AllUsers_CreatedByUserId FOREIGN KEY (CreatedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_ProjectHistoryLog_AllUsers_ModifiedByUserId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create foreign key [FK_ProjectHistoryLog_AllUsers_ModifiedByUserId] on table [dbo].[ProjectHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_ProjectHistoryLog_AllUsers_ModifiedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ModifiedByUserId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.ProjectHistoryLog
  ADD CONSTRAINT FK_ProjectHistoryLog_AllUsers_ModifiedByUserId FOREIGN KEY (ModifiedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_ProjectHistoryLog_ProjectDefinition_ProjectId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create foreign key [FK_ProjectHistoryLog_ProjectDefinition_ProjectId] on table [dbo].[ProjectHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_ProjectHistoryLog_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.ProjectHistoryLog
  ADD CONSTRAINT FK_ProjectHistoryLog_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id)
GO

--
-- Create foreign key [FK_ProjectHistoryLog_ProjectState_ProjectStateId] on table [dbo].[ProjectHistoryLog]
--
PRINT (N'Create foreign key [FK_ProjectHistoryLog_ProjectState_ProjectStateId] on table [dbo].[ProjectHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_ProjectHistoryLog_ProjectState_ProjectStateId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectState', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectStateId' AND object_id = OBJECT_ID(N'dbo.ProjectHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectState'))
ALTER TABLE dbo.ProjectHistoryLog
  ADD CONSTRAINT FK_ProjectHistoryLog_ProjectState_ProjectStateId FOREIGN KEY (ProjectStateId) REFERENCES dbo.ProjectState (Id)
GO

--
-- Create foreign key [FK_ProjectFinance_Currency_CurrencyId] on table [dbo].[ProjectFinance]
--
PRINT (N'Create foreign key [FK_ProjectFinance_Currency_CurrencyId] on table [dbo].[ProjectFinance]')
GO
IF OBJECT_ID('dbo.FK_ProjectFinance_Currency_CurrencyId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectFinance', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Currency', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CurrencyId' AND object_id = OBJECT_ID(N'dbo.ProjectFinance'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Currency'))
ALTER TABLE dbo.ProjectFinance
  ADD CONSTRAINT FK_ProjectFinance_Currency_CurrencyId FOREIGN KEY (CurrencyId) REFERENCES dbo.Currency (Id)
GO

--
-- Create foreign key [FK_ProjectFinance_ProjectDefinition_ProjectId] on table [dbo].[ProjectFinance]
--
PRINT (N'Create foreign key [FK_ProjectFinance_ProjectDefinition_ProjectId] on table [dbo].[ProjectFinance]')
GO
IF OBJECT_ID('dbo.FK_ProjectFinance_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.ProjectFinance', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.ProjectFinance'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.ProjectFinance
  ADD CONSTRAINT FK_ProjectFinance_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id) ON DELETE CASCADE
GO

--
-- Create foreign key [FK_PbsSkill_PbsSkill_ParentId] on table [dbo].[PbsSkill]
--
PRINT (N'Create foreign key [FK_PbsSkill_PbsSkill_ParentId] on table [dbo].[PbsSkill]')
GO
IF OBJECT_ID('dbo.FK_PbsSkill_PbsSkill_ParentId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsSkill', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsSkill', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ParentId' AND object_id = OBJECT_ID(N'dbo.PbsSkill'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsSkill'))
ALTER TABLE dbo.PbsSkill
  ADD CONSTRAINT FK_PbsSkill_PbsSkill_ParentId FOREIGN KEY (ParentId) REFERENCES dbo.PbsSkill (Id)
GO

--
-- Create foreign key [FK_PbsHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[PbsHistoryLog]
--
PRINT (N'Create foreign key [FK_PbsHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[PbsHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_PbsHistoryLog_AllUsers_ChangedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.PbsHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.PbsHistoryLog
  ADD CONSTRAINT FK_PbsHistoryLog_AllUsers_ChangedByUserId FOREIGN KEY (ChangedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcBasicUnitOfMeasure_CpcBasicUnitOfMeasureId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcBasicUnitOfMeasure_CpcBasicUnitOfMeasureId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcBasicUnitOfMeasure_CpcBasicUnitOfMeasureId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcBasicUnitOfMeasure', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcBasicUnitOfMeasureId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcBasicUnitOfMeasure'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcBasicUnitOfMeasure_CpcBasicUnitOfMeasureId FOREIGN KEY (CpcBasicUnitOfMeasureId) REFERENCES dbo.CpcBasicUnitOfMeasure (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcBrand_CpcBrandId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcBrand_CpcBrandId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcBrand_CpcBrandId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcBrand', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcBrandId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcBrand'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcBrand_CpcBrandId FOREIGN KEY (CpcBrandId) REFERENCES dbo.CpcBrand (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcMaterial_CpcMaterialId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcMaterial_CpcMaterialId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcMaterial_CpcMaterialId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcMaterial', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcMaterialId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcMaterial'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcMaterial_CpcMaterialId FOREIGN KEY (CpcMaterialId) REFERENCES dbo.CpcMaterial (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcPressureClass_CpcPressureClassId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcPressureClass_CpcPressureClassId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcPressureClass_CpcPressureClassId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcPressureClass', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcPressureClassId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcPressureClass'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcPressureClass_CpcPressureClassId FOREIGN KEY (CpcPressureClassId) REFERENCES dbo.CpcPressureClass (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcResourceFamily_ResourceFamilyId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcResourceFamily_ResourceFamilyId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcResourceFamily_ResourceFamilyId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcResourceFamily', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ResourceFamilyId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcResourceFamily'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcResourceFamily_ResourceFamilyId FOREIGN KEY (ResourceFamilyId) REFERENCES dbo.CpcResourceFamily (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcResourceType_ResourceTypeId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcResourceType_ResourceTypeId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcResourceType_ResourceTypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcResourceType', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ResourceTypeId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcResourceType'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcResourceType_ResourceTypeId FOREIGN KEY (ResourceTypeId) REFERENCES dbo.CpcResourceType (Id)
GO

--
-- Create foreign key [FK_CorporateProductCatalog_CpcUnitOfSizeMeasure_CpcUnitOfSizeMeasureId] on table [dbo].[CorporateProductCatalog]
--
PRINT (N'Create foreign key [FK_CorporateProductCatalog_CpcUnitOfSizeMeasure_CpcUnitOfSizeMeasureId] on table [dbo].[CorporateProductCatalog]')
GO
IF OBJECT_ID('dbo.FK_CorporateProductCatalog_CpcUnitOfSizeMeasure_CpcUnitOfSizeMeasureId', 'F') IS NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CpcUnitOfSizeMeasure', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CpcUnitOfSizeMeasureId' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CpcUnitOfSizeMeasure'))
ALTER TABLE dbo.CorporateProductCatalog
  ADD CONSTRAINT FK_CorporateProductCatalog_CpcUnitOfSizeMeasure_CpcUnitOfSizeMeasureId FOREIGN KEY (CpcUnitOfSizeMeasureId) REFERENCES dbo.CpcUnitOfSizeMeasure (Id)
GO

--
-- Create foreign key [FK_CpcResourceNickname_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcResourceNickname]
--
PRINT (N'Create foreign key [FK_CpcResourceNickname_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcResourceNickname]')
GO
IF OBJECT_ID('dbo.FK_CpcResourceNickname_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.CpcResourceNickname', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcResourceNickname'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.CpcResourceNickname
  ADD CONSTRAINT FK_CpcResourceNickname_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_CpcImage_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcImage]
--
PRINT (N'Create foreign key [FK_CpcImage_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcImage]')
GO
IF OBJECT_ID('dbo.FK_CpcImage_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.CpcImage', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcImage'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.CpcImage
  ADD CONSTRAINT FK_CpcImage_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_CpcHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[CpcHistoryLog]
--
PRINT (N'Create foreign key [FK_CpcHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[CpcHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_CpcHistoryLog_AllUsers_ChangedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.CpcHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.CpcHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.CpcHistoryLog
  ADD CONSTRAINT FK_CpcHistoryLog_AllUsers_ChangedByUserId FOREIGN KEY (ChangedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_CpcHistoryLog_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcHistoryLog]
--
PRINT (N'Create foreign key [FK_CpcHistoryLog_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_CpcHistoryLog_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.CpcHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.CpcHistoryLog
  ADD CONSTRAINT FK_CpcHistoryLog_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_CabAddress_Country_CountryId] on table [dbo].[CabAddress]
--
PRINT (N'Create foreign key [FK_CabAddress_Country_CountryId] on table [dbo].[CabAddress]')
GO
IF OBJECT_ID('dbo.FK_CabAddress_Country_CountryId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabAddress', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Country', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CountryId' AND object_id = OBJECT_ID(N'dbo.CabAddress'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Country'))
ALTER TABLE dbo.CabAddress
  ADD CONSTRAINT FK_CabAddress_Country_CountryId FOREIGN KEY (CountryId) REFERENCES dbo.Country (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabAddress_AddressId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabAddress_AddressId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabAddress_AddressId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabAddress', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'AddressId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabAddress'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabAddress_AddressId FOREIGN KEY (AddressId) REFERENCES dbo.CabAddress (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabEmail_BusinessEmailId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabEmail_BusinessEmailId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabEmail_BusinessEmailId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabEmail', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'BusinessEmailId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabEmail'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabEmail_BusinessEmailId FOREIGN KEY (BusinessEmailId) REFERENCES dbo.CabEmail (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabEmail_EmailId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabEmail_EmailId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabEmail_EmailId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabEmail', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'EmailId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabEmail'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabEmail_EmailId FOREIGN KEY (EmailId) REFERENCES dbo.CabEmail (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabLandPhone_LandPhoneId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabLandPhone_LandPhoneId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabLandPhone_LandPhoneId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabLandPhone', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LandPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabLandPhone'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabLandPhone_LandPhoneId FOREIGN KEY (LandPhoneId) REFERENCES dbo.CabLandPhone (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabMobilePhone_BusinessPhoneId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabMobilePhone_BusinessPhoneId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabMobilePhone_BusinessPhoneId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabMobilePhone', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'BusinessPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabMobilePhone'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabMobilePhone_BusinessPhoneId FOREIGN KEY (BusinessPhoneId) REFERENCES dbo.CabMobilePhone (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabMobilePhone_MobilePhoneId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabMobilePhone_MobilePhoneId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabMobilePhone_MobilePhoneId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabMobilePhone', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'MobilePhoneId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabMobilePhone'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabMobilePhone_MobilePhoneId FOREIGN KEY (MobilePhoneId) REFERENCES dbo.CabMobilePhone (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabSkype_SkypeId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabSkype_SkypeId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabSkype_SkypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabSkype', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'SkypeId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabSkype'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabSkype_SkypeId FOREIGN KEY (SkypeId) REFERENCES dbo.CabSkype (Id)
GO

--
-- Create foreign key [FK_CabPerson_CabWhatsApp_WhatsAppId] on table [dbo].[CabPerson]
--
PRINT (N'Create foreign key [FK_CabPerson_CabWhatsApp_WhatsAppId] on table [dbo].[CabPerson]')
GO
IF OBJECT_ID('dbo.FK_CabPerson_CabWhatsApp_WhatsAppId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabWhatsApp', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WhatsAppId' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabWhatsApp'))
ALTER TABLE dbo.CabPerson
  ADD CONSTRAINT FK_CabPerson_CabWhatsApp_WhatsAppId FOREIGN KEY (WhatsAppId) REFERENCES dbo.CabWhatsApp (Id)
GO

--
-- Create foreign key [FK_Risk_CabPerson_CabPersonId] on table [dbo].[Risk]
--
PRINT (N'Create foreign key [FK_Risk_CabPerson_CabPersonId] on table [dbo].[Risk]')
GO
IF OBJECT_ID('dbo.FK_Risk_CabPerson_CabPersonId', 'F') IS NULL
  AND OBJECT_ID('dbo.Risk', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CabPersonId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.Risk
  ADD CONSTRAINT FK_Risk_CabPerson_CabPersonId FOREIGN KEY (CabPersonId) REFERENCES dbo.CabPerson (Id)
GO

--
-- Create foreign key [FK_Risk_ProjectDefinition_ProjectDefinitionId] on table [dbo].[Risk]
--
PRINT (N'Create foreign key [FK_Risk_ProjectDefinition_ProjectDefinitionId] on table [dbo].[Risk]')
GO
IF OBJECT_ID('dbo.FK_Risk_ProjectDefinition_ProjectDefinitionId', 'F') IS NULL
  AND OBJECT_ID('dbo.Risk', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectDefinitionId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.Risk
  ADD CONSTRAINT FK_Risk_ProjectDefinition_ProjectDefinitionId FOREIGN KEY (ProjectDefinitionId) REFERENCES dbo.ProjectDefinition (Id)
GO

--
-- Create foreign key [FK_Risk_RiskStatus_RiskStatusId] on table [dbo].[Risk]
--
PRINT (N'Create foreign key [FK_Risk_RiskStatus_RiskStatusId] on table [dbo].[Risk]')
GO
IF OBJECT_ID('dbo.FK_Risk_RiskStatus_RiskStatusId', 'F') IS NULL
  AND OBJECT_ID('dbo.Risk', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.RiskStatus', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RiskStatusId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.RiskStatus'))
ALTER TABLE dbo.Risk
  ADD CONSTRAINT FK_Risk_RiskStatus_RiskStatusId FOREIGN KEY (RiskStatusId) REFERENCES dbo.RiskStatus (Id)
GO

--
-- Create foreign key [FK_Risk_RiskType_RiskTypeId] on table [dbo].[Risk]
--
PRINT (N'Create foreign key [FK_Risk_RiskType_RiskTypeId] on table [dbo].[Risk]')
GO
IF OBJECT_ID('dbo.FK_Risk_RiskType_RiskTypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.Risk', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.RiskType', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RiskTypeId' AND object_id = OBJECT_ID(N'dbo.Risk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.RiskType'))
ALTER TABLE dbo.Risk
  ADD CONSTRAINT FK_Risk_RiskType_RiskTypeId FOREIGN KEY (RiskTypeId) REFERENCES dbo.RiskType (Id)
GO

--
-- Create foreign key [FK_PbsQualityResponsibility_CabPerson_QualityApproverId] on table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create foreign key [FK_PbsQualityResponsibility_CabPerson_QualityApproverId] on table [dbo].[PbsQualityResponsibility]')
GO
IF OBJECT_ID('dbo.FK_PbsQualityResponsibility_CabPerson_QualityApproverId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsQualityResponsibility', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityApproverId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.PbsQualityResponsibility
  ADD CONSTRAINT FK_PbsQualityResponsibility_CabPerson_QualityApproverId FOREIGN KEY (QualityApproverId) REFERENCES dbo.CabPerson (Id)
GO

--
-- Create foreign key [FK_PbsQualityResponsibility_CabPerson_QualityProducerId] on table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create foreign key [FK_PbsQualityResponsibility_CabPerson_QualityProducerId] on table [dbo].[PbsQualityResponsibility]')
GO
IF OBJECT_ID('dbo.FK_PbsQualityResponsibility_CabPerson_QualityProducerId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsQualityResponsibility', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityProducerId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.PbsQualityResponsibility
  ADD CONSTRAINT FK_PbsQualityResponsibility_CabPerson_QualityProducerId FOREIGN KEY (QualityProducerId) REFERENCES dbo.CabPerson (Id)
GO

--
-- Create foreign key [FK_PbsQualityResponsibility_CabPerson_QualityReviewerId] on table [dbo].[PbsQualityResponsibility]
--
PRINT (N'Create foreign key [FK_PbsQualityResponsibility_CabPerson_QualityReviewerId] on table [dbo].[PbsQualityResponsibility]')
GO
IF OBJECT_ID('dbo.FK_PbsQualityResponsibility_CabPerson_QualityReviewerId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsQualityResponsibility', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityReviewerId' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.PbsQualityResponsibility
  ADD CONSTRAINT FK_PbsQualityResponsibility_CabPerson_QualityReviewerId FOREIGN KEY (QualityReviewerId) REFERENCES dbo.CabPerson (Id)
GO

--
-- Create foreign key [FK_PbsProduct_PbsProduct_ParentId] on table [dbo].[PbsProduct]
--
PRINT (N'Create foreign key [FK_PbsProduct_PbsProduct_ParentId] on table [dbo].[PbsProduct]')
GO
IF OBJECT_ID('dbo.FK_PbsProduct_PbsProduct_ParentId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ParentId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsProduct
  ADD CONSTRAINT FK_PbsProduct_PbsProduct_ParentId FOREIGN KEY (ParentId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsProduct_PbsProductItemType_PbsProductItemTypeId] on table [dbo].[PbsProduct]
--
PRINT (N'Create foreign key [FK_PbsProduct_PbsProductItemType_PbsProductItemTypeId] on table [dbo].[PbsProduct]')
GO
IF OBJECT_ID('dbo.FK_PbsProduct_PbsProductItemType_PbsProductItemTypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProductItemType', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductItemTypeId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProductItemType'))
ALTER TABLE dbo.PbsProduct
  ADD CONSTRAINT FK_PbsProduct_PbsProductItemType_PbsProductItemTypeId FOREIGN KEY (PbsProductItemTypeId) REFERENCES dbo.PbsProductItemType (Id)
GO

--
-- Create foreign key [FK_PbsProduct_PbsProductStatus_PbsProductStatusId] on table [dbo].[PbsProduct]
--
PRINT (N'Create foreign key [FK_PbsProduct_PbsProductStatus_PbsProductStatusId] on table [dbo].[PbsProduct]')
GO
IF OBJECT_ID('dbo.FK_PbsProduct_PbsProductStatus_PbsProductStatusId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProductStatus', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductStatusId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProductStatus'))
ALTER TABLE dbo.PbsProduct
  ADD CONSTRAINT FK_PbsProduct_PbsProductStatus_PbsProductStatusId FOREIGN KEY (PbsProductStatusId) REFERENCES dbo.PbsProductStatus (Id)
GO

--
-- Create foreign key [FK_PbsProduct_PbsQualityResponsibility_PbsQualityResponsibilityId] on table [dbo].[PbsProduct]
--
PRINT (N'Create foreign key [FK_PbsProduct_PbsQualityResponsibility_PbsQualityResponsibilityId] on table [dbo].[PbsProduct]')
GO
IF OBJECT_ID('dbo.FK_PbsProduct_PbsQualityResponsibility_PbsQualityResponsibilityId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsQualityResponsibility', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsQualityResponsibilityId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsQualityResponsibility'))
ALTER TABLE dbo.PbsProduct
  ADD CONSTRAINT FK_PbsProduct_PbsQualityResponsibility_PbsQualityResponsibilityId FOREIGN KEY (PbsQualityResponsibilityId) REFERENCES dbo.PbsQualityResponsibility (Id)
GO

--
-- Create foreign key [FK_PbsProduct_PbsToleranceState_PbsToleranceStateId] on table [dbo].[PbsProduct]
--
PRINT (N'Create foreign key [FK_PbsProduct_PbsToleranceState_PbsToleranceStateId] on table [dbo].[PbsProduct]')
GO
IF OBJECT_ID('dbo.FK_PbsProduct_PbsToleranceState_PbsToleranceStateId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsToleranceState', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsToleranceStateId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsToleranceState'))
ALTER TABLE dbo.PbsProduct
  ADD CONSTRAINT FK_PbsProduct_PbsToleranceState_PbsToleranceStateId FOREIGN KEY (PbsToleranceStateId) REFERENCES dbo.PbsToleranceState (Id)
GO

--
-- Create foreign key [FK_PbsProduct_ProjectDefinition_ProjectId] on table [dbo].[PbsProduct]
--
PRINT (N'Create foreign key [FK_PbsProduct_ProjectDefinition_ProjectId] on table [dbo].[PbsProduct]')
GO
IF OBJECT_ID('dbo.FK_PbsProduct_ProjectDefinition_ProjectId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.ProjectDefinition', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ProjectId' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.ProjectDefinition'))
ALTER TABLE dbo.PbsProduct
  ADD CONSTRAINT FK_PbsProduct_ProjectDefinition_ProjectId FOREIGN KEY (ProjectId) REFERENCES dbo.ProjectDefinition (Id)
GO

--
-- Create foreign key [FK_PbsTools_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsTools]
--
PRINT (N'Create foreign key [FK_PbsTools_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsTools]')
GO
IF OBJECT_ID('dbo.FK_PbsTools_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsTools', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsTools'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.PbsTools
  ADD CONSTRAINT FK_PbsTools_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_PbsTools_PbsProduct_PbsProductId] on table [dbo].[PbsTools]
--
PRINT (N'Create foreign key [FK_PbsTools_PbsProduct_PbsProductId] on table [dbo].[PbsTools]')
GO
IF OBJECT_ID('dbo.FK_PbsTools_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsTools', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsTools'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsTools
  ADD CONSTRAINT FK_PbsTools_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsSkillExperience_PbsExperience_PbsExperienceId] on table [dbo].[PbsSkillExperience]
--
PRINT (N'Create foreign key [FK_PbsSkillExperience_PbsExperience_PbsExperienceId] on table [dbo].[PbsSkillExperience]')
GO
IF OBJECT_ID('dbo.FK_PbsSkillExperience_PbsExperience_PbsExperienceId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsSkillExperience', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsExperience', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsExperienceId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsExperience'))
ALTER TABLE dbo.PbsSkillExperience
  ADD CONSTRAINT FK_PbsSkillExperience_PbsExperience_PbsExperienceId FOREIGN KEY (PbsExperienceId) REFERENCES dbo.PbsExperience (Id)
GO

--
-- Create foreign key [FK_PbsSkillExperience_PbsProduct_PbsProductId] on table [dbo].[PbsSkillExperience]
--
PRINT (N'Create foreign key [FK_PbsSkillExperience_PbsProduct_PbsProductId] on table [dbo].[PbsSkillExperience]')
GO
IF OBJECT_ID('dbo.FK_PbsSkillExperience_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsSkillExperience', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsSkillExperience
  ADD CONSTRAINT FK_PbsSkillExperience_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsSkillExperience_PbsSkill_PbsSkillId] on table [dbo].[PbsSkillExperience]
--
PRINT (N'Create foreign key [FK_PbsSkillExperience_PbsSkill_PbsSkillId] on table [dbo].[PbsSkillExperience]')
GO
IF OBJECT_ID('dbo.FK_PbsSkillExperience_PbsSkill_PbsSkillId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsSkillExperience', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsSkill', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsSkillId' AND object_id = OBJECT_ID(N'dbo.PbsSkillExperience'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsSkill'))
ALTER TABLE dbo.PbsSkillExperience
  ADD CONSTRAINT FK_PbsSkillExperience_PbsSkill_PbsSkillId FOREIGN KEY (PbsSkillId) REFERENCES dbo.PbsSkill (Id)
GO

--
-- Create foreign key [FK_PbsRisk_PbsProduct_PbsProductId] on table [dbo].[PbsRisk]
--
PRINT (N'Create foreign key [FK_PbsRisk_PbsProduct_PbsProductId] on table [dbo].[PbsRisk]')
GO
IF OBJECT_ID('dbo.FK_PbsRisk_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsRisk', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsRisk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsRisk
  ADD CONSTRAINT FK_PbsRisk_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsRisk_Risk_RiskId] on table [dbo].[PbsRisk]
--
PRINT (N'Create foreign key [FK_PbsRisk_Risk_RiskId] on table [dbo].[PbsRisk]')
GO
IF OBJECT_ID('dbo.FK_PbsRisk_Risk_RiskId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsRisk', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Risk', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'RiskId' AND object_id = OBJECT_ID(N'dbo.PbsRisk'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Risk'))
ALTER TABLE dbo.PbsRisk
  ADD CONSTRAINT FK_PbsRisk_Risk_RiskId FOREIGN KEY (RiskId) REFERENCES dbo.Risk (Id)
GO

--
-- Create foreign key [FK_PbsQuality_PbsProduct_PbsProductId] on table [dbo].[PbsQuality]
--
PRINT (N'Create foreign key [FK_PbsQuality_PbsProduct_PbsProductId] on table [dbo].[PbsQuality]')
GO
IF OBJECT_ID('dbo.FK_PbsQuality_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsQuality', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsQuality'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsQuality
  ADD CONSTRAINT FK_PbsQuality_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsQuality_Quality_QualityId] on table [dbo].[PbsQuality]
--
PRINT (N'Create foreign key [FK_PbsQuality_Quality_QualityId] on table [dbo].[PbsQuality]')
GO
IF OBJECT_ID('dbo.FK_PbsQuality_Quality_QualityId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsQuality', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.Quality', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'QualityId' AND object_id = OBJECT_ID(N'dbo.PbsQuality'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.Quality'))
ALTER TABLE dbo.PbsQuality
  ADD CONSTRAINT FK_PbsQuality_Quality_QualityId FOREIGN KEY (QualityId) REFERENCES dbo.Quality (Id)
GO

--
-- Create foreign key [FK_PbsProductTaxonomy_PbsProduct_PbsProductId] on table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create foreign key [FK_PbsProductTaxonomy_PbsProduct_PbsProductId] on table [dbo].[PbsProductTaxonomy]')
GO
IF OBJECT_ID('dbo.FK_PbsProductTaxonomy_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProductTaxonomy', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsProductTaxonomy
  ADD CONSTRAINT FK_PbsProductTaxonomy_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsProductTaxonomy_PbsTaxonomy_PbsTaxonomyId] on table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create foreign key [FK_PbsProductTaxonomy_PbsTaxonomy_PbsTaxonomyId] on table [dbo].[PbsProductTaxonomy]')
GO
IF OBJECT_ID('dbo.FK_PbsProductTaxonomy_PbsTaxonomy_PbsTaxonomyId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProductTaxonomy', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsTaxonomy', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsTaxonomyId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsTaxonomy'))
ALTER TABLE dbo.PbsProductTaxonomy
  ADD CONSTRAINT FK_PbsProductTaxonomy_PbsTaxonomy_PbsTaxonomyId FOREIGN KEY (PbsTaxonomyId) REFERENCES dbo.PbsTaxonomy (Id)
GO

--
-- Create foreign key [FK_PbsProductTaxonomy_PbsTaxonomyLevel_PbsTaxonomyLevelId] on table [dbo].[PbsProductTaxonomy]
--
PRINT (N'Create foreign key [FK_PbsProductTaxonomy_PbsTaxonomyLevel_PbsTaxonomyLevelId] on table [dbo].[PbsProductTaxonomy]')
GO
IF OBJECT_ID('dbo.FK_PbsProductTaxonomy_PbsTaxonomyLevel_PbsTaxonomyLevelId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsProductTaxonomy', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsTaxonomyLevel', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsTaxonomyLevelId' AND object_id = OBJECT_ID(N'dbo.PbsProductTaxonomy'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsTaxonomyLevel'))
ALTER TABLE dbo.PbsProductTaxonomy
  ADD CONSTRAINT FK_PbsProductTaxonomy_PbsTaxonomyLevel_PbsTaxonomyLevelId FOREIGN KEY (PbsTaxonomyLevelId) REFERENCES dbo.PbsTaxonomyLevel (Id)
GO

--
-- Create foreign key [FK_PbsMaterial_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsMaterial]
--
PRINT (N'Create foreign key [FK_PbsMaterial_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsMaterial]')
GO
IF OBJECT_ID('dbo.FK_PbsMaterial_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsMaterial', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsMaterial'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.PbsMaterial
  ADD CONSTRAINT FK_PbsMaterial_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_PbsMaterial_PbsProduct_PbsProductId] on table [dbo].[PbsMaterial]
--
PRINT (N'Create foreign key [FK_PbsMaterial_PbsProduct_PbsProductId] on table [dbo].[PbsMaterial]')
GO
IF OBJECT_ID('dbo.FK_PbsMaterial_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsMaterial', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsMaterial'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsMaterial
  ADD CONSTRAINT FK_PbsMaterial_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsLabour_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsLabour]
--
PRINT (N'Create foreign key [FK_PbsLabour_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsLabour]')
GO
IF OBJECT_ID('dbo.FK_PbsLabour_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsLabour', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsLabour'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.PbsLabour
  ADD CONSTRAINT FK_PbsLabour_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_PbsLabour_PbsProduct_PbsProductId] on table [dbo].[PbsLabour]
--
PRINT (N'Create foreign key [FK_PbsLabour_PbsProduct_PbsProductId] on table [dbo].[PbsLabour]')
GO
IF OBJECT_ID('dbo.FK_PbsLabour_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsLabour', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsLabour'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsLabour
  ADD CONSTRAINT FK_PbsLabour_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsInstruction_PbsInstructionFamily_PbsInstructionFamilyId] on table [dbo].[PbsInstruction]
--
PRINT (N'Create foreign key [FK_PbsInstruction_PbsInstructionFamily_PbsInstructionFamilyId] on table [dbo].[PbsInstruction]')
GO
IF OBJECT_ID('dbo.FK_PbsInstruction_PbsInstructionFamily_PbsInstructionFamilyId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsInstruction', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsInstructionFamily', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsInstructionFamilyId' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsInstructionFamily'))
ALTER TABLE dbo.PbsInstruction
  ADD CONSTRAINT FK_PbsInstruction_PbsInstructionFamily_PbsInstructionFamilyId FOREIGN KEY (PbsInstructionFamilyId) REFERENCES dbo.PbsInstructionFamily (Id)
GO

--
-- Create foreign key [FK_PbsInstruction_PbsProduct_PbsProductId] on table [dbo].[PbsInstruction]
--
PRINT (N'Create foreign key [FK_PbsInstruction_PbsProduct_PbsProductId] on table [dbo].[PbsInstruction]')
GO
IF OBJECT_ID('dbo.FK_PbsInstruction_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsInstruction', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsInstruction
  ADD CONSTRAINT FK_PbsInstruction_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_PbsInstructionLink_PbsInstruction_PbsInstructionId] on table [dbo].[PbsInstructionLink]
--
PRINT (N'Create foreign key [FK_PbsInstructionLink_PbsInstruction_PbsInstructionId] on table [dbo].[PbsInstructionLink]')
GO
IF OBJECT_ID('dbo.FK_PbsInstructionLink_PbsInstruction_PbsInstructionId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsInstructionLink', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsInstruction', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsInstructionId' AND object_id = OBJECT_ID(N'dbo.PbsInstructionLink'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsInstruction'))
ALTER TABLE dbo.PbsInstructionLink
  ADD CONSTRAINT FK_PbsInstructionLink_PbsInstruction_PbsInstructionId FOREIGN KEY (PbsInstructionId) REFERENCES dbo.PbsInstruction (Id)
GO

--
-- Create foreign key [FK_PbsConsumable_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsConsumable]
--
PRINT (N'Create foreign key [FK_PbsConsumable_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[PbsConsumable]')
GO
IF OBJECT_ID('dbo.FK_PbsConsumable_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsConsumable', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.PbsConsumable'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.PbsConsumable
  ADD CONSTRAINT FK_PbsConsumable_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_PbsConsumable_PbsProduct_PbsProductId] on table [dbo].[PbsConsumable]
--
PRINT (N'Create foreign key [FK_PbsConsumable_PbsProduct_PbsProductId] on table [dbo].[PbsConsumable]')
GO
IF OBJECT_ID('dbo.FK_PbsConsumable_PbsProduct_PbsProductId', 'F') IS NULL
  AND OBJECT_ID('dbo.PbsConsumable', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.PbsProduct', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PbsProductId' AND object_id = OBJECT_ID(N'dbo.PbsConsumable'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.PbsProduct'))
ALTER TABLE dbo.PbsConsumable
  ADD CONSTRAINT FK_PbsConsumable_PbsProduct_PbsProductId FOREIGN KEY (PbsProductId) REFERENCES dbo.PbsProduct (Id)
GO

--
-- Create foreign key [FK_CabCompany_CabAddress_AddressId] on table [dbo].[CabCompany]
--
PRINT (N'Create foreign key [FK_CabCompany_CabAddress_AddressId] on table [dbo].[CabCompany]')
GO
IF OBJECT_ID('dbo.FK_CabCompany_CabAddress_AddressId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabAddress', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'AddressId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabAddress'))
ALTER TABLE dbo.CabCompany
  ADD CONSTRAINT FK_CabCompany_CabAddress_AddressId FOREIGN KEY (AddressId) REFERENCES dbo.CabAddress (Id)
GO

--
-- Create foreign key [FK_CabCompany_CabBankAccount_BankAccountId] on table [dbo].[CabCompany]
--
PRINT (N'Create foreign key [FK_CabCompany_CabBankAccount_BankAccountId] on table [dbo].[CabCompany]')
GO
IF OBJECT_ID('dbo.FK_CabCompany_CabBankAccount_BankAccountId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabBankAccount', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'BankAccountId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabBankAccount'))
ALTER TABLE dbo.CabCompany
  ADD CONSTRAINT FK_CabCompany_CabBankAccount_BankAccountId FOREIGN KEY (BankAccountId) REFERENCES dbo.CabBankAccount (Id)
GO

--
-- Create foreign key [FK_CabCompany_CabPerson_CabPersonId] on table [dbo].[CabCompany]
--
PRINT (N'Create foreign key [FK_CabCompany_CabPerson_CabPersonId] on table [dbo].[CabCompany]')
GO
IF OBJECT_ID('dbo.FK_CabCompany_CabPerson_CabPersonId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CabPersonId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.CabCompany
  ADD CONSTRAINT FK_CabCompany_CabPerson_CabPersonId FOREIGN KEY (CabPersonId) REFERENCES dbo.CabPerson (Id)
GO

--
-- Create foreign key [FK_CabCompany_CabVat_VatId] on table [dbo].[CabCompany]
--
PRINT (N'Create foreign key [FK_CabCompany_CabVat_VatId] on table [dbo].[CabCompany]')
GO
IF OBJECT_ID('dbo.FK_CabCompany_CabVat_VatId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabVat', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'VatId' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabVat'))
ALTER TABLE dbo.CabCompany
  ADD CONSTRAINT FK_CabCompany_CabVat_VatId FOREIGN KEY (VatId) REFERENCES dbo.CabVat (Id)
GO

--
-- Create foreign key [FK_CpcVendor_CabCompany_CompanyId] on table [dbo].[CpcVendor]
--
PRINT (N'Create foreign key [FK_CpcVendor_CabCompany_CompanyId] on table [dbo].[CpcVendor]')
GO
IF OBJECT_ID('dbo.FK_CpcVendor_CabCompany_CompanyId', 'F') IS NULL
  AND OBJECT_ID('dbo.CpcVendor', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CompanyId' AND object_id = OBJECT_ID(N'dbo.CpcVendor'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
ALTER TABLE dbo.CpcVendor
  ADD CONSTRAINT FK_CpcVendor_CabCompany_CompanyId FOREIGN KEY (CompanyId) REFERENCES dbo.CabCompany (Id)
GO

--
-- Create foreign key [FK_CpcVendor_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcVendor]
--
PRINT (N'Create foreign key [FK_CpcVendor_CorporateProductCatalog_CoperateProductCatalogId] on table [dbo].[CpcVendor]')
GO
IF OBJECT_ID('dbo.FK_CpcVendor_CorporateProductCatalog_CoperateProductCatalogId', 'F') IS NULL
  AND OBJECT_ID('dbo.CpcVendor', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CorporateProductCatalog', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CoperateProductCatalogId' AND object_id = OBJECT_ID(N'dbo.CpcVendor'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CorporateProductCatalog'))
ALTER TABLE dbo.CpcVendor
  ADD CONSTRAINT FK_CpcVendor_CorporateProductCatalog_CoperateProductCatalogId FOREIGN KEY (CoperateProductCatalogId) REFERENCES dbo.CorporateProductCatalog (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabCompany_CompanyId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabCompany_CompanyId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabCompany_CompanyId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CompanyId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabCompany_CompanyId FOREIGN KEY (CompanyId) REFERENCES dbo.CabCompany (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabEmail_EmailId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabEmail_EmailId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabEmail_EmailId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabEmail', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'EmailId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabEmail'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabEmail_EmailId FOREIGN KEY (EmailId) REFERENCES dbo.CabEmail (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabLandPhone_LandPhoneId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabLandPhone_LandPhoneId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabLandPhone_LandPhoneId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabLandPhone', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'LandPhoneId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabLandPhone'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabLandPhone_LandPhoneId FOREIGN KEY (LandPhoneId) REFERENCES dbo.CabLandPhone (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabMobilePhone_MobilePhoneId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabMobilePhone_MobilePhoneId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabMobilePhone_MobilePhoneId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabMobilePhone', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'MobilePhoneId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabMobilePhone'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabMobilePhone_MobilePhoneId FOREIGN KEY (MobilePhoneId) REFERENCES dbo.CabMobilePhone (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabPerson_PersonId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabPerson_PersonId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabPerson_PersonId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PersonId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabPerson_PersonId FOREIGN KEY (PersonId) REFERENCES dbo.CabPerson (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabSkype_SkypeId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabSkype_SkypeId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabSkype_SkypeId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabSkype', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'SkypeId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabSkype'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabSkype_SkypeId FOREIGN KEY (SkypeId) REFERENCES dbo.CabSkype (Id)
GO

--
-- Create foreign key [FK_CabPersonCompany_CabWhatsApp_WhatsAppId] on table [dbo].[CabPersonCompany]
--
PRINT (N'Create foreign key [FK_CabPersonCompany_CabWhatsApp_WhatsAppId] on table [dbo].[CabPersonCompany]')
GO
IF OBJECT_ID('dbo.FK_CabPersonCompany_CabWhatsApp_WhatsAppId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabPersonCompany', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabWhatsApp', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'WhatsAppId' AND object_id = OBJECT_ID(N'dbo.CabPersonCompany'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabWhatsApp'))
ALTER TABLE dbo.CabPersonCompany
  ADD CONSTRAINT FK_CabPersonCompany_CabWhatsApp_WhatsAppId FOREIGN KEY (WhatsAppId) REFERENCES dbo.CabWhatsApp (Id)
GO

--
-- Create foreign key [FK_CabHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[CabHistoryLog]
--
PRINT (N'Create foreign key [FK_CabHistoryLog_AllUsers_ChangedByUserId] on table [dbo].[CabHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_CabHistoryLog_AllUsers_ChangedByUserId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.AllUsers', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'ChangedByUserId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.AllUsers'))
ALTER TABLE dbo.CabHistoryLog
  ADD CONSTRAINT FK_CabHistoryLog_AllUsers_ChangedByUserId FOREIGN KEY (ChangedByUserId) REFERENCES dbo.AllUsers (Id)
GO

--
-- Create foreign key [FK_CabHistoryLog_CabCompany_CompanyId] on table [dbo].[CabHistoryLog]
--
PRINT (N'Create foreign key [FK_CabHistoryLog_CabCompany_CompanyId] on table [dbo].[CabHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_CabHistoryLog_CabCompany_CompanyId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabCompany', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'CompanyId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabCompany'))
ALTER TABLE dbo.CabHistoryLog
  ADD CONSTRAINT FK_CabHistoryLog_CabCompany_CompanyId FOREIGN KEY (CompanyId) REFERENCES dbo.CabCompany (Id)
GO

--
-- Create foreign key [FK_CabHistoryLog_CabPerson_PersonId] on table [dbo].[CabHistoryLog]
--
PRINT (N'Create foreign key [FK_CabHistoryLog_CabPerson_PersonId] on table [dbo].[CabHistoryLog]')
GO
IF OBJECT_ID('dbo.FK_CabHistoryLog_CabPerson_PersonId', 'F') IS NULL
  AND OBJECT_ID('dbo.CabHistoryLog', 'U') IS NOT NULL
  AND OBJECT_ID('dbo.CabPerson', 'U') IS NOT NULL
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'PersonId' AND object_id = OBJECT_ID(N'dbo.CabHistoryLog'))
  AND EXISTS (
  SELECT 1 FROM sys.columns WITH (NOLOCK)
  WHERE name = N'Id' AND object_id = OBJECT_ID(N'dbo.CabPerson'))
ALTER TABLE dbo.CabHistoryLog
  ADD CONSTRAINT FK_CabHistoryLog_CabPerson_PersonId FOREIGN KEY (PersonId) REFERENCES dbo.CabPerson (Id)
GO
SET NOEXEC OFF
GO