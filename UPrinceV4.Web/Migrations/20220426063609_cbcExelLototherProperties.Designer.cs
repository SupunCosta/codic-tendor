// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UPrinceV4.Web.Data;

#nullable disable

namespace UPrinceV4.Web.Migrations
{
    [DbContext(typeof(UPrinceV4Context))]
    [Migration("20220426063609_cbcExelLototherProperties")]
    partial class cbcExelLototherProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UPrinceV4.Web.Data.AppConfigurationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsConfigured")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppConfigurationData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.Bor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocationParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityParentId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique()
                        .HasFilter("[ItemId] IS NOT NULL");

                    b.HasIndex("PbsProductId");

                    b.ToTable("Bor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorConsumable", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BorProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Consumed")
                        .HasColumnType("float");

                    b.Property<string>("CorporateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveryRequested")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Invoiced")
                        .HasColumnType("float");

                    b.Property<double>("Purchased")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RequestedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Required")
                        .HasColumnType("float");

                    b.Property<double>("Returned")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalRequired")
                        .HasColumnType("float");

                    b.Property<double>("Warf")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorProductId");

                    b.ToTable("BorConsumable");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("BorHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorLabour", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BorProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Consumed")
                        .HasColumnType("float");

                    b.Property<string>("CorporateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveryRequested")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Invoiced")
                        .HasColumnType("float");

                    b.Property<double>("Purchased")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RequestedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Required")
                        .HasColumnType("float");

                    b.Property<double>("Returned")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalRequired")
                        .HasColumnType("float");

                    b.Property<double>("Warf")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorProductId");

                    b.ToTable("BorLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BorProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Consumed")
                        .HasColumnType("float");

                    b.Property<string>("CorporateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveryRequested")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Invoiced")
                        .HasColumnType("float");

                    b.Property<double>("Purchased")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RequestedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Required")
                        .HasColumnType("float");

                    b.Property<double>("Returned")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalRequired")
                        .HasColumnType("float");

                    b.Property<double>("Warf")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorProductId");

                    b.ToTable("BorMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredConsumable", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorConsumableId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorConsumableId");

                    b.ToTable("BorRequiredConsumable");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredLabour", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorLabourId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorLabourId");

                    b.ToTable("BorRequiredLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorMaterialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorMaterialId");

                    b.ToTable("BorRequiredMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredTools", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorToolsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorToolsId");

                    b.ToTable("BorRequiredTools");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorTools", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActualDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BorProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Consumed")
                        .HasColumnType("float");

                    b.Property<string>("CorporateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeliveryRequested")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Invoiced")
                        .HasColumnType("float");

                    b.Property<double>("Purchased")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RequestedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Required")
                        .HasColumnType("float");

                    b.Property<double>("Returned")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalRequired")
                        .HasColumnType("float");

                    b.Property<double>("Warf")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BorProductId");

                    b.ToTable("BorTools");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BorType");

                    b.HasData(
                        new
                        {
                            Id = "335ab9fe-po57-4088-82a9-d27008688b55",
                            BorTypeId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Regular"
                        },
                        new
                        {
                            Id = "77d9e479-pob3-40c6-ad61-e40dbe6a5177",
                            BorTypeId = "6610e768-3e06-po02-b337-ee367a82ad66",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Return"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabAddress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MailBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CabAddress");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabBankAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabBankAccount");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCertification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CertificationTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CabCertification");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractingUnitDbNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsContractingUnit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CabPersonId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("VatId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabCompany");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompetencies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompetenciesTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExperienceLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabCompetencies");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabContractorTaxonomycs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabContractorTaxonomycs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabEmail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.ToTable("CabEmail");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.ToTable("CabHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabLandPhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LandPhoneNumber")
                        .IsUnique()
                        .HasFilter("[LandPhoneNumber] IS NOT NULL");

                    b.ToTable("CabLandPhone");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabMobilePhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobilePhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MobilePhoneNumber")
                        .IsUnique()
                        .HasFilter("[MobilePhoneNumber] IS NOT NULL");

                    b.ToTable("CabMobilePhone");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessEmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CallName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BusinessEmailId");

                    b.HasIndex("BusinessPhoneId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabPerson");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPersonCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("JobRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Oid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabPersonCompany");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabSkype", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SkypeNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkypeNumber")
                        .IsUnique()
                        .HasFilter("[SkypeNumber] IS NOT NULL");

                    b.ToTable("CabSkype");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabVat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabVat");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabWhatsApp", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WhatsAppNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WhatsAppNumber")
                        .IsUnique()
                        .HasFilter("[WhatsAppNumber] IS NOT NULL");

                    b.ToTable("CabWhatsApp");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CalendarTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalendarTemplate");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Category.CategoryLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryLevel");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Category.Comments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Category.Pictures", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostPictures");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Category.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FishDetailtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Comment.CommentCard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommentCard");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Comment.CommentCardContractor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommentCardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommentCardContractor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Comment.ContractorComment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommentCardContractorsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorComment");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contract.ContractTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractTaxonomy");

                    b.HasData(
                        new
                        {
                            Id = "hjkdab9fe-po57-4088-82a9-d27008688dhjh",
                            ContractId = "335ab9fe-po57-4088-82a9-d27008688tgg",
                            ContractTaxonomyLevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            Title = "HVAC"
                        },
                        new
                        {
                            Id = "gdab9fe-po57-4088-82a9-d27008dfghhj",
                            ContractId = "gyjkab9fe-po57-4088-82a9-d27008688fss",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            Title = "Electricity"
                        },
                        new
                        {
                            Id = "lgkf9fe-po57-4088-82a9-d27008dflfdkg",
                            ContractId = "gyjkab9fe-po57-4088-82a9-d27008688fss",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            Title = "Sprinklers"
                        },
                        new
                        {
                            Id = "lgkf9fe-po57-4088-SANI-d27008dflfdkg",
                            ContractId = "gyjkab9fe-po57-4088-SANI-d27008688fss",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            Title = "Sanitary"
                        },
                        new
                        {
                            Id = "dgb9fe-po57-4088-82a9-d27008dfgjujj",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "hjkdab9fe-po57-4088-82a9-d27008688dhjh",
                            Title = "All -Air Systems"
                        },
                        new
                        {
                            Id = "lj989fe-afmd-lsdd-kafd-d27008dfgjksfn",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "dgb9fe-po57-4088-82a9-d27008dfgjujj",
                            Title = "Single Zone"
                        },
                        new
                        {
                            Id = "mvnd9fe-afmd-lsdd-kafd-d27008dfgjajfnd",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "dgb9fe-po57-4088-82a9-d27008dfgjujj",
                            Title = "MultiZone"
                        },
                        new
                        {
                            Id = "bfjs9fe-afmd-lsdd-kafd-d27008dfgjaadid",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "dgb9fe-po57-4088-82a9-d27008dfgjujj",
                            Title = "Terminal Reheat"
                        },
                        new
                        {
                            Id = "kdca9fe-afmd-lsdd-kafd-d27008dfgjaawfm",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "dgb9fe-po57-4088-82a9-d27008dfgjujj",
                            Title = "Dual duct"
                        },
                        new
                        {
                            Id = "bfer9fe-afmd-lsdd-kafd-d27008dfgjaasgkv",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "dgb9fe-po57-4088-82a9-d27008dfgjujj",
                            Title = "Variable Air Volume(VAV)"
                        },
                        new
                        {
                            Id = "5569fe-po57-4088-82a9-d27008dfgj3ien",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "hjkdab9fe-po57-4088-82a9-d27008688dhjh",
                            Title = "Air-Water Systems"
                        },
                        new
                        {
                            Id = "lmdfkfe-po57-4088-82a9-d27008dfgasdk",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "5569fe-po57-4088-82a9-d27008dfgj3ien",
                            Title = "Fan Coil Units"
                        },
                        new
                        {
                            Id = "mnnckfe-po57-4088-82a9-d27008dfgksck",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "5569fe-po57-4088-82a9-d27008dfgj3ien",
                            Title = "Induction Units"
                        },
                        new
                        {
                            Id = "mcd9fe-po57-4088-82a9-d27008dfgjabfad",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "hjkdab9fe-po57-4088-82a9-d27008688dhjh",
                            Title = "All-Water Systems"
                        },
                        new
                        {
                            Id = "qertfe-po57-4088-82a9-d27008dfgjabqert",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "mcd9fe-po57-4088-82a9-d27008dfgjabfad",
                            Title = "Fan Coil Units"
                        },
                        new
                        {
                            Id = "yiuo9fe-po57-4088-82a9-d27008dfgjabksvn",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "hjkdab9fe-po57-4088-82a9-d27008688dhjh",
                            Title = "Water-source Heat Pumps"
                        },
                        new
                        {
                            Id = "jfgf9fe-po57-4088-82a9-d27008dfgjabktyk",
                            ContractId = "jgjkab9fe-po57-4088-82a9-d2700868uhfhf",
                            ContractTaxonomyLevelId = "fdh282458-0b40-poa3-b0f9-c2e40344c8fgh",
                            ParentId = "hjkdab9fe-po57-4088-82a9-d27008688dhjh",
                            Title = "Heating and Cooling panels"
                        },
                        new
                        {
                            Id = "mbgej9fe-po57-4088-82a9-d27008dfgrthg",
                            ContractId = "jfgsab9fe-afffg-dfg-sdd-d2700868uhsfs",
                            ContractTaxonomyLevelId = "frgh282458-0b40-poa3-b0f9-c2e40344c8dsaf",
                            ParentId = "gdab9fe-po57-4088-82a9-d27008dfghhj",
                            Title = "Lightning & Power"
                        },
                        new
                        {
                            Id = "qcfj9fe-po57-4088-82a9-d27008dfoiy",
                            ContractId = "jfgsab9fe-afffg-dfg-sdd-d2700868uhsfs",
                            ContractTaxonomyLevelId = "frgh282458-0b40-poa3-b0f9-c2e40344c8dsaf",
                            ParentId = "mbgej9fe-po57-4088-82a9-d27008dfgrthg",
                            Title = "Low Voltage Ground"
                        },
                        new
                        {
                            Id = "lgkf9fe-po57-4088-82a9-d27008dtyjh",
                            ContractId = "jfgsab9fe-afffg-dfg-sdd-d2700868uhsfs",
                            ContractTaxonomyLevelId = "frgh282458-0b40-poa3-b0f9-c2e40344c8dsaf",
                            ParentId = "mbgej9fe-po57-4088-82a9-d27008dfgrthg",
                            Title = "Low Voltage Connection"
                        },
                        new
                        {
                            Id = "mkngj9fe-po57-4088-82a9-d27008dfgrwwff",
                            ContractId = "jfgsab9fe-afffg-dfg-sdd-d2700868uhsfs",
                            ContractTaxonomyLevelId = "frgh282458-0b40-poa3-b0f9-c2e40344c8dsaf",
                            ParentId = "gdab9fe-po57-4088-82a9-d27008dfghhj",
                            Title = "Low Power Installation"
                        },
                        new
                        {
                            Id = "kjhgj9fe-po57-4088-82a9-d27008dfgrytut",
                            ContractId = "jfgsab9fe-afffg-dfg-sdd-d2700868uhsfs",
                            ContractTaxonomyLevelId = "frgh282458-0b40-poa3-b0f9-c2e40344c8dsaf",
                            ParentId = "gdab9fe-po57-4088-82a9-d27008dfghhj",
                            Title = "High Voltage"
                        },
                        new
                        {
                            Id = "fhgjj9fe-po57-4088-82a9-d27008dfgfdgdf",
                            ContractId = "dgdgsb9fe-afffg-dfg-sdd-d2700868uhsfs",
                            ContractTaxonomyLevelId = "frgh282458-0b40-poa3-b0f9-c2e40344c8dsaf",
                            ParentId = "lgkf9fe-po57-4088-82a9-d27008dflfdkg",
                            Title = "Wet Pipe System"
                        },
                        new
                        {
                            Id = "ujgkkjj9fe-po57-4088-82a9-d27008dfgfsdmkf",
                            ContractId = "dgvdgsb9fe-afffg-dfg-sdd-d2700868ufgs",
                            ContractTaxonomyLevelId = "fdsf282458-0b40-poa3-b0f9-c2e40344c8dsdff",
                            ParentId = "lgkf9fe-po57-4088-82a9-d27008dflfdkg",
                            Title = "Dry Pipe System"
                        },
                        new
                        {
                            Id = "lkdfkjj9fe-po57-4088-82a9-d27008dfgfsdfkk",
                            ContractId = "dgvdgsb9fe-afffg-dfg-sdd-d2700868ufgs",
                            ContractTaxonomyLevelId = "fdsf282458-0b40-poa3-b0f9-c2e40344c8dsdff",
                            ParentId = "lgkf9fe-po57-4088-82a9-d27008dflfdkg",
                            Title = "Pre-Action System"
                        },
                        new
                        {
                            Id = "mvffkjj9fe-po57-4088-82a9-d27008dfgfsdmmd",
                            ContractId = "dgvdgsb9fe-afffg-dfg-sdd-d2700868ufgs",
                            ContractTaxonomyLevelId = "fdsf282458-0b40-poa3-b0f9-c2e40344c8dsdff",
                            ParentId = "lgkf9fe-po57-4088-82a9-d27008dflfdkg",
                            Title = "Deluge System"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ContractingUnitUserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabCompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractingUnitUserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.CBCExcelLotData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("CBCExcelLotData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ConstructorTeam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPearsonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstructorTeam");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ConstructorWorkFlow", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabCompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstructorWorkFlow");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ConstructorWorkFlowStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstructorWorkFlowStatus");

                    b.HasData(
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-Lota2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Contractor added to lot",
                            StatusId = "d60aad0b-2e84-con1-ad25-Lot0d49477"
                        },
                        new
                        {
                            Id = "iii93-jsjj-nnnn-amdm-b7a93ebd1iii",
                            DisplayOrder = 11,
                            LanguageCode = "en",
                            Name = "Requested To Join Tender",
                            StatusId = "bvxbdkjg4e8d-fhhd-487d-8170-6b91c89fdvnfd"
                        },
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-Lot897f5bb",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Joined Tender",
                            StatusId = "d60aad0b-2e84-con2-ad25-Lot0d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-Lotf10e27c",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Reminder Sent To Request To Join Tender",
                            StatusId = "94282458-0b40-con3-b0f9-Lot344c8f1"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-Lot8688bae",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Dossier Sent",
                            StatusId = "94282458-0b40-con4-b0f9-Lot344c8f1"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-Lot6ae42af",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Confirmation Dossier Received",
                            StatusId = "7143ff01-d173-con5-8c17-Lotecdb84c"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-Lot00e1eed",
                            DisplayOrder = 6,
                            LanguageCode = "en",
                            Name = "Reminder Sent To Confirm Dossier Received",
                            StatusId = "7143ff01-d173-con6-8c17-Lotecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-Lotd1c5f5a",
                            DisplayOrder = 7,
                            LanguageCode = "en",
                            Name = "Dossier Published",
                            StatusId = "7bcb4e8d-8e8c-con7-8170-Lot89fc3da"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-Lotebd1ccf",
                            DisplayOrder = 8,
                            LanguageCode = "en",
                            Name = "Reminder Sent To Publish Dossier",
                            StatusId = "7bcb4e8d-8e8c-con8-8170-Lot89fc3da"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-Lot1e2391a",
                            DisplayOrder = 9,
                            LanguageCode = "en",
                            Name = "Open Comment For BM Engineering",
                            StatusId = "4010e768-3e06-con9-b337-Lota82addb"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-Lote6a51ac",
                            DisplayOrder = 10,
                            LanguageCode = "en",
                            Name = "Open Comment For Contractor",
                            StatusId = "4010e768-3e06-con10-b337-Lota82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorAccreditation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CabPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("experienceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorAccreditation");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorFileType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorFileType");

                    b.HasData(
                        new
                        {
                            Id = "qqqab9fe-msms-4088-Lot1-d27008688qqq",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "pdf",
                            TypeId = "oo10e768-msms-po02-Lot1-ee367a82adooo"
                        },
                        new
                        {
                            Id = "zzzab9fe-msms-4088-Lot2-d27008688zzz",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Image",
                            TypeId = "oo10e768-msms-po02-Lot2-ee367a82adooo"
                        },
                        new
                        {
                            Id = "bnb9e479-msms-40c6-Lot3-e40dbe6a5bnb",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "URL",
                            TypeId = "2210e768-msms-po02-Lot3-ee367a82ad22"
                        },
                        new
                        {
                            Id = "wer9e479-msms-40c6-Lot4-e40dbe6a5wer",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Word Document",
                            TypeId = "2210e768-msms-po02-Lot4-ee367a82ad22"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorFinalDeliveryDocs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorFinalDeliveryDocs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorForLot", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConstructorLotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorForLot");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorHasTaxonony", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaconomyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorHasTaxonony");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedNumberOfQuotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MeasuringStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductItemTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorProductItemType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorProductItemType");

                    b.HasData(
                        new
                        {
                            Id = "wer9e479-msms-Item-Lot1-e40dbe6a5wer",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Lot",
                            TypeId = "2210e768-msms-Item-Lot1-ee367a82ad22"
                        },
                        new
                        {
                            Id = "wer9e479-msms-Item-Lot2-e40dbe6a5wer",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Contractor",
                            TypeId = "2210e768-msms-Item-Lot2-ee367a82ad22"
                        },
                        new
                        {
                            Id = "wer9e4nl-msms-Item-Lot1-e40dbe6a5wer",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Lot (nl)",
                            TypeId = "2210e768-msms-Item-Lot1-ee367a82ad22"
                        },
                        new
                        {
                            Id = "wer9e4nl-msms-Item-Lot2-e40dbe6a5wer",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Contractor (nl)",
                            TypeId = "2210e768-msms-Item-Lot2-ee367a82ad22"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorProvisionalAcceptenceDocs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorProvisionalAcceptenceDocs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorsList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractorLot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorsList");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorStatus");

                    b.HasData(
                        new
                        {
                            Id = "2732cd5a-0941-4c56-cowf-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Pending Development",
                            StatusId = "d60aad0b-2e84-482b-cowf-618d80d49477"
                        },
                        new
                        {
                            Id = "098cf409-7cb8-4076-cowf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "in voorbereiding",
                            StatusId = "d60aad0b-2e84-482b-cowf-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-cowf-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-0b40-40a3-cowf-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-cowf-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-0b40-40a3-cowf-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-cowf-9cb166ae42af",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-cowf-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-cowf-d4e1400e1eed",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-cowf-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-cowf-213d2d1c5f5a",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-8e8c-487d-cowf-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-cowf-b7a93ebd1ccf",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-8e8c-487d-cowf-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-cowf-dd1bf1e2391a",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-3e06-4702-cowf-ee367a82addb"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-cowf-e40dbe6a51ac",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-3e06-4702-cowf-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorSupplierList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CabPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorSupplierList");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorTeamList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Approve")
                        .HasColumnType("bit");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CabPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Count")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvitationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("InvitationMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsManual")
                        .HasColumnType("bit");

                    b.Property<string>("LotContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorTeamList");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorTechDocs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorTechDocs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorTechInstructionsDocs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorTechInstructionsDocs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorTenderAward", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorTenderAward");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorTenderDocs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorTenderDocs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Contractor.ContractorWorkFlow", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorWorkFlow");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryName")
                        .IsUnique()
                        .HasFilter("[CountryName] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcBasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcBrandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcMaterialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcPressureClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcUnitOfSizeMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("InventoryPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxOrderQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("MinOrderQuantity")
                        .HasColumnType("float");

                    b.Property<string>("ResourceFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WallThickness")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CpcBasicUnitOfMeasureId");

                    b.HasIndex("CpcBrandId");

                    b.HasIndex("CpcMaterialId");

                    b.HasIndex("CpcPressureClassId");

                    b.HasIndex("CpcUnitOfSizeMeasureId");

                    b.HasIndex("ResourceFamilyId");

                    b.HasIndex("ResourceNumber")
                        .IsUnique()
                        .HasFilter("[ResourceNumber] IS NOT NULL");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcBasicUnitOfMeasure");

                    b.HasData(
                        new
                        {
                            Id = "3ba6dc81-dcdf-4749-b13f-482cvsje75262",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "m"
                        },
                        new
                        {
                            Id = "b48dkcn3-dcdf-cdfg-b13f-482cvsje75262",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "(stuk)"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasureLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcBasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcBasicUnitOfMeasureId");

                    b.ToTable("CpcBasicUnitOfMeasureLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBrand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcBrandId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcBrand");

                    b.HasData(
                        new
                        {
                            Id = "013f0f14-2675-41e5-8219-ff91c9d2c688",
                            LocaleCode = "",
                            Name = "Geberit"
                        },
                        new
                        {
                            Id = "141f28dd-6fea-4d76-a07c-7e7c65d52a3b",
                            LocaleCode = "",
                            Name = "Mepla"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcImage");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcMaterial");

                    b.HasData(
                        new
                        {
                            Id = "123d2354a-8d13-4041-b756-d25f1bc0e890",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "PVC"
                        },
                        new
                        {
                            Id = "123d2354a-8d13-4041-b756-d25f1bc0e444",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "PVC-U1"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterialLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcMaterialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcMaterialId");

                    b.ToTable("CpcMaterialLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcPressureClass", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcPressureClass");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamily", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcResourceFamily");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamilyLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcResourceFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcResourceFamilyId");

                    b.ToTable("CpcResourceFamilyLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceNickname", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcResourceNickname");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcResourceType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceTypeLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcResourceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcResourceTypeId");

                    b.ToTable("CpcResourceTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcUnitOfSizeMeasure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcUnitOfSizeMeasure");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcVendor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxOrderQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("MinOrderQuantity")
                        .HasColumnType("float");

                    b.Property<bool>("PreferredParty")
                        .HasColumnType("bit");

                    b.Property<string>("PurchasingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceLeadTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResourcePrice")
                        .HasColumnType("float");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RoundingValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcVendor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.POCpcAverage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("PoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POCpcAverage");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ErrorMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorMessage");

                    b.HasData(
                        new
                        {
                            Id = "NoProjectBreakdownStructureAvailable",
                            LocaleCode = "NoProjectBreakdownStructureAvailable",
                            Message = "No available project breakdown structure"
                        },
                        new
                        {
                            Id = "NoPmolAvailable",
                            LocaleCode = "NoPmolAvailable",
                            Message = "No available Pmol"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.GL.GeneralLedgerNumber", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralLedger");

                    b.HasData(
                        new
                        {
                            Id = "4aby8714-4087-45d4-beff-2d63c756688f1",
                            Name = "9.0"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-beff-2d63c756682f2",
                            Name = "9.1"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-beff-2d63c756688f3",
                            Name = "9.2"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-beff-2d63c7566w8f4",
                            Name = "9.3"
                        },
                        new
                        {
                            Id = "4ab98714-4287-45d4-beff-2d63c7566d8f5",
                            Name = "9.4"
                        },
                        new
                        {
                            Id = "4ab98714-4287-45d4-beff-2d63c7566f8f6",
                            Name = "9.5"
                        },
                        new
                        {
                            Id = "4ab98714-4187-45d4-beff-2d63c7566g8f7",
                            Name = "9.6"
                        },
                        new
                        {
                            Id = "4ab98714-4087-yu5d-beff-2d63c7566y8f8",
                            Name = "9.7"
                        },
                        new
                        {
                            Id = "4ab98714-4087-y5d4-beff-2d63c7566u8f9",
                            Name = "9.8"
                        },
                        new
                        {
                            Id = "4ab98714-4087-tyd4-beff-2d63c756gh8f10",
                            Name = "9.9"
                        },
                        new
                        {
                            Id = "4ab98714-4087-4frd4-beff-2d63c756rd8f11",
                            Name = "9.10"
                        },
                        new
                        {
                            Id = "4ab98714-4087-4zd4-beff-2d63c756nm8f12",
                            Name = "9.11"
                        },
                        new
                        {
                            Id = "4ab98714-4087-4jd4-beff-2d63c756tt8f13",
                            Name = "9.12"
                        },
                        new
                        {
                            Id = "4ab98714-4087-4md4-beff-2d63c756688f14",
                            Name = "9.13"
                        },
                        new
                        {
                            Id = "4ab98714-4087-4ld4-beff-2d63c756688f15",
                            Name = "9.14"
                        },
                        new
                        {
                            Id = "4ab98714-4087-49d4-beff-2d63c756688f16",
                            Name = "9.15"
                        },
                        new
                        {
                            Id = "4ab98714-4087-48d4-beff-2d63c756688f17",
                            Name = "9.16"
                        },
                        new
                        {
                            Id = "4ab98714-4087-47d4-beff-2d63c756688f18",
                            Name = "9.17"
                        },
                        new
                        {
                            Id = "4ab98714-4087-46d4-beff-2d63c756688f19",
                            Name = "9.18"
                        },
                        new
                        {
                            Id = "4ab98714-4087-44d4-beff-2d63c756688f20",
                            Name = "9.19"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-beff-2d63c756688f21",
                            Name = "9.20"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-boff-2d63c756688f22",
                            Name = "9.21"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-boff-2d63c756688f23",
                            Name = "9.22"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-bqff-2d63c756688f24",
                            Name = "9.23"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-baff-2d63c756688f25",
                            Name = "9.24"
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-bzff-2d63c756688f26",
                            Name = "9.25"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.HR.HRHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AzureOid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcLabourItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HRHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.HR.HRRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HRRoles");

                    b.HasData(
                        new
                        {
                            Id = "uu5ab9fe-po57-4088-82a9-d27008688bvv",
                            Label = "Manager",
                            LanguageCode = "en",
                            Name = "Manager",
                            RoleId = "115ab9fe-po57-4088-82a9-d27008688bvv"
                        },
                        new
                        {
                            Id = "lld9e479-pob3-40c6-ad61-e40dbe6a51uu",
                            Label = "Manager",
                            LanguageCode = "nl",
                            Name = "Manager(nl)",
                            RoleId = "115ab9fe-po57-4088-82a9-d27008688bvv"
                        },
                        new
                        {
                            Id = "jj5ab9fe-po57-4088-82a9-d27008688tgg",
                            Label = "Worker",
                            LanguageCode = "en",
                            Name = "Worker",
                            RoleId = "335ab9fe-po57-4088-82a9-d27008688tgg"
                        },
                        new
                        {
                            Id = "ffd9e479-pob3-40c6-ad61-e40dbe6a54kk",
                            Label = "Worker",
                            LanguageCode = "nl",
                            Name = "Worker(nl)",
                            RoleId = "335ab9fe-po57-4088-82a9-d27008688tgg"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.HR.VpHR", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VpHR");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.HR.WorkSchedule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRHeaderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkSchedule");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.INV.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalExcludingTax")
                        .HasColumnType("float");

                    b.Property<double?>("TotalIncludingTax")
                        .HasColumnType("float");

                    b.Property<DateTime?>("WorkPeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkPeriodTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PsId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.INV.InvoiceHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.INV.InvoiceStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceStatus");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            LanguageCode = "nl",
                            Name = "in voorbereiding",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            LanguageCode = "en",
                            Name = "Pending Development",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-213d2d1c5f5a",
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af",
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-dd1bf1e2391a",
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac",
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LastSeenProjectDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ViewTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LastSeenProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LocaleName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LocalizedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalizedData");

                    b.HasData(
                        new
                        {
                            Id = 1315,
                            Label = "No available project breakdown structure (es)",
                            LanguageCode = "es",
                            LocaleCode = "NoProjectBreakdownStructureAvailable12"
                        },
                        new
                        {
                            Id = 1316,
                            Label = "No available project breakdown structure (nl)",
                            LanguageCode = "nl",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1317,
                            Label = "No available project breakdown structure (nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1632,
                            Label = "No available project breakdown structure (zh)",
                            LanguageCode = "zh",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1633,
                            Label = "External Products(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1634,
                            Label = "External Products(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1635,
                            Label = "External Products(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1636,
                            Label = "External Products(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1637,
                            Label = "Internal Products(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1638,
                            Label = "Internal Products(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1639,
                            Label = "Internal Products(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1640,
                            Label = "Internal Products(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1641,
                            Label = "Pending Development(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1643,
                            Label = "Pending Development(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1644,
                            Label = "Pending Development(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1645,
                            Label = "Pending Development(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1646,
                            Label = "In Development(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1647,
                            Label = "In Development(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1648,
                            Label = "In Development(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1649,
                            Label = "In Development(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1650,
                            Label = "In Review(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1651,
                            Label = "In Review(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1652,
                            Label = "In Review(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1653,
                            Label = "In Review(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1654,
                            Label = "Approved(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1655,
                            Label = "Approved(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1656,
                            Label = "Approved(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1657,
                            Label = "Approved(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1658,
                            Label = "Handed Over(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1659,
                            Label = "Handed Over(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1660,
                            Label = "Handed Over(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1661,
                            Label = "Handed Over(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1704,
                            Label = "In Scope(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "scope.inscope"
                        },
                        new
                        {
                            Id = 1705,
                            Label = "In Scope(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "scope.inscope"
                        },
                        new
                        {
                            Id = 1706,
                            Label = "In Scope(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "scope.inscope"
                        },
                        new
                        {
                            Id = 1707,
                            Label = "Out of Scope(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "scope.outofscope"
                        },
                        new
                        {
                            Id = 1708,
                            Label = "Out of Scope(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "scope.outofscope"
                        },
                        new
                        {
                            Id = 1709,
                            Label = "Out of Scope(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "scope.outofscope"
                        },
                        new
                        {
                            Id = 1894,
                            Label = "No available Pmol(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "NoPmolAvailable"
                        },
                        new
                        {
                            Id = 1663,
                            Label = "Nieuweling",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceNovice"
                        },
                        new
                        {
                            Id = 1665,
                            Label = "Beginner",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceBeginner"
                        },
                        new
                        {
                            Id = 1666,
                            Label = "Getalenteerd",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceTalented"
                        },
                        new
                        {
                            Id = 1668,
                            Label = "Intermediate(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceIntermediate"
                        },
                        new
                        {
                            Id = 1669,
                            Label = "Skilful(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSkilful"
                        },
                        new
                        {
                            Id = 1670,
                            Label = "Seasoned(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSeasoned"
                        },
                        new
                        {
                            Id = 1671,
                            Label = "Proficient(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceProficient"
                        },
                        new
                        {
                            Id = 1672,
                            Label = "Experienced(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceExperienced"
                        },
                        new
                        {
                            Id = 1673,
                            Label = "Advanced(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceAdvanced"
                        },
                        new
                        {
                            Id = 1674,
                            Label = "Senior(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSenior"
                        },
                        new
                        {
                            Id = 1675,
                            Label = "Expert(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceExpert"
                        },
                        new
                        {
                            Id = 1676,
                            Label = "Team Building Skills(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillTeam Building Skills"
                        },
                        new
                        {
                            Id = 1677,
                            Label = "Collaboration(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillCollaboration"
                        },
                        new
                        {
                            Id = 1678,
                            Label = "Communication(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillCommunication"
                        },
                        new
                        {
                            Id = 1679,
                            Label = "Flexibility(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillFlexibility"
                        },
                        new
                        {
                            Id = 1680,
                            Label = "Listening(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillListening"
                        },
                        new
                        {
                            Id = 1681,
                            Label = "Analytical Skills(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillAnalytical Skills"
                        },
                        new
                        {
                            Id = 1682,
                            Label = "Critical thinking(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillCritical thinking"
                        },
                        new
                        {
                            Id = 1683,
                            Label = "Data analysis(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillData analysis"
                        },
                        new
                        {
                            Id = 1684,
                            Label = "Numeracy(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillNumeracy"
                        },
                        new
                        {
                            Id = 1685,
                            Label = "Reporting(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillReporting"
                        },
                        new
                        {
                            Id = 1690,
                            Label = "Utility(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomy.Utility"
                        },
                        new
                        {
                            Id = 1691,
                            Label = "Location(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomy.Location"
                        },
                        new
                        {
                            Id = 1692,
                            Label = "Scope(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomy.Scope"
                        },
                        new
                        {
                            Id = 1693,
                            Label = "Utility(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomy.Utility"
                        },
                        new
                        {
                            Id = 1694,
                            Label = "Location(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomy.Location"
                        },
                        new
                        {
                            Id = 1695,
                            Label = "Scope(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomy.Scope"
                        },
                        new
                        {
                            Id = 1696,
                            Label = "Utility(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomy.Utility"
                        },
                        new
                        {
                            Id = 1697,
                            Label = "Location(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomy.Location"
                        },
                        new
                        {
                            Id = 1698,
                            Label = "Scope(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomy.Scope"
                        },
                        new
                        {
                            Id = 1686,
                            Label = "Family 01(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilyTechnical instructions"
                        },
                        new
                        {
                            Id = 1687,
                            Label = "Family 02(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilySafety instructions"
                        },
                        new
                        {
                            Id = 1688,
                            Label = "Family 03(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilyEnvironmental instructions"
                        },
                        new
                        {
                            Id = 1689,
                            Label = "Family 04(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilyHealth instructions"
                        },
                        new
                        {
                            Id = 1700,
                            Label = "Threat(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "4dba0e61-15f8-47a9-8fcd-0ced2e2ce210"
                        },
                        new
                        {
                            Id = 1701,
                            Label = "Opportunity(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "ac9f4655-f14c-43c7-8e4a-5390bfdc16d0"
                        },
                        new
                        {
                            Id = 1702,
                            Label = "Active(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "00b0a1c6-e5c8-4143-90f1-7dec0b0397ae"
                        },
                        new
                        {
                            Id = 1703,
                            Label = "Closed(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "8b0d0513-6111-466f-86c8-b26278c3c4f7"
                        },
                        new
                        {
                            Id = 1710,
                            Label = "Product(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product"
                        },
                        new
                        {
                            Id = 1711,
                            Label = "Product(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product"
                        },
                        new
                        {
                            Id = 1712,
                            Label = "Product(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product"
                        },
                        new
                        {
                            Id = 1713,
                            Label = "Separation(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation"
                        },
                        new
                        {
                            Id = 1714,
                            Label = "Separation(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation"
                        },
                        new
                        {
                            Id = 1715,
                            Label = "Separation(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation"
                        },
                        new
                        {
                            Id = 1716,
                            Label = "Traject Part(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart"
                        },
                        new
                        {
                            Id = 1717,
                            Label = "Traject Part(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart"
                        },
                        new
                        {
                            Id = 1718,
                            Label = "Traject Part()",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart"
                        },
                        new
                        {
                            Id = 1895,
                            Label = "Handed Over(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "WorkflowState.csvHandedOver"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<double>("Heading")
                        .HasColumnType("float");

                    b.Property<double>("HorizontalAccuracy")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<double>("VerticleAccuracy")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thread")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ConsumableForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsConsumable");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.LabourForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.MaterialForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsExperience");

                    b.HasData(
                        new
                        {
                            Id = "46e02a0c-4c87-437b-8342-b16c2fa6cf45",
                            LocaleCode = "PbsExperienceNovice",
                            Name = "Novice"
                        },
                        new
                        {
                            Id = "e2ce864c-564c-49a4-8860-b79dbbffb673",
                            LocaleCode = "PbsExperienceBeginner",
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = "c98e47d8-6b1f-4bee-97a1-fd1207e3670d",
                            LocaleCode = "PbsExperienceTalented",
                            Name = "Talented"
                        },
                        new
                        {
                            Id = "3417e806-8e97-46d3-adb6-34426cd93bf4",
                            LocaleCode = "PbsExperienceIntermediate",
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = "b08b0641-e260-4750-8141-3cd8c25f6344",
                            LocaleCode = "PbsExperienceSkilful",
                            Name = "Skilful"
                        },
                        new
                        {
                            Id = "ea27ee00-8b38-48b6-8cc7-6872dc3cf09c",
                            LocaleCode = "PbsExperienceSeasoned",
                            Name = "Seasoned"
                        },
                        new
                        {
                            Id = "df186961-6453-4c42-af53-c8866684a075",
                            LocaleCode = "PbsExperienceProficient",
                            Name = "Proficient"
                        },
                        new
                        {
                            Id = "ee146eff-0f1f-44b1-a6ba-73b267416973",
                            LocaleCode = "PbsExperienceExperienced",
                            Name = "Experienced"
                        },
                        new
                        {
                            Id = "42325533-9834-4fd8-ac51-5b4e02fc0494",
                            LocaleCode = "PbsExperienceAdvanced",
                            Name = "Advanced"
                        },
                        new
                        {
                            Id = "cec1293c-7f89-48ed-865c-65cc7cbe526f",
                            LocaleCode = "PbsExperienceSenior",
                            Name = "Senior"
                        },
                        new
                        {
                            Id = "8c4bd8eb-f087-4904-8507-0f494dcf7d86",
                            LocaleCode = "PbsExperienceExpert",
                            Name = "Expert"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsExperienceLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsExperienceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsExperienceId");

                    b.ToTable("PbsExperienceLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("PbsHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InstructionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsInstructionFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsInstructionFamilyId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsInstruction");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstructionFamily", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsInstructionFamily");

                    b.HasData(
                        new
                        {
                            Id = "26f71a21-b062-4fc8-b47a-f50038e71fe1",
                            Family = "Family 01",
                            LocaleCode = "PbsInstructionFamilyTechnical instructions"
                        },
                        new
                        {
                            Id = "fc925493-c443-437d-a367-b88e81941aaa",
                            Family = "Family 02",
                            LocaleCode = "PbsInstructionFamilySafety instructions"
                        },
                        new
                        {
                            Id = "48ec5849-1daf-425c-8fcf-fb0dd9748b8c",
                            Family = "Family 03",
                            LocaleCode = "PbsInstructionFamilyEnvironmental instructions"
                        },
                        new
                        {
                            Id = "e286e905-c157-4d19-ac7c-55550df0ee9a",
                            Family = "Family 04",
                            LocaleCode = "PbsInstructionFamilyHealth instructions"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstructionLink", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsInstructionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsInstructionId");

                    b.ToTable("PbsInstructionLink");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MachineTaxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductItemTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsQualityResponsibilityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsToleranceStateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDerivation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductFormatPresentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsQualityResponsibilityId");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.ToTable("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductItemType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductItemType");

                    b.HasData(
                        new
                        {
                            Id = "48a7dd9c-55ac-4e7c-a2f3-653811c0eb14",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14",
                            Name = "External Products"
                        },
                        new
                        {
                            Id = "aa0c8e3c-f716-4f92-afee-851d485164da",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da",
                            Name = "Internal Products"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductItemTypeLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductItemTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductItemTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductStatus");

                    b.HasData(
                        new
                        {
                            Id = "d60aad0b-2e84-482b-ad25-618d80d49477",
                            DisplayOrder = 1,
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477",
                            Name = "Pending Development"
                        },
                        new
                        {
                            Id = "94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            DisplayOrder = 2,
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            Name = "In Development"
                        },
                        new
                        {
                            Id = "7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            DisplayOrder = 3,
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            Name = "In Review"
                        },
                        new
                        {
                            Id = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            DisplayOrder = 4,
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            Name = "Approved"
                        },
                        new
                        {
                            Id = "4010e768-3e06-4702-b337-ee367a82addb",
                            DisplayOrder = 5,
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb",
                            Name = "Handed Over"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductStatusLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductStatusLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsTaxonomyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsTaxonomyNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("PbsTaxonomyId");

                    b.ToTable("PbsProductTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQuality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("QualityId");

                    b.ToTable("PbsQuality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQualityResponsibility", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityApproverId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityProducerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityReviewerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsQualityResponsibility");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsRisk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RiskId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("RiskId");

                    b.ToTable("PbsRisk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsScope", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsScopeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsScope");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsService", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MouId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsService");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsSkill");

                    b.HasData(
                        new
                        {
                            Id = "8b145fdc-b666-488c-beec-f335627024601",
                            LocaleCode = "PbsSkillTeam Building Skills",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "bfd3f176-cc91-4d01-b27f-bef8888fc21c1",
                            LocaleCode = "PbsSkillCollaboration",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "0ffe382d-fe7d-4ac7-91b3-204570427c371",
                            LocaleCode = "PbsSkillCommunication",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "8f992d6e-7fee-43a3-b06c-430fa4d9d8e41",
                            LocaleCode = "PbsSkillFlexibility",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "1ae3028d-ab5b-4d88-bf4a-5bf53d969c4d1",
                            LocaleCode = "PbsSkillListening",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1",
                            LocaleCode = "PbsSkillAnalytical Skills",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "7fd2a1b0-c559-4727-a596-dbc0af7c171e1",
                            LocaleCode = "PbsSkillCritical thinking",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "a1e3c91b-a8cf-43b1-b551-8bba9f64c3351",
                            LocaleCode = "PbsSkillData analysis",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "4a2cb5e5-e9ab-47a6-b1c5-080bdc5d60b61",
                            LocaleCode = "PbsSkillNumeracy",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "74e9f3ce-5338-467c-add0-ba7116cd300b1",
                            LocaleCode = "PbsSkillReporting",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "d60aad0b-2e84-482b-ad25-618d80d49477",
                            LocaleCode = "PbsSkillSanitary",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601",
                            Title = "Sanitary"
                        },
                        new
                        {
                            Id = "94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            LocaleCode = "PbsSkillCooling Fitter",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601",
                            Title = "Cooling Fitter"
                        },
                        new
                        {
                            Id = "7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            LocaleCode = "PbsSkillCooling Technician",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601",
                            Title = "Cooling Technician"
                        },
                        new
                        {
                            Id = "4010e768-3e06-4702-b337-ee367a82addb",
                            LocaleCode = "PbsSkillGas Fitter",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601",
                            Title = "Gas Fitter"
                        },
                        new
                        {
                            Id = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            LocaleCode = "PbsSkillGas Technician",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601",
                            Title = "Gas Technician"
                        },
                        new
                        {
                            Id = "85cb4e8d-8e8c-487d-8170-6b91c89fc123",
                            LocaleCode = "PbsSkillVentilation",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601",
                            Title = "Ventilation"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsExperienceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsSkillId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsExperienceId");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("PbsSkillId");

                    b.ToTable("PbsSkillExperience");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsSkillId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsSkillId");

                    b.ToTable("PbsSkillLocalizedData");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            Label = "Sanitary",
                            LanguageCode = "en",
                            PbsSkillId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            Label = "Sanitair",
                            LanguageCode = "nl",
                            PbsSkillId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            Label = "Cooling Fitter",
                            LanguageCode = "en",
                            PbsSkillId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            Label = "Koelmonteur",
                            LanguageCode = "nl",
                            PbsSkillId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            Label = "Cooling Technician",
                            LanguageCode = "en",
                            PbsSkillId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-213d2d1c5f5a",
                            Label = "Koeltechnieker",
                            LanguageCode = "nl",
                            PbsSkillId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af",
                            Label = "Gas Fitter",
                            LanguageCode = "en",
                            PbsSkillId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-dd1bf1e2391a",
                            Label = "Gasmonteur",
                            LanguageCode = "nl",
                            PbsSkillId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            Label = "Gas Technician",
                            LanguageCode = "en",
                            PbsSkillId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac",
                            Label = "Gastechnieker",
                            LanguageCode = "nl",
                            PbsSkillId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "8882cd5a-0941-4c56-9c13-f5fdca2ab888",
                            Label = "Ventilation",
                            LanguageCode = "en",
                            PbsSkillId = "85cb4e8d-8e8c-487d-8170-6b91c89fc123"
                        },
                        new
                        {
                            Id = "4dd9e479-75b3-40c6-ad61-e40dbe6a5111",
                            Label = "Ventilatie",
                            LanguageCode = "nl",
                            PbsSkillId = "85cb4e8d-8e8c-487d-8170-6b91c89fc123"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsTaxonomy");

                    b.HasData(
                        new
                        {
                            Id = "6e54725c-e396-4ce4-88f3-a6e9678a0389",
                            LocaleCode = "PbsTaxonomy.Utility",
                            Name = "Utility"
                        },
                        new
                        {
                            Id = "ab294299-f251-41a8-94bd-3ae0150df134",
                            LocaleCode = "PbsTaxonomy.Location",
                            Name = "Location"
                        },
                        new
                        {
                            Id = "b08d229c-0c03-4593-8bd6-652939986a22",
                            LocaleCode = "PbsTaxonomy.Scope",
                            Name = "Scope"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "f0d64941-145a-4a8a-8619-165c965a16eb",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product",
                            Name = "Product",
                            Order = 100,
                            Type = "Location"
                        },
                        new
                        {
                            Id = "077845b7-79a7-4883-a02d-6094fc6d6563",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation",
                            Name = "Separation",
                            Order = 200,
                            Type = "Location"
                        },
                        new
                        {
                            Id = "8bb27024-ce91-4406-8e48-db08286f0b4b",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product",
                            Name = "Product",
                            Order = 100,
                            Type = "Utility"
                        },
                        new
                        {
                            Id = "cd8418c0-502e-4893-b387-1426a5edd3a4",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart",
                            Name = "Traject Part",
                            Order = 200,
                            Type = "Utility"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomyLevelLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSearchable")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PbsTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsTaxonomyLevelLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomyLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsTaxonomyId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsTaxonomyId");

                    b.ToTable("PbsTaxonomyLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsToleranceState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsToleranceState");

                    b.HasData(
                        new
                        {
                            Id = "004eb795-8bba-47e8-9049-d14774ab0b18",
                            LocaleCode = "ProjectToleranceState.csvWithin Tolerance (green)",
                            Name = "Within Tolerance (green)"
                        },
                        new
                        {
                            Id = "8f33bdf6-7600-4ad7-b558-c98899c1e5b2",
                            LocaleCode = "ProjectToleranceState.csvOut of Tolerance (red)",
                            Name = "Out of Tolerance (red)"
                        },
                        new
                        {
                            Id = "d9712fb3-02b6-4c2a-991c-ee904c87d8a8",
                            LocaleCode = "ProjectToleranceState.csvTolerance limit (orange)",
                            Name = "Tolerance limit (orange)"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsToleranceStateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsToleranceStateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsToleranceStateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ServiceDocuments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceDocuments");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ToolsForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsTools");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PC.ProjectCost", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("CostMou")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsPlannedResource")
                        .HasColumnType("bit");

                    b.Property<string>("Mou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPmolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPmolTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalPmolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalPmolTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PmolTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalCost")
                        .HasColumnType("float");

                    b.Property<bool>("isUsed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("ProjectCost");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PC.ResourceItemPriceList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Coefficient")
                        .HasColumnType("float");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("FixedPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ResourceTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceItemPriceList");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PC.ResourceTypePriceList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("ConsumableCoefficient")
                        .HasColumnType("float");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<double?>("LabourCoefficient")
                        .HasColumnType("float");

                    b.Property<double?>("MaterialCoefficient")
                        .HasColumnType("float");

                    b.Property<double?>("ServiceCoefficient")
                        .HasColumnType("float");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("ToolCoefficient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.ToTable("ResourceTypePriceList");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PdfToExcel.ContractorPdfData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotRowNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageRow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageRowColumn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("VH")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContractorPdfData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PdfToExcel.ContractorPdfRowData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LotId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("ContractorPdfRowData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.Pmol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutionEndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionStartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForemanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForemanMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBreak")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectMoleculeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BorId");

                    b.HasIndex("ProjectMoleculeId")
                        .IsUnique()
                        .HasFilter("[ProjectMoleculeId] IS NOT NULL");

                    b.ToTable("PMol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolBreak", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBreak")
                        .HasColumnType("bit");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PmolBreak");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolExtraWork", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolExtraWork");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolExtraWorkFiles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolExtraWorkId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolExtraWorkId");

                    b.ToTable("PMolExtraWorkFiles");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolInstruction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolInstruction");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolInstructionLink", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolDocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PmolDocumentId");

                    b.ToTable("PMolInstructionLink");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolJournal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DoneWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EncounteredProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LessonsLearned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReportedThings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolJournal");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolJournalPicture", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolJournalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolJournalId");

                    b.ToTable("PMolJournalPicture");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkConsumable", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcBasicUnitofMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("RequiredQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolPlannedWorkConsumable");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkLabour", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcBasicUnitofMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("RequiredQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolPlannedWorkLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcBasicUnitofMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("RequiredQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolPlannedWorkMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkTools", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcBasicUnitofMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("RequiredQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolPlannedWorkTools");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolQuality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.HasIndex("QualityId");

                    b.ToTable("PMolQuality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolRisk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RiskId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.HasIndex("RiskId");

                    b.ToTable("PMolRisk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolService", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MouId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PmolService");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolServiceDocuments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PmolServiceDocuments");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolShortcutpaneData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PMolShortcutpaneData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolStartHandshake", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolStartHandshake");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PMolStatus");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "in voorbereiding",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Pending Development",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-213d2d1c5f5a",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-dd1bf1e2391a",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolStopHandshake", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonlId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolId");

                    b.ToTable("PMolStopHandshake");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolStopHandshakeDocument", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PMolStopHandshakeDocument");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolTeamRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PmolLabourId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("RequiredQuantity")
                        .HasColumnType("float");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PmolLabourId");

                    b.ToTable("PmolTeamRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PMolType");

                    b.HasData(
                        new
                        {
                            Id = "015bb656-f708-4a0d-9973-3d834ffe757d",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Work",
                            Type = 1,
                            TypeId = "5bb656-f708-4a0d-9973-3d834ffe757d01"
                        },
                        new
                        {
                            Id = "03f7c556-2d73-4283-8fc3-634233943bb9",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "Werk",
                            Type = 1,
                            TypeId = "5bb656-f708-4a0d-9973-3d834ffe757d01"
                        },
                        new
                        {
                            Id = "9d13f8ce-f268-4ce3-9f12-fa6b3adad2cf",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Travel",
                            Type = 0,
                            TypeId = "3f8ce-f268-4ce3-9f12-fa6b3adad2cf9d1"
                        },
                        new
                        {
                            Id = "c80b2d63-f3d0-4cd4-8353-5d7a089dba98",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "Verplaatsen",
                            Type = 0,
                            TypeId = "3f8ce-f268-4ce3-9f12-fa6b3adad2cf9d1"
                        },
                        new
                        {
                            Id = "f3d04255-1cc1-4cdc-b8a7-5423972a3dda",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "(Un)load",
                            Type = 2,
                            TypeId = "848e5e-622d-4783-95e6-4092004eb5eaff"
                        },
                        new
                        {
                            Id = "ff848e5e-622d-4783-95e6-4092004eb5ea",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "Laden en lossen",
                            Type = 2,
                            TypeId = "848e5e-622d-4783-95e6-4092004eb5eaff"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.PODocument", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POHeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("POHeaderId");

                    b.ToTable("PODocument");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableProbability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCu")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfConsumables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfLabours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfMaterials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfTools")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PORequestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedProbability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuplierCompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCabPersonCompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("POHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POLabourTeam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("POLabourTeam");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCrossReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CTotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeaderTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCrossReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POHeaderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PTotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PUnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductItemTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsToleranceState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsToleranceStateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsedPoId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.PORequestType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PORequestType");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-po57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Purchase Request",
                            RequestTypeId = "94282458-0b40-poa3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-pob3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Return Request",
                            RequestTypeId = "4010e768-3e06-po02-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-ponl-0000-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Bestelaanvraag",
                            RequestTypeId = "94282458-0b40-poa3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-ponl-0000-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Terug name",
                            RequestTypeId = "4010e768-3e06-po02-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "jhkfab9fe-po57-jhoe-82a9-d27008688nfr",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Capacity Request",
                            RequestTypeId = "lll82458-0b40-poa3-b0f9-c2e40344clll"
                        },
                        new
                        {
                            Id = "lkj9e479-pob3-lhds-ad61-e40dbe6a51t67",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Reservatie",
                            RequestTypeId = "lll82458-0b40-poa3-b0f9-c2e40344clll"
                        },
                        new
                        {
                            Id = "ehwbjdjd-pob3-lhds-ad61-e40dbe6a51www",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Purchase Order",
                            RequestTypeId = "343482458-0spr-poa3-b0f9-c2e40344clll"
                        },
                        new
                        {
                            Id = "hjnnjdjd-pob3-lhds-ad61-e40dbe6a51tfg",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "Bestelling",
                            RequestTypeId = "343482458-0spr-poa3-b0f9-c2e40344clll"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POResources", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorResourceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCrossReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CDeliveryRequested")
                        .HasColumnType("bit");

                    b.Property<string>("CFullTimeEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNumberOfDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPurchased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CStopDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CTotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cdevices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateProductCatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasChanged")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("PCPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PConsumed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCrossReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDeliveryRequested")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFullTimeEmployee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PInvoiced")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNumberOfDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPurchased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PStopDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PTotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PUnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdevices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchesOrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("RequestedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResourceFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourcesType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsedPoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("warf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PurchesOrderId");

                    b.ToTable("POResources");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POResourcesDocument", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POHeaderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POResourcesId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POResourcesDocument");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POResourcesDocumentC", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POHeaderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POResourcesId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POResourcesDocumentC");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POStatus");

                    b.HasData(
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-213d2d1c5f5a",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-dd1bf1e2391a",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af34",
                            DisplayOrder = 6,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c-feedback"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed35",
                            DisplayOrder = 6,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c-feedback"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af56",
                            DisplayOrder = 7,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c-accept"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed78",
                            DisplayOrder = 7,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c-accept"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POToolPool", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssignedCPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedCPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WareHouseTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POToolPool");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POType");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Resources",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Subcontractor Product",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae1",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Resources",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac2",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Subcontractor Product",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-prod-d27008688bae",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Godderies Product",
                            TypeId = "94282458-0b40-capa-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-reso-e40dbe6a51ac3",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Godderies Product",
                            TypeId = "94282458-0b40-capa-b0f9-c2e40344c8f1"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectClassification.ProjectClassificationBuisnessUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectClassificationBuisnessUnit");

                    b.HasData(
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 1,
                            Label = "Civil",
                            LanguageCode = "en",
                            Name = "Civil",
                            TypeId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "dgdgsa893-0267-48af-b65a-b7a93ebdfdgg",
                            DisplayOrder = 1,
                            Label = "Civil",
                            LanguageCode = "nl",
                            Name = "Civil(nl)",
                            TypeId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "fj56a893-0267-48af-b65a-b7a93ebddsndsgk",
                            DisplayOrder = 2,
                            Label = "Buisness Unit 2",
                            LanguageCode = "en",
                            Name = "Buisness Unit 2",
                            TypeId = "jdsjg4e8d-fhhd-487d-8170-6b91c89fdsgksg"
                        },
                        new
                        {
                            Id = "hjjgsa893-0267-48af-b65a-b7a93ebdfdmgmmm",
                            DisplayOrder = 2,
                            Label = "Buisness Unit 2",
                            LanguageCode = "nl",
                            Name = "Buisness Unit 2(nl)",
                            TypeId = "jdsjg4e8d-fhhd-487d-8170-6b91c89fdsgksg"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectClassification.ProjectClassificationConstructionType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectClassificationConstructionType");

                    b.HasData(
                        new
                        {
                            Id = "uurya893-0267-48af-b65a-b7a93ebd1wem",
                            DisplayOrder = 1,
                            Label = "Pontoon",
                            LanguageCode = "en",
                            Name = "Pontoon",
                            TypeId = "zzzbk4e8d-8e8c-487d-8170-6b91c89fczzz"
                        },
                        new
                        {
                            Id = "qqqgsa893-0267-48af-b65a-b7a93ebdfdgg",
                            DisplayOrder = 1,
                            Label = "Pontoon",
                            LanguageCode = "nl",
                            Name = "Pontoon(nl)",
                            TypeId = "zzzbk4e8d-8e8c-487d-8170-6b91c89fczzz"
                        },
                        new
                        {
                            Id = "ooo6a893-0267-48af-b65a-b7a93ebddsndsgk",
                            DisplayOrder = 2,
                            Label = "ConstructionType 2",
                            LanguageCode = "en",
                            Name = "ConstructionType 2",
                            TypeId = "eeedkjg4e8d-fhhd-487d-8170-6b91c89fdddeee"
                        },
                        new
                        {
                            Id = "ncngsa893-0267-48af-b65a-b7a93ebdfdmgmmm",
                            DisplayOrder = 2,
                            Label = "ConstructionType 2",
                            LanguageCode = "nl",
                            Name = "ConstructionType 2(nl)",
                            TypeId = "eeedkjg4e8d-fhhd-487d-8170-6b91c89fdddeee"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectClassification.ProjectClassificationHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectClassificationBuisnessUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectClassificationConstructionTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectClassificationSectorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectClassificationSizeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectClassification");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectClassification.ProjectClassificationSector", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectClassificationSector");

                    b.HasData(
                        new
                        {
                            Id = "ya893-jsjj-fmms-amdm-b7a93ebd1wem",
                            DisplayOrder = 1,
                            Label = "Harbour",
                            LanguageCode = "en",
                            Name = "Harbour",
                            TypeId = "bbbbk4e8d-8e8c-487d-8170-6b91c89fcbbb"
                        },
                        new
                        {
                            Id = "kkk93-jsjj-fmms-amdm-b7a93ebd1wem",
                            DisplayOrder = 1,
                            Label = "Harbour",
                            LanguageCode = "nl",
                            Name = "Harbour(nl)",
                            TypeId = "bbbbk4e8d-8e8c-487d-8170-6b91c89fcbbb"
                        },
                        new
                        {
                            Id = "ppp93-jsjj-fmms-amdm-b7a93ebd1wem",
                            DisplayOrder = 2,
                            Label = "Sector 2",
                            LanguageCode = "en",
                            Name = "Sector 2",
                            TypeId = "vvvdkjg4e8d-fhhd-487d-8170-6b91c89fdddvvv"
                        },
                        new
                        {
                            Id = "zzz93-jsjj-fmms-amdm-b7a93ebd1wem",
                            DisplayOrder = 2,
                            Label = "Sector 2",
                            LanguageCode = "nl",
                            Name = "Sector 2(nl)",
                            TypeId = "vvvdkjg4e8d-fhhd-487d-8170-6b91c89fdddvvv"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectClassification.ProjectClassificationSize", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectClassificationSize");

                    b.HasData(
                        new
                        {
                            Id = "iisia893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 1,
                            Label = "1-999",
                            LanguageCode = "en",
                            Name = "1-999",
                            TypeId = "ifnfk4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "dgdgsa893-0267-48af-b65a-b7a93ebdfdgg",
                            DisplayOrder = 1,
                            Label = "1-999",
                            LanguageCode = "nl",
                            Name = "1-999(nl)",
                            TypeId = "ifnfk4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "nnn6a893-0267-48af-b65a-b7a93ebddsndsgk",
                            DisplayOrder = 2,
                            Label = "Size 2",
                            LanguageCode = "en",
                            Name = "Size 2",
                            TypeId = "kjsdkjg4e8d-fhhd-487d-8170-6b91c89fdddaad"
                        },
                        new
                        {
                            Id = "dmagsa893-0267-48af-b65a-b7a93ebdfdmgmmm",
                            DisplayOrder = 2,
                            Label = "Size 2",
                            LanguageCode = "nl",
                            Name = "Size 2(nl)",
                            TypeId = "kjsdkjg4e8d-fhhd-487d-8170-6b91c89fdddaad"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectCostConversion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoadingConversionOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TravelConversionOption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectCostConversion");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractingUnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralLedgerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjManagementLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjTemplateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjToleranceStateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectConnectionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionDbNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectScopeStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SequenceCode")
                        .IsUnique()
                        .HasFilter("[SequenceCode] IS NOT NULL");

                    b.ToTable("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinitionHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.ToTable("ProjectDefinitionHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFeature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Feature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectFeature");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("BudgetLabour")
                        .HasColumnType("float");

                    b.Property<double?>("BudgetMaterial")
                        .HasColumnType("float");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerBudgetSpent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifferenceEstimatedCostAndTenderBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifferenceTenderAndCustomer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedTotalProjectCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoiced")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinAndExtraWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenderBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToBeInvoiced")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalBudget")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectFinance");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinancialStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectFinancialStatus");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectStateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectStateId");

                    b.ToTable("ProjectHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectKPI", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomLabelOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomLabelThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomLabelTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CustomPropOne")
                        .HasColumnType("float");

                    b.Property<double?>("CustomPropThree")
                        .HasColumnType("float");

                    b.Property<double?>("CustomPropTwo")
                        .HasColumnType("float");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectKPI");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLanguage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectLanguage");

                    b.HasData(
                        new
                        {
                            Id = "yyy93-jsjj-fmms-amdm-b7a93ebd1www",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "en",
                            TypeId = "tttdkjg4e8d-fhhd-487d-8170-6b91c89fdddttt"
                        },
                        new
                        {
                            Id = "iii93-jsjj-fmms-amdm-b7a93ebd1iii",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "nl",
                            TypeId = "tttdkjg4e8d-fhhd-487d-8170-6b91c89fdddttt"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.Address", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCodeISO3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountrySecondarySubdivision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountrySubdivision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeformAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.BoundingPoint", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BtmRightPointId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TopLeftPointId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BtmRightPointId");

                    b.HasIndex("TopLeftPointId");

                    b.ToTable("BoundingPoint");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.DataSources", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GeometryId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GeometryId");

                    b.ToTable("DataSources");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.Geometry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Geometry");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.MapLocation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoundingBoxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataSourcesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViewportId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BoundingBoxId");

                    b.HasIndex("DataSourcesId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ViewportId");

                    b.ToTable("MapLocation");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.Position", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectManagementLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListingOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagementLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectManagementLevel");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectManagementLevelLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagementLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectManagementLevelLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectScopeStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectScopeStatus");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "New",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae1",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Nieuw",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Preparation",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "098cf409-7cb8-4076-00nl-657dd897f5bb",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "In Voorbereiding",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Execution",
                            StatusId = "jj282458-0b40-jja3-b0f9-c2e40344c8jj"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-00nl-ce7fbf10e27c",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "In Uitvoering",
                            StatusId = "jj282458-0b40-jja3-b0f9-c2e40344c8jj"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab2en",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "In Pre Commisioning",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab2nl",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "In voorlopige bedrijfstelling",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1cen",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "In Commisioning",
                            StatusId = "a35ab9fe-df57-4088-82a9-d27008688bae11"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1cnl",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "In bedrijfstelling",
                            StatusId = "a35ab9fe-df57-4088-82a9-d27008688bae11"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 6,
                            LanguageCode = "en",
                            Name = "Provisional Accepted",
                            StatusId = "60aad0b-2e84-482b-ad25-618d80d49488"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-00nl-f5fdca2ab276",
                            DisplayOrder = 6,
                            LanguageCode = "nl",
                            Name = "Voorlopige opgeleverd",
                            StatusId = "60aad0b-2e84-482b-ad25-618d80d49488"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 7,
                            LanguageCode = "en",
                            Name = "Accepted",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-00nl-b7a93ebd1ccf",
                            DisplayOrder = 7,
                            LanguageCode = "nl",
                            Name = "Opgeleverd",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectStateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectStateId");

                    b.ToTable("ProjectStateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractingUnitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ContractingUnitId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTeam");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeamRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAccessGranted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTeamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabPersonId");

                    b.HasIndex("ProjectTeamId");

                    b.ToTable("ProjectTeamRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTemplate");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTemplateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTemplateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTemplateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CalendarTemplateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TenderEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TenderStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CalendarTemplateId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectTime");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectToleranceState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListingOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectToleranceStateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectToleranceState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectToleranceStateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectToleranceStateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectToleranceStateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTypeLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectUserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsrRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDefinitionId");

                    b.ToTable("ProjectUserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectUserRoleFeature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectFeatureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectUserRoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectFeatureId");

                    b.HasIndex("ProjectUserRoleId");

                    b.ToTable("ProjectUserRoleFeature");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Key = "PbsSequenceCode",
                            Value = "PBS-0001"
                        },
                        new
                        {
                            Id = 6,
                            Key = "PbsSequenceCode",
                            Value = "PBS-0001"
                        },
                        new
                        {
                            Id = 8,
                            Key = "BorSequenceCode",
                            Value = "BOR-0001"
                        },
                        new
                        {
                            Id = 9,
                            Key = "PmolSequenceCode",
                            Value = "PMOL-0002"
                        },
                        new
                        {
                            Id = 12,
                            Key = "PsSequenceCode",
                            Value = "PS-0001"
                        },
                        new
                        {
                            Id = 13,
                            Key = "InvoiceSequenceCode",
                            Value = "INV-0001"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsCustomer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PsId");

                    b.ToTable("PsCustomer");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralLedgerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressStatementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("WorkPeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkPeriodTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PsHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PsHeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("PsHeaderId");

                    b.ToTable("PsHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsResource", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("ConsumedQuantity")
                        .HasColumnType("float");

                    b.Property<string>("ConsumedQuantityMou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CostToMou")
                        .HasColumnType("float");

                    b.Property<string>("CpcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcResourceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralLedgerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MouId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCostId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("SoldQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("SpToMou")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CpcResourceTypeId");

                    b.HasIndex("ProjectCostId");

                    b.HasIndex("PsId");

                    b.ToTable("PsResource");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PsStatus");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "in voorbereiding",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Pending Development",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-213d2d1c5f5a",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-dd1bf1e2391a",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PsType");

                    b.HasData(
                        new
                        {
                            Id = "015bb656-f708-4a0d-9973-3d834ffe757d",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Quotation",
                            Type = 1,
                            TypeId = "5bb656-f708-4a0d-9973-3d834ffe757d01"
                        },
                        new
                        {
                            Id = "03f7c556-2d73-4283-8fc3-634233943bb9",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "Offerte",
                            Type = 1,
                            TypeId = "5bb656-f708-4a0d-9973-3d834ffe757d01"
                        },
                        new
                        {
                            Id = "9d13f8ce-f268-4ce3-9f12-fa6b3adad2cf",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Time and Material",
                            Type = 0,
                            TypeId = "3f8ce-f268-4ce3-9f12-fa6b3adad2cf9d1"
                        },
                        new
                        {
                            Id = "c80b2d63-f3d0-4cd4-8353-5d7a089dba98",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "Regie",
                            Type = 0,
                            TypeId = "3f8ce-f268-4ce3-9f12-fa6b3adad2cf9d1"
                        },
                        new
                        {
                            Id = "f3d04255-1cc1-4cdc-b8a7-5423972a3dda",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Extra Work",
                            Type = 2,
                            TypeId = "848e5e-622d-4783-95e6-4092004eb5eaff"
                        },
                        new
                        {
                            Id = "ff848e5e-622d-4783-95e6-4092004eb5ea",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "Meerwerk op offerte",
                            Type = 2,
                            TypeId = "848e5e-622d-4783-95e6-4092004eb5eaff"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QRCode", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravellerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("VehicleNo");

                    b.ToTable("QRCode");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QrHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.HasIndex("QRCodeId");

                    b.ToTable("QrHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Quality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tolerance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDefinitionId");

                    b.ToTable("Quality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QualityHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("QualityHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Risk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RiskTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RiskStatusId");

                    b.HasIndex("RiskTypeId");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.Property<string>("RiskId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskStatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskStatus");

                    b.HasData(
                        new
                        {
                            Id = "00b0a1c6-e5c8-4143-90f1-7dec0b0397ae",
                            Status = "Active"
                        },
                        new
                        {
                            Id = "8b0d0513-6111-466f-86c8-b26278c3c4f7",
                            Status = "Closed"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskType");

                    b.HasData(
                        new
                        {
                            Id = "4dba0e61-15f8-47a9-8fcd-0ced2e2ce210",
                            Type = "Threat"
                        },
                        new
                        {
                            Id = "ac9f4655-f14c-43c7-8e4a-5390bfdc16d0",
                            Type = "Opportunity"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "5e622d-4783-95e6-4092004eb5e-aff848e",
                            RoleName = "Welder",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "18d10b25-57ea-4f4e-9e76-56df09554a95",
                            LanguageCode = "nl",
                            RoleId = "5e622d-4783-95e6-4092004eb5e-aff848e",
                            RoleName = "Lasser",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "be432c54-5860-4f56-832d-ceb3435d8b7e",
                            LanguageCode = "nl",
                            RoleId = "0e06111a-a513-45e0-a431-170dbd4b0d82",
                            RoleName = "Administrator",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "476127cb-62db-4af7-ac8e-d4a722f8e142",
                            LanguageCode = "nl",
                            RoleId = "266a5f47-3489-484b-8dae-e4468c5329dn3",
                            RoleName = "Project Manager",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "245d23fe-4864-4cc5-b53b-0a3b3843f0e1",
                            LanguageCode = "nl",
                            RoleId = "4837043c-119c-47e1-bbf2-1f32557fdf30",
                            RoleName = "Gebruiker",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "1666e217-2b80-4acd-b48b-b041fe263fb9",
                            LanguageCode = "nl",
                            RoleId = "6f56c794-7f88-48a7-9aba-a3f95f940be4",
                            RoleName = "Project Eigenaar",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "3178903c-bf36-40f7-b870-724e238684ff",
                            LanguageCode = "nl",
                            RoleId = "f9a0cee5-f09a-44a5-93e8-d78f84bbcbf3",
                            RoleName = "Project Ingenieur",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "907b7af0-b132-4951-a2dc-6ab82d4cd40d",
                            LanguageCode = "en",
                            RoleId = "907b7af0-b132-4951-a2dc-6ab82d4cd40d",
                            RoleName = "Customer Invoice Contact",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "78b84ad9-6757-405a-9729-5d2af8615e07",
                            LanguageCode = "nl",
                            RoleId = "907b7af0-b132-4951-a2dc-6ab82d4cd40d",
                            RoleName = "Customer Invoice Contact(nl)",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "67897af0-b132-4951-a2dc-6ab82d4cd40d",
                            LanguageCode = "en",
                            RoleId = "910b7af0-b132-4951-a2dc-6ab82d4cd40d",
                            RoleName = "Customer Project Contact",
                            TenantId = 1
                        },
                        new
                        {
                            Id = "56784ad9-6757-405a-9729-5d2af8615e07",
                            LanguageCode = "nl",
                            RoleId = "910b7af0-b132-4951-a2dc-6ab82d4cd40d",
                            RoleName = "Customer Project Contact(nl)",
                            TenantId = 1
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkflowStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowStateId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.StandardMails.StandardMailHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasuringStateRecieved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modifiedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutStandingComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder1TimeFrameTender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder2TimeFrameTender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reminder3TimeFrameTender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestToWrittenInTender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderLost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderWon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StandardMailHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockActiveType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockActiveType");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Active",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Spare",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-hmnb-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Picking ",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-fgdd-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Reserve",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockActivityHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MOUId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockHeaderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WareHouseWorker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockActivityType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockActivityType");

                    b.HasData(
                        new
                        {
                            Id = "4e01a893-0267-48af-inst-b7a93ebd1ccf",
                            ActivityName = "In To The Stock",
                            ActivityTypeId = "7bcb4e8d-8e8c-inst-8170-6b91c89fc3da",
                            DisplayOrder = 1,
                            LanguageCode = "en"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-outs-b7a93ebd1ccf",
                            ActivityName = "Out To The Stock",
                            ActivityTypeId = "7bcb4e8d-8e8c-outs-8170-6b91c89fc3da",
                            DisplayOrder = 2,
                            LanguageCode = "en"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-inst-b7a93ebd1cnl",
                            ActivityName = "In Stock",
                            ActivityTypeId = "7bcb4e8d-8e8c-inst-8170-6b91c89fc3da",
                            DisplayOrder = 1,
                            LanguageCode = "nl"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-outs-b7a93ebd1cnl",
                            ActivityName = "Uit Stock",
                            ActivityTypeId = "7bcb4e8d-8e8c-outs-8170-6b91c89fc3da",
                            DisplayOrder = 2,
                            LanguageCode = "nl"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActiveTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AveragePrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MOUId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityToBeDelivered")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WareHouseTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockHeaderHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockShortCutPane", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockShortCutPane");

                    b.HasData(
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac1",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "All"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af34",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Material",
                            TypeId = "c46c3a26-39a5-42cc-n7k1-89655304eh6"
                        },
                        new
                        {
                            Id = "bdd9e477-75b3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Tool",
                            TypeId = "c46c3a26-39a5-42cc-n9wn-89655304eh6"
                        },
                        new
                        {
                            Id = "bdd9e476-75b3-40c6-ad61-e40dbe6a51ac4",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Consumables",
                            TypeId = "c46c3a26-39a5-42cc-m06g-89655304eh6"
                        },
                        new
                        {
                            Id = "bdd9e475-75b3-40c6-ad61-e40dbe6a51ac5",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "All"
                        },
                        new
                        {
                            Id = "bdd9e474-75b3-40c6-ad61-e40dbe6a51ac6",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Materialen",
                            TypeId = "c46c3a26-39a5-42cc-n7k1-89655304eh6"
                        },
                        new
                        {
                            Id = "bdd9e473-75b3-40c6-ad61-e40dbe6a51ac7",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Gereedschap",
                            TypeId = "c46c3a26-39a5-42cc-n9wn-89655304eh6"
                        },
                        new
                        {
                            Id = "bdd9e472-75b3-40c6-ad61-e40dbe6a51ac8",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "Verbruiksgoederen",
                            TypeId = "c46c3a26-39a5-42cc-m06g-89655304eh6"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockStatus");

                    b.HasData(
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Available",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Out of Stock",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-uuhh-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "beschikbaar",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-ssdd-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Niet meer voorradig",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockType");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Materials",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Tools",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae1",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Consumables",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688b44",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Materialen",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51a44",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Gereedschap",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688ba44",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Verbruiksgoederen",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TAX.Tax", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tax");

                    b.HasData(
                        new
                        {
                            Id = "4ab98714-4087-45d4-bqff-2d63c756688f24",
                            IsDefault = false,
                            Name = "0%",
                            Order = 0
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-baff-2d63c756688f25",
                            IsDefault = false,
                            Name = "6%",
                            Order = 1
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-bzff-2d63c756688f26",
                            IsDefault = false,
                            Name = "12%",
                            Order = 2
                        },
                        new
                        {
                            Id = "4ab98714-4087-45d4-bzff-2d63c756688f27",
                            IsDefault = true,
                            Name = "21%",
                            Order = 3
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShiftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("QRCodeId");

                    b.HasIndex("ShiftId");

                    b.ToTable("TimeClock");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClockActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeClockActivityType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClockActivityTypeLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeClockActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeClockActivityTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClockHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionNumber"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("TimeClockHistory");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Translations.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Translations.Translation", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Acccepted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Accounts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActiveProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Add")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddConsumable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddInstructionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLabour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddOrganisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddResourceRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddTeamMemmber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddTools")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddValidQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddVendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddandNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("All")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alreadyinuse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Approve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Areyousure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Areyousureyouwanttodiscardyourchanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignContractingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AudioRecording")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BORHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BORItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BORStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BasicunitofMeasureMOU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOfResources")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bookmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Break")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetLabour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetlabourandMaterialcanTbehigherthanTotalBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CAB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMMON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCBasicunitofMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCMaxorderquantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCMinorderquantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCNicknames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCResourceCorporateInventoryprice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCResourcefamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCResourcenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCResourcetitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCResourcetype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCSuggestionsavailable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cancel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentralAddressBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cityrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Close")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coefficient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coefficientrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollapseAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Companynamereqired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competencies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Confirm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumablecoefficientrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumablesCoefficient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumablesItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consumedquantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPreference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTypeRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CopyURLhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Copylinkhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateProductCatalogue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorporateProductHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectiveActions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostEuro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostMOU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateQRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriteriaRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerContactPersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseordernumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryRequested")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionofExtraWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Didyouencounteranyproblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscardChanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Download")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Downloaden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doyouhaveotherthingstoreport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Draft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Driver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditConsumable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditInstructionLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditLabour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditNode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditTeamMember")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditTool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElapsedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnvironmentalInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcessRemove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Executiondate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpandAll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Export")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extraadd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FillNameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilterData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Finance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstNameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foreman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foremanmobilenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("General")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Help")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanResources")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InScope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionFamilyRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Internet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternetContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invalidemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryContratingunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Invoiced")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KPIS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label1Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label2Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label2Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label3Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label3Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label4Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label4Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Labour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabourCoefficient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabourItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Labourcoefficientrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastnamerequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkTypeRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Links")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadallResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Loading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationTaxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagementLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagementLevelrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialCoefficient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materialcoefficientrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("New")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickNameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIwonT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Noavailableshiftsfortheday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Noresultsfound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotInvited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Of")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganisationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutOfTolerance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutofScope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMOLAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMOLCoordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMOLHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMOLJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pending")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeoplePickerSuggestionsavailable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Person")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickThisLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pictures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicturesoftheInstallation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlannedQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plannedwork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PleaseSelectproject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseenteremail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseenterlocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseentervalidemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseentervalidnum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseentervalidnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseentervehiclenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PleaseselectaCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseselectjobrole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pleaseselectverificationstatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postalcoderequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredParty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PressureClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Print")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCatalogue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDerivation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDevelopmentSkillsexperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDevelopmentSkillsrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductFormatPresentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductToleranceStates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductToleranceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Productstate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressStatementID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectAccess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectBreakdownStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCompletionDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCoordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCostList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCreate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectMoleculeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectMoleculerJournal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectMoleculerheader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purchased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasingUnitRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityApprover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityProducer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityResponsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityReviewer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualitySkillRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityTolerance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantityrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoveResourceRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNicknames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumberRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourcePriceRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceRequiredQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTitleRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resources")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RisksPending")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPMOU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafetyInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaftyInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Save")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaveandNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Saved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenResolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Search")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Searching")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Selectadate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Selectanoption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCoefficient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servicecoefficientrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Share")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signinwithyourexistingaccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoldQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartHandshake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopHandshake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Streetrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Submit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Success")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestedCPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestedOrganisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestedPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurnameRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teams")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalInstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technicalinfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThisWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeClock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeRegistration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TobeinvoicedEuro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Today")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToleranceLimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToleranceState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToleranceStateRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Toolcoefficientrequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tools")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolsCoefficient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolsItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalBudget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalBudgetcanTbelessthanBudgetlabourandMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalSales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Travel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelConvertion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Upload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityTaxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wallthickness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whatdidwelearntoday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whathaveyoudonetoday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WordDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Work")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkPeriodfrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YesDeleteit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yesterday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoudonThaveanaccesstothisproject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YouwonTbeabletorevertthis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyCompanyname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyMaxorderquantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyMinorderquantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyPreferredparty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyPurchaseunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyResourceleadtime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyResourcenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyResourceprice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_3rdpartyResourcetitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("materials")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Translation");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Translations.WebTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("WebTranslation");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserOid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.CertificationTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CertificationTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CetificationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentCertificationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CertificationTaxonomy");

                    b.HasData(
                        new
                        {
                            Id = "115ab9fe-po57-4088-82a9-d27008688bvv",
                            CertificationTaxonomyLevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            CetificationId = "115ab9fe-po57-4088-82a9-d27008688bvv",
                            ParentCertificationId = "115ab9fe-po57-4088-82a9-d27008688bvv",
                            Title = "Qualification"
                        },
                        new
                        {
                            Id = "22d9e479-pob3-40c6-ad61-e40dbe6a51uu",
                            CertificationTaxonomyLevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            CetificationId = "22d9e479-pob3-40c6-ad61-e40dbe6a51uu",
                            ParentCertificationId = "22d9e479-pob3-40c6-ad61-e40dbe6a51uu",
                            ParentId = "115ab9fe-po57-4088-82a9-d27008688bvv",
                            Title = "Qualification Type 1"
                        },
                        new
                        {
                            Id = "335ab9fe-po57-4088-82a9-d27008688tgg",
                            CertificationTaxonomyLevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            CetificationId = "335ab9fe-po57-4088-82a9-d27008688tgg",
                            ParentCertificationId = "335ab9fe-po57-4088-82a9-d27008688tgg",
                            Title = "Qualification X"
                        },
                        new
                        {
                            Id = "44d9e479-pob3-40c6-ad61-e40dbe6a54kk",
                            CertificationTaxonomyLevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            CetificationId = "44d9e479-pob3-40c6-ad61-e40dbe6a54kk",
                            ParentCertificationId = "44d9e479-pob3-40c6-ad61-e40dbe6a54kk",
                            ParentId = "335ab9fe-po57-4088-82a9-d27008688tgg",
                            Title = "Qualifiaction Type 2"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.CertificationTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CertificationTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "vv5ab9fe-po57-4088-82a9-d27008688bvv",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            Name = "Type"
                        },
                        new
                        {
                            Id = "uud9e479-pob3-40c6-ad61-e40dbe6a51uu",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "2210e768-3e06-po02-b337-ee367a82ad22",
                            Name = "Level"
                        },
                        new
                        {
                            Id = "gg5ab9fe-po57-4088-82a9-d27008688tgg",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8qq",
                            Name = "Type nl"
                        },
                        new
                        {
                            Id = "kkd9e479-pob3-40c6-ad61-e40dbe6a54kk",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "2210e768-3e06-po02-b337-ee367a82ad22",
                            Name = "Level nl"
                        },
                        new
                        {
                            Id = "ttkab9fe-po57-4088-82a9-d27008688btt",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "oo10e768-3e06-po02-b337-ee367a82adoo",
                            Name = "Certification"
                        },
                        new
                        {
                            Id = "eew9e479-pob3-40c6-ad61-e40dbe6a51ee",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "oo10e768-3e06-po02-b337-ee367a82adoo",
                            Name = "Certification nl"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.Competencies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competencies");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.CompetenciesTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompetenciesId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetenciesTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentCompetenciesId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompetenciesTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.CompetenciesTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompetenciesTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "335ab9fe-po57-4088-82a9-d27008688b55",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Name = "Type"
                        },
                        new
                        {
                            Id = "77d9e479-pob3-40c6-ad61-e40dbe6a5177",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "6610e768-3e06-po02-b337-ee367a82ad66",
                            Name = "Level"
                        },
                        new
                        {
                            Id = "335ab9fe-po57-4088-82a9-d27008688ttt",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Name = "Type nl"
                        },
                        new
                        {
                            Id = "77d9e479-pob3-40c6-ad61-e40dbe6a5432",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "6610e768-3e06-po02-b337-ee367a82ad66",
                            Name = "Level nl"
                        },
                        new
                        {
                            Id = "kkkab9fe-po57-4088-82a9-d27008688b55",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "4010e768-3e06-po02-b337-ee367a82addb",
                            Name = "Competencies"
                        },
                        new
                        {
                            Id = "www9e479-pob3-40c6-ad61-e40dbe6a5177",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "4010e768-3e06-po02-b337-ee367a82addb",
                            Name = "Competencies nl"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.OrganizationCertification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("QualificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QualificationOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualificationTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationCertification");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.OrganizationCompetencies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienceLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationCompetencies");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.VPOrganisationShortcutPane", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganisationId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VPOrganisationShortcutPane");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-40vp-vpdf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Organisation",
                            OrganisationId = "d60aad0b-vp84-482b-ad25-vp8d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4evp-vpba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "CU",
                            OrganisationId = "94282458-vp40-40a3-b0f9-vpe40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4cvp-vp13-f5fdca2ab2en",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "BU",
                            OrganisationId = "4010e768-vp06-4702-b337-vp367a82addb"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48vp-vp5a-b7a93ebd1cen",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Department",
                            OrganisationId = "a35ab9fe-vp57-4088-82a9-vp7008688bae11"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4cvp-vp13-f5fdca2ab276",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Team",
                            OrganisationId = "60aad0b-vp84-482b-ad25-vp8d80d49488"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48vp-vp5a-b7a93ebd1ccf",
                            DisplayOrder = 6,
                            LanguageCode = "en",
                            Name = "Person",
                            OrganisationId = "7bcb4e8d-8c-487d-8170-vp91c89fc3da"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.VpPo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VpPoId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VpPoId");

                    b.ToTable("VpPo");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.AbsenceHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AllDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Person")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbsenceHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.AbsenceLeaveType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbsenceLeaveType");

                    b.HasData(
                        new
                        {
                            Id = "aqwab9fe-po57-4088-82a9-d27008688mvk",
                            DisplayOrder = 1,
                            Label = "Casual",
                            LanguageCode = "en",
                            Name = "Casual",
                            TypeId = "lkkab9fe-po57-4088-82a9-d27008688lkk"
                        },
                        new
                        {
                            Id = "slaab9fe-po57-4088-82a9-d27008688kgd",
                            DisplayOrder = 1,
                            Label = "Casual",
                            LanguageCode = "nl",
                            Name = "Casual(nl)",
                            TypeId = "lkkab9fe-po57-4088-82a9-d27008688lkk"
                        },
                        new
                        {
                            Id = "qwe9e479-pob3-40c6-ad61-e40dbe6a5lks",
                            DisplayOrder = 2,
                            Label = "Annual",
                            LanguageCode = "en",
                            Name = "Annual",
                            TypeId = "fg10e768-3e06-po02-b337-ee367a82afff"
                        },
                        new
                        {
                            Id = "eew9e479-pob3-40c6-ad61-e40dbe6a5111",
                            DisplayOrder = 2,
                            Label = "Annual",
                            LanguageCode = "nl",
                            Name = "Annual(nl)",
                            TypeId = "fg10e768-3e06-po02-b337-ee367a82afff"
                        },
                        new
                        {
                            Id = "qqqab9fe-qq57-4088-82a9-d27008688qqq",
                            DisplayOrder = 3,
                            Label = "Medical",
                            LanguageCode = "en",
                            Name = "Medical",
                            TypeId = "oo10e768-3e06-po02-b337-ee367a82adooo"
                        },
                        new
                        {
                            Id = "zzzab9fe-po57-4088-82a9-d27008688zzz",
                            DisplayOrder = 3,
                            Label = "Medical",
                            LanguageCode = "nl",
                            Name = "Medical(nl)",
                            TypeId = "oo10e768-3e06-po02-b337-ee367a82adooo"
                        },
                        new
                        {
                            Id = "bnb9e479-pob3-40c6-ad61-e40dbe6a5bnb",
                            DisplayOrder = 4,
                            Label = "Maternity",
                            LanguageCode = "en",
                            Name = "Maternity",
                            TypeId = "2210e768-3e06-po02-b337-ee367a82ad22"
                        },
                        new
                        {
                            Id = "wer9e479-pob3-40c6-ad61-e40dbe6a5wer",
                            DisplayOrder = 4,
                            Label = "Maternity",
                            LanguageCode = "nl",
                            Name = "Maternity(nl)",
                            TypeId = "2210e768-3e06-po02-b337-ee367a82ad22"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.AbsenceType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AbsenceType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.CorporateShedule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CorporateShedule");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.CorporateSheduleTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CorporateSheduleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CorporateSheduleTime");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MachineTaxonmy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MachineTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineTaxonmy");

                    b.HasData(
                        new
                        {
                            Id = "335ab9fe-mc57-4088-82a9-d27008688mchine1",
                            MachineTaxonomyLevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Title = "Machine-1"
                        },
                        new
                        {
                            Id = "335ab9fe-mc57-4088-82a9-d27008688mchine2",
                            MachineTaxonomyLevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Title = "Machine-2"
                        },
                        new
                        {
                            Id = "335ab9fe-mc57-4088-82a9-d27008688mchine3",
                            MachineTaxonomyLevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Title = "Machine-3"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MachineTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "335ab9fe-mc57-4088-82a9-d27008688b55",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Name = "Machine"
                        },
                        new
                        {
                            Id = "335ab9fe-mcmc-4088-82a9-d27008688b55",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "88282458-0b40-poa3-b0f9-c2e40344c888",
                            Name = "Machine-nl"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MilestoneDocuments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilestoneHeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MilestoneHeaderId");

                    b.ToTable("MilestoneDocuments");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MilestoneHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountableId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActualAmmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedAmmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationTaxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineTaxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponsibleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityTaxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilestoneHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MilestoneStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilestoneStatus");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-msms-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "in voorbereiding",
                            StatusId = "d60aad0b-msms-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-msms-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-msms-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-msms-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Pending Development",
                            StatusId = "d60aad0b-msms-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "4e01a893-msms-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-msms-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "5015743d-msms-4531-808d-d4e1400e1eed",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-msms-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-msms-4ca2-8723-213d2d1c5f5a",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-msms-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "813a0c70-msms-433d-8945-9cb166ae42af",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-msms-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "8d109134-msms-4c7b-84c5-dd1bf1e2391a",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-msms-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-msms-4088-82a9-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-msms-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-msms-40c6-ad61-e40dbe6a51ac",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-msms-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MilestoneType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilestoneType");

                    b.HasData(
                        new
                        {
                            Id = "aqwab9fe-msms-4088-82a9-d27008688mvk",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Scope : Product States",
                            TypeId = "lkkab9fe-msms-4088-82a9-d27008688lkk"
                        },
                        new
                        {
                            Id = "slaab9fe-msms-4088-82a9-d27008688kgd",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Scope : Product States(nl)",
                            TypeId = "lkkab9fe-msms-4088-82a9-d27008688lkk"
                        },
                        new
                        {
                            Id = "qwe9e479-msms-40c6-ad61-e40dbe6a5lks",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Finance : invoices and payments",
                            TypeId = "fg10e768-msms-po02-b337-ee367a82afff"
                        },
                        new
                        {
                            Id = "eew9e479-msms-40c6-ad61-e40dbe6a5111",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Finance : invoices and payments(nl)",
                            TypeId = "fg10e768-msms-po02-b337-ee367a82afff"
                        },
                        new
                        {
                            Id = "qqqab9fe-msms-4088-82a9-d27008688qqq",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Quality Activities",
                            TypeId = "oo10e768-msms-po02-b337-ee367a82adooo"
                        },
                        new
                        {
                            Id = "zzzab9fe-msms-4088-82a9-d27008688zzz",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Quality Activities(nl)",
                            TypeId = "oo10e768-msms-po02-b337-ee367a82adooo"
                        },
                        new
                        {
                            Id = "bnb9e479-msms-40c6-ad61-e40dbe6a5bnb",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Risk Assessments",
                            TypeId = "2210e768-msms-po02-b337-ee367a82ad22"
                        },
                        new
                        {
                            Id = "wer9e479-msms-40c6-ad61-e40dbe6a5wer",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "Risk Assessments(nl)",
                            TypeId = "2210e768-msms-po02-b337-ee367a82ad22"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.Organization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationTaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.OrganizationTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.OrganizationTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "vv5ab9fe-po57-4088-82a9-d27008688bbb",
                            DisplayOrder = 1,
                            IsChildren = false,
                            LanguageCode = "en",
                            LevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8kk",
                            Name = "Organization"
                        },
                        new
                        {
                            Id = "uud9e479-pob3-40c6-ad61-e40dbe6a5111",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "2210e768-3e06-po02-b337-ee367a82adjj",
                            Name = "CU"
                        },
                        new
                        {
                            Id = "gg5ab9fe-po57-4088-82a9-d27008688ttt",
                            DisplayOrder = 1,
                            IsChildren = false,
                            LanguageCode = "nl",
                            LevelId = "qq282458-0b40-poa3-b0f9-c2e40344c8kk",
                            Name = "Organization nl"
                        },
                        new
                        {
                            Id = "kkd9e479-pob3-40c6-ad61-e40dbe6a5444",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "2210e768-3e06-po02-b337-ee367a82adjj",
                            Name = "CU nl"
                        },
                        new
                        {
                            Id = "ttkab9fe-po57-4088-82a9-d27008688bbb",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "oo10e768-3e06-po02-b337-ee367a82admn",
                            Name = "BU"
                        },
                        new
                        {
                            Id = "eew9e479-pob3-40c6-ad61-e40dbe6a5111",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "oo10e768-3e06-po02-b337-ee367a82admn",
                            Name = "BU nl"
                        },
                        new
                        {
                            Id = "jvfkab9fe-po57-4088-82a9-d27008688jvf",
                            DisplayOrder = 4,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "1210e768-3e06-po02-b337-ee367a82ad12",
                            Name = "Department"
                        },
                        new
                        {
                            Id = "nbv9e479-pob3-40c6-ad61-e40dbe6a5nbv",
                            DisplayOrder = 4,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "1210e768-3e06-po02-b337-ee367a82ad12",
                            Name = "Department nl"
                        },
                        new
                        {
                            Id = "slaab9fe-po57-4088-82a9-d27008688kgd",
                            DisplayOrder = 5,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "fg10e768-3e06-po02-b337-ee367a82adfg",
                            Name = "Team"
                        },
                        new
                        {
                            Id = "qwe9e479-pob3-40c6-ad61-e40dbe6a5lks",
                            DisplayOrder = 5,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "fg10e768-3e06-po02-b337-ee367a82adfg",
                            Name = "Team nl"
                        },
                        new
                        {
                            Id = "aqwab9fe-po57-4088-82a9-d27008688mvk",
                            DisplayOrder = 6,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "we10e768-3e06-po02-b337-ee367a82adwe",
                            Name = "Person"
                        },
                        new
                        {
                            Id = "bds9e479-pob3-40c6-ad61-e40dbe6a5gtu",
                            DisplayOrder = 6,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "we10e768-3e06-po02-b337-ee367a82adwe",
                            Name = "Person nl"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.PmolLabourTeams", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PmolLabourTeams");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.PmolToolsPool", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PmolId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PmolToolsPool");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.TeamsWithPmol", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamsWithPmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.VpFilterDropdown", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VpFilterDropdown");

                    b.HasData(
                        new
                        {
                            Id = "aqwab9fe-po57-4088-82a9-d27008688mvk",
                            DisplayOrder = 1,
                            Label = "Project",
                            LanguageCode = "en",
                            Name = "Project",
                            TypeId = "5"
                        },
                        new
                        {
                            Id = "slaab9fe-po57-4088-82a9-d27008688kgd",
                            DisplayOrder = 1,
                            Label = "Project",
                            LanguageCode = "nl",
                            Name = "Project(nl)",
                            TypeId = "5"
                        },
                        new
                        {
                            Id = "qwe9e479-pob3-40c6-ad61-e40dbe6a5lks",
                            DisplayOrder = 2,
                            Label = "Last Week",
                            LanguageCode = "en",
                            Name = "Last Week",
                            TypeId = "1"
                        },
                        new
                        {
                            Id = "eew9e479-pob3-40c6-ad61-e40dbe6a5111",
                            DisplayOrder = 2,
                            Label = "Last Week",
                            LanguageCode = "nl",
                            Name = "Last Week(nl)",
                            TypeId = "1"
                        },
                        new
                        {
                            Id = "qqqab9fe-qq57-4088-82a9-d27008688qqq",
                            DisplayOrder = 3,
                            Label = "Current Week",
                            LanguageCode = "en",
                            Name = "Current Week",
                            TypeId = "2"
                        },
                        new
                        {
                            Id = "zzzab9fe-po57-4088-82a9-d27008688zzz",
                            DisplayOrder = 3,
                            Label = "Current Week",
                            LanguageCode = "nl",
                            Name = "Current Week(nl)",
                            TypeId = "2"
                        },
                        new
                        {
                            Id = "bnb9e479-pob3-40c6-ad61-e40dbe6a5bnb",
                            DisplayOrder = 4,
                            Label = "Last Month",
                            LanguageCode = "en",
                            Name = "Last Month",
                            TypeId = "3"
                        },
                        new
                        {
                            Id = "wer9e479-pob3-40c6-ad61-e40dbe6a5wer",
                            DisplayOrder = 4,
                            Label = "Last Month",
                            LanguageCode = "nl",
                            Name = "Last Month(nl)",
                            TypeId = "3"
                        },
                        new
                        {
                            Id = "jfdjjf79-pob3-40c6-ad61-e40dbehdhbfh",
                            DisplayOrder = 5,
                            Label = "Current Month",
                            LanguageCode = "en",
                            Name = "Current Month",
                            TypeId = "4"
                        },
                        new
                        {
                            Id = "ytisid79-pob3-40c6-ad61-e40dbejfsjjd",
                            DisplayOrder = 5,
                            Label = "Current Month",
                            LanguageCode = "nl",
                            Name = "Current Month(nl)",
                            TypeId = "4"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.VpWH", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPCId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VpWH");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFActivity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EffortCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffortEstimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExecutedDateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequiredDateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("WFActivity");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFActivityStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WFActivityStatus");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "in voorbereiding",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "In Development",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Pending Development",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 4,
                            LanguageCode = "nl",
                            Name = "goedgekeurd",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "ter goedkeuring",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "77143c60-ff45-4ca2-8723-213d2d1c5f5a",
                            DisplayOrder = 4,
                            LanguageCode = "en",
                            Name = "Approved",
                            StatusId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = "813a0c70-b58f-433d-8945-9cb166ae42af",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "In Review",
                            StatusId = "7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = "8d109134-ee8d-4c7b-84c5-dd1bf1e2391a",
                            DisplayOrder = 5,
                            LanguageCode = "en",
                            Name = "Handed Over",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "in uitvoering",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac",
                            DisplayOrder = 5,
                            LanguageCode = "nl",
                            Name = "afgewerkt en doorgegeven",
                            StatusId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFDestinationTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxonomyNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("WFDestinationTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFDocument", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WFHeaderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WFHeaderId");

                    b.ToTable("WFDocument");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffortCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffortEstimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExecutedDateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFinish")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFromCU")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequiredDateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WFHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("WFHistory");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFShortCutPane", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WFShortCutPane");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae1",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "All"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac2",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Good Picking",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae3",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Good Reception",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae4",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "All"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac5",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Versturen Goederen",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae6",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Ontvangst goederen",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFSourceTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaxonomyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxonomyNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlowId");

                    b.ToTable("WFSourceTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CPCItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOUId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickedQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockAvailability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFlowId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WFTask");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WFType");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Good Picking",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Good Reception",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-tyur-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Versturen Goederen ",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-wert-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Ontvangst goederen",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHHeader", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCIdVehicle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHoursFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningHoursTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WHTaxonomyId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WHTaxonomyId");

                    b.ToTable("WHHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WareHouseId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WareHouseId")
                        .IsUnique()
                        .HasFilter("[WareHouseId] IS NOT NULL");

                    b.ToTable("WHHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHShortCutPane", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WHShortCutPane");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae11",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "All"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac12",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Fixed"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae13",
                            DisplayOrder = 3,
                            LanguageCode = "en",
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae14",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "All"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac15",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Gebouw"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae16",
                            DisplayOrder = 3,
                            LanguageCode = "nl",
                            Name = "Bestelwagen"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WHStatus");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Open",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Closed",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Open",
                            StatusId = "d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Gesloten",
                            StatusId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WHTaxonomyLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WareHouseId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WHTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WHTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "098cf409-7cb8-4076-8ddf-657dd897f5bb",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "d60aad0b-2e84-482b-ad25-618d80d49477",
                            Name = "Warehouse"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-88ba-ce7fbf10e27c",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            Name = "Zone"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab2en",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "4010e768-3e06-4702-b337-ee367a82addb",
                            Name = "Block"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1cen",
                            DisplayOrder = 4,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "a35ab9fe-df57-4088-82a9-d27008688bae11",
                            Name = "Corridor"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab2nl",
                            DisplayOrder = 3,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "4010e768-3e06-4702-b337-ee367a82addb",
                            Name = "Blok"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1cnl",
                            DisplayOrder = 4,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "a35ab9fe-df57-4088-82a9-d27008688bae11",
                            Name = "Gang"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-9c13-f5fdca2ab276",
                            DisplayOrder = 5,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "60aad0b-2e84-482b-ad25-618d80d49488",
                            Name = "Rack"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-b65a-b7a93ebd1ccf",
                            DisplayOrder = 6,
                            IsChildren = true,
                            LanguageCode = "en",
                            LevelId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            Name = "Shelf"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-808d-d4e1400e1eed",
                            DisplayOrder = 7,
                            IsChildren = false,
                            LanguageCode = "en",
                            LevelId = "7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            Name = "Box"
                        },
                        new
                        {
                            Id = "098cf409-7cb8-4076-00nl-657dd897f5bb",
                            DisplayOrder = 1,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "d60aad0b-2e84-482b-ad25-618d80d49477",
                            Name = "Magazijn"
                        },
                        new
                        {
                            Id = "12e2d6c5-1ada-4e74-00nl-ce7fbf10e27c",
                            DisplayOrder = 2,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            Name = "Zone"
                        },
                        new
                        {
                            Id = "2732cd5a-0941-4c56-00nl-f5fdca2ab276",
                            DisplayOrder = 5,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "60aad0b-2e84-482b-ad25-618d80d49488",
                            Name = "Rek"
                        },
                        new
                        {
                            Id = "4e01a893-0267-48af-00nl-b7a93ebd1ccf",
                            DisplayOrder = 6,
                            IsChildren = true,
                            LanguageCode = "nl",
                            LevelId = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            Name = "Legplank"
                        },
                        new
                        {
                            Id = "5015743d-a2e6-4531-00nl-d4e1400e1eed",
                            DisplayOrder = 7,
                            IsChildren = false,
                            LanguageCode = "nl",
                            LevelId = "7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            Name = "Doos"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WHType");

                    b.HasData(
                        new
                        {
                            Id = "a35ab9fe-df57-4088-82a9-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "en",
                            Name = "Fixed",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ad61-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "en",
                            Name = "Mobile",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = "a35ab9fe-df57-4088-hgkf-d27008688bae",
                            DisplayOrder = 1,
                            LanguageCode = "nl",
                            Name = "Gebouw",
                            TypeId = "94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = "bdd9e479-75b3-40c6-ldmc-e40dbe6a51ac3",
                            DisplayOrder = 2,
                            LanguageCode = "nl",
                            Name = "Bestelwagen",
                            TypeId = "4010e768-3e06-4702-b337-ee367a82addb"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WorkflowState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkflowState");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            LocaleCode = "WorkflowState.csvHandedOver",
                            State = "Handed Over"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.Bor", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.Navigation("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorConsumable", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.Bor", "BorProduct")
                        .WithMany()
                        .HasForeignKey("BorProductId");

                    b.Navigation("BorProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorLabour", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.Bor", "BorProduct")
                        .WithMany()
                        .HasForeignKey("BorProductId");

                    b.Navigation("BorProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorMaterial", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.Bor", "BorProduct")
                        .WithMany()
                        .HasForeignKey("BorProductId");

                    b.Navigation("BorProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredConsumable", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.BorConsumable", "BorConsumable")
                        .WithMany()
                        .HasForeignKey("BorConsumableId");

                    b.Navigation("BorConsumable");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredLabour", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.BorLabour", "BorLabour")
                        .WithMany()
                        .HasForeignKey("BorLabourId");

                    b.Navigation("BorLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredMaterial", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.BorMaterial", "BorMaterial")
                        .WithMany()
                        .HasForeignKey("BorMaterialId");

                    b.Navigation("BorMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorRequiredTools", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.BorTools", "BorTools")
                        .WithMany()
                        .HasForeignKey("BorToolsId");

                    b.Navigation("BorTools");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.BOR.BorTools", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.Bor", "BorProduct")
                        .WithMany()
                        .HasForeignKey("BorProductId");

                    b.Navigation("BorProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabAddress", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompany", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabBankAccount", "CabBankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", null)
                        .WithMany("CompanyList")
                        .HasForeignKey("CabPersonId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabVat", "CabVat")
                        .WithMany()
                        .HasForeignKey("VatId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");

                    b.Navigation("Address");

                    b.Navigation("CabBankAccount");

                    b.Navigation("CabVat");

                    b.Navigation("Email");

                    b.Navigation("LandPhone");

                    b.Navigation("MobilePhone");

                    b.Navigation("Skype");

                    b.Navigation("WhatsApp");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ApplicationUser", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("ChangedByUser");

                    b.Navigation("Company");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "BusinessEmail")
                        .WithMany()
                        .HasForeignKey("BusinessEmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "BusinessPhone")
                        .WithMany()
                        .HasForeignKey("BusinessPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");

                    b.Navigation("Address");

                    b.Navigation("BusinessEmail");

                    b.Navigation("BusinessPhone");

                    b.Navigation("Email");

                    b.Navigation("LandPhone");

                    b.Navigation("MobilePhone");

                    b.Navigation("Skype");

                    b.Navigation("WhatsApp");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPersonCompany", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany("PersonCompanyList")
                        .HasForeignKey("PersonId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");

                    b.Navigation("Company");

                    b.Navigation("Email");

                    b.Navigation("LandPhone");

                    b.Navigation("MobilePhone");

                    b.Navigation("Person");

                    b.Navigation("Skype");

                    b.Navigation("WhatsApp");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", "CpcBasicUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("CpcBasicUnitOfMeasureId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBrand", "CpcBrand")
                        .WithMany()
                        .HasForeignKey("CpcBrandId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcMaterial", "CpcMaterial")
                        .WithMany()
                        .HasForeignKey("CpcMaterialId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcPressureClass", "CpcPressureClass")
                        .WithMany()
                        .HasForeignKey("CpcPressureClassId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcUnitOfSizeMeasure", "CpcUnitOfSizeMeasure")
                        .WithMany()
                        .HasForeignKey("CpcUnitOfSizeMeasureId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceFamily", "ResourceFamily")
                        .WithMany()
                        .HasForeignKey("ResourceFamilyId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceType", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId");

                    b.Navigation("CpcBasicUnitOfMeasure");

                    b.Navigation("CpcBrand");

                    b.Navigation("CpcMaterial");

                    b.Navigation("CpcPressureClass");

                    b.Navigation("CpcUnitOfSizeMeasure");

                    b.Navigation("ResourceFamily");

                    b.Navigation("ResourceType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasureLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", null)
                        .WithMany("CpcBasicUnitOfMeasureLocalizedData")
                        .HasForeignKey("CpcBasicUnitOfMeasureId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.Navigation("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcImage", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany("CpcImage")
                        .HasForeignKey("CoperateProductCatalogId");

                    b.Navigation("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterialLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcMaterial", null)
                        .WithMany("CpcMaterialLocalizedData")
                        .HasForeignKey("CpcMaterialId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamilyLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceFamily", null)
                        .WithMany("CpcResourceFamilyLocalizedData")
                        .HasForeignKey("CpcResourceFamilyId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceNickname", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany("CpcResourceNickname")
                        .HasForeignKey("CoperateProductCatalogId");

                    b.Navigation("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceTypeLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceType", null)
                        .WithMany("CpcResourceTypeLocalizedData")
                        .HasForeignKey("CpcResourceTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcVendor", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany("CpcVendor")
                        .HasForeignKey("CoperateProductCatalogId");

                    b.Navigation("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.INV.Invoice", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PS.PsHeader", "Ps")
                        .WithMany()
                        .HasForeignKey("PsId");

                    b.Navigation("Ps");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.INV.InvoiceHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.INV.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ConsumableForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.Navigation("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.LabourForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.Navigation("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.MaterialForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.Navigation("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsExperienceLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsExperience", "PbsExperience")
                        .WithMany()
                        .HasForeignKey("PbsExperienceId");

                    b.Navigation("PbsExperience");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsInstructionFamily", "PbsInstructionFamily")
                        .WithMany()
                        .HasForeignKey("PbsInstructionFamilyId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.Navigation("PbsInstructionFamily");

                    b.Navigation("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstructionLink", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsInstruction", null)
                        .WithMany("PbsInstructionLink")
                        .HasForeignKey("PbsInstructionId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProduct", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsQualityResponsibility", "PbsQualityResponsibility")
                        .WithMany()
                        .HasForeignKey("PbsQualityResponsibilityId");

                    b.Navigation("PbsQualityResponsibility");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductTaxonomy", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsTaxonomy", "PbsTaxonomy")
                        .WithMany()
                        .HasForeignKey("PbsTaxonomyId");

                    b.Navigation("PbsProduct");

                    b.Navigation("PbsTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQuality", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.Quality", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityId");

                    b.Navigation("PbsProduct");

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsRisk", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.Risk", "Risk")
                        .WithMany()
                        .HasForeignKey("RiskId");

                    b.Navigation("PbsProduct");

                    b.Navigation("Risk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillExperience", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsExperience", "PbsExperience")
                        .WithMany()
                        .HasForeignKey("PbsExperienceId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsSkill", "PbsSkill")
                        .WithMany()
                        .HasForeignKey("PbsSkillId");

                    b.Navigation("PbsExperience");

                    b.Navigation("PbsProduct");

                    b.Navigation("PbsSkill");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsSkill", "PbsSkill")
                        .WithMany()
                        .HasForeignKey("PbsSkillId");

                    b.Navigation("PbsSkill");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomyLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsTaxonomy", "PbsProductStatus")
                        .WithMany()
                        .HasForeignKey("PbsTaxonomyId");

                    b.Navigation("PbsProductStatus");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ToolsForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.Navigation("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PC.ProjectCost", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PC.ResourceTypePriceList", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.TAX.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.Pmol", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.BOR.Bor", "Bor")
                        .WithMany()
                        .HasForeignKey("BorId");

                    b.Navigation("Bor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolBreak", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolExtraWork", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolExtraWorkFiles", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.PmolExtraWork", "PmolExtraWork")
                        .WithMany()
                        .HasForeignKey("PmolExtraWorkId");

                    b.Navigation("PmolExtraWork");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolInstruction", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolInstructionLink", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.PmolInstruction", "PmolDocument")
                        .WithMany()
                        .HasForeignKey("PmolDocumentId");

                    b.Navigation("PmolDocument");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolJournal", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolJournalPicture", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.PmolJournal", "PmolJournal")
                        .WithMany()
                        .HasForeignKey("PmolJournalId");

                    b.Navigation("PmolJournal");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkConsumable", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkLabour", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkMaterial", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkTools", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolQuality", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.HasOne("UPrinceV4.Web.Data.Quality", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityId");

                    b.Navigation("Pmol");

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolRisk", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.HasOne("UPrinceV4.Web.Data.Risk", "Risk")
                        .WithMany()
                        .HasForeignKey("RiskId");

                    b.Navigation("Pmol");

                    b.Navigation("Risk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolStartHandshake", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolStopHandshake", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.Pmol", "Pmol")
                        .WithMany()
                        .HasForeignKey("PmolId");

                    b.Navigation("Pmol");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PMOL.PmolTeamRole", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PMOL.PmolPlannedWorkLabour", "PmolLabour")
                        .WithMany()
                        .HasForeignKey("PmolLabourId");

                    b.Navigation("PmolLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.PODocument", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PO.POHeader", "POHeader")
                        .WithMany("Document")
                        .HasForeignKey("POHeaderId");

                    b.Navigation("POHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POResources", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PO.POHeader", "POHeader")
                        .WithMany()
                        .HasForeignKey("PurchesOrderId");

                    b.Navigation("POHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectCostConversion", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinitionHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ApplicationUser", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.Navigation("ChangedByUser");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinance", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectFinance")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectFinance", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Currency");

                    b.Navigation("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.ApplicationUser", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectState", "ProjectState")
                        .WithMany()
                        .HasForeignKey("ProjectStateId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("ProjectDefinition");

                    b.Navigation("ProjectState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectKPI", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectKpi")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectKPI", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.BoundingPoint", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.Position", "BtmRightPoint")
                        .WithMany()
                        .HasForeignKey("BtmRightPointId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.Position", "TopLeftPoint")
                        .WithMany()
                        .HasForeignKey("TopLeftPointId");

                    b.Navigation("BtmRightPoint");

                    b.Navigation("TopLeftPoint");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.DataSources", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.Geometry", "Geometry")
                        .WithMany()
                        .HasForeignKey("GeometryId");

                    b.Navigation("Geometry");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectLocationDetails.MapLocation", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.BoundingPoint", "BoundingBox")
                        .WithMany()
                        .HasForeignKey("BoundingBoxId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.DataSources", "DataSources")
                        .WithMany()
                        .HasForeignKey("DataSourcesId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectLocationDetails.BoundingPoint", "Viewport")
                        .WithMany()
                        .HasForeignKey("ViewportId");

                    b.Navigation("Address");

                    b.Navigation("BoundingBox");

                    b.Navigation("DataSources");

                    b.Navigation("Position");

                    b.Navigation("Viewport");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectStateLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectState", null)
                        .WithMany("ProjectStateLocalizedData")
                        .HasForeignKey("ProjectStateId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeam", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "ContractingUnit")
                        .WithMany()
                        .HasForeignKey("ContractingUnitId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("ContractingUnit");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeamRole", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "CabPerson")
                        .WithMany()
                        .HasForeignKey("CabPersonId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectTeam", "ProjectTeam")
                        .WithMany()
                        .HasForeignKey("ProjectTeamId");

                    b.Navigation("CabPerson");

                    b.Navigation("ProjectTeam");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTime", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CalendarTemplate", "CalendarTemplate")
                        .WithMany()
                        .HasForeignKey("CalendarTemplateId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectTime")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectTime", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("CalendarTemplate");

                    b.Navigation("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectUserRole", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectDefinitionId");

                    b.Navigation("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectUserRoleFeature", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectFeature", "ProjectFeature")
                        .WithMany()
                        .HasForeignKey("ProjectFeatureId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectUserRole", "ProjectUserRole")
                        .WithMany()
                        .HasForeignKey("ProjectUserRoleId");

                    b.Navigation("ProjectFeature");

                    b.Navigation("ProjectUserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsCustomer", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PS.PsHeader", "PsHeader")
                        .WithMany()
                        .HasForeignKey("PsId");

                    b.Navigation("PsHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PS.PsHeader", "PsHeader")
                        .WithMany()
                        .HasForeignKey("PsHeaderId");

                    b.Navigation("PsHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PS.PsResource", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceType", "CpcResourceType")
                        .WithMany()
                        .HasForeignKey("CpcResourceTypeId");

                    b.HasOne("UPrinceV4.Web.Data.PC.ProjectCost", "ProjectCost")
                        .WithMany()
                        .HasForeignKey("ProjectCostId");

                    b.HasOne("UPrinceV4.Web.Data.PS.PsHeader", "PsHeader")
                        .WithMany()
                        .HasForeignKey("PsId");

                    b.Navigation("CpcResourceType");

                    b.Navigation("ProjectCost");

                    b.Navigation("PsHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QRCode", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.TimeClockActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("VehicleNo");

                    b.Navigation("ActivityType");

                    b.Navigation("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QrHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.QRCode", "QRCode")
                        .WithMany()
                        .HasForeignKey("QRCodeId");

                    b.Navigation("QRCode");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Quality", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectDefinitionId");

                    b.Navigation("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Risk", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.RiskStatus", "RiskStatus")
                        .WithMany()
                        .HasForeignKey("RiskStatusId");

                    b.HasOne("UPrinceV4.Web.Data.RiskType", "RiskType")
                        .WithMany()
                        .HasForeignKey("RiskTypeId");

                    b.Navigation("RiskStatus");

                    b.Navigation("RiskType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WorkflowState", "WorkflowState")
                        .WithMany()
                        .HasForeignKey("WorkflowStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Stock.StockHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Stock.StockHeader", "StockHeader")
                        .WithMany()
                        .HasForeignKey("StockId");

                    b.Navigation("StockHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClock", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("UPrinceV4.Web.Data.QRCode", "QRCode")
                        .WithMany()
                        .HasForeignKey("QRCodeId");

                    b.HasOne("UPrinceV4.Web.Data.Shift", "Shift")
                        .WithMany("TimeClocks")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Location");

                    b.Navigation("QRCode");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Translations.WebTranslation", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Translations.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.UserRole", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ApplicationUser", null)
                        .WithMany("UserRole")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.VpPo", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.VisualPlaane.VpPo", null)
                        .WithMany("Children")
                        .HasForeignKey("VpPoId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlan.MilestoneDocuments", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.VisualPlan.MilestoneHeader", "MilestoneHeader")
                        .WithMany()
                        .HasForeignKey("MilestoneHeaderId");

                    b.Navigation("MilestoneHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFActivity", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WF.WFHeader", "WFHeader")
                        .WithMany()
                        .HasForeignKey("WorkFlowId");

                    b.Navigation("WFHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFDestinationTaxonomy", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WF.WFHeader", "WFHeader")
                        .WithMany()
                        .HasForeignKey("WorkFlowId");

                    b.Navigation("WFHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFDocument", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WF.WFHeader", "WFHeader")
                        .WithMany()
                        .HasForeignKey("WFHeaderId");

                    b.Navigation("WFHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WF.WFHeader", "WFHeader")
                        .WithMany()
                        .HasForeignKey("WorkFlowId");

                    b.Navigation("WFHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WF.WFSourceTaxonomy", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WF.WFHeader", "WFHeader")
                        .WithMany()
                        .HasForeignKey("WorkFlowId");

                    b.Navigation("WFHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHHeader", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WH.WHTaxonomy", "WHTaxonomy")
                        .WithMany()
                        .HasForeignKey("WHTaxonomyId");

                    b.Navigation("WHTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.WH.WHHeader", "WHHeader")
                        .WithOne("WHHistory")
                        .HasForeignKey("UPrinceV4.Web.Data.WH.WHHistoryLog", "WareHouseId");

                    b.Navigation("WHHeader");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ApplicationUser", b =>
                {
                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.Navigation("CompanyList");

                    b.Navigation("PersonCompanyList");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", b =>
                {
                    b.Navigation("CpcImage");

                    b.Navigation("CpcResourceNickname");

                    b.Navigation("CpcVendor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", b =>
                {
                    b.Navigation("CpcBasicUnitOfMeasureLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterial", b =>
                {
                    b.Navigation("CpcMaterialLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamily", b =>
                {
                    b.Navigation("CpcResourceFamilyLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceType", b =>
                {
                    b.Navigation("CpcResourceTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.Navigation("PbsInstructionLink");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PO.POHeader", b =>
                {
                    b.Navigation("Document");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinition", b =>
                {
                    b.Navigation("ProjectFinance");

                    b.Navigation("ProjectKpi");

                    b.Navigation("ProjectTime");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectState", b =>
                {
                    b.Navigation("ProjectStateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.Navigation("TimeClocks");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.VisualPlaane.VpPo", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WH.WHHeader", b =>
                {
                    b.Navigation("WHHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
