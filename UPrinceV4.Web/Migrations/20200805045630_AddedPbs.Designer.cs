// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UPrinceV4.Web.Data;

namespace UPrinceV4.Web.Migrations
{
    [DbContext(typeof(UPrinceV4Context))]
    [Migration("20200805045630_AddedPbs")]
    partial class AddedPbs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UPrinceV4.Web.Data.AppConfigurationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsConfigured")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppConfigurationData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabAddress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MailBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CabAddress");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabBankAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabBankAccount");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CabPersonId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("VatId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabCompany");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabEmail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.ToTable("CabEmail");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.ToTable("CabHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabLandPhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LandPhoneNumber")
                        .IsUnique()
                        .HasFilter("[LandPhoneNumber] IS NOT NULL");

                    b.ToTable("CabLandPhone");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabMobilePhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobilePhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MobilePhoneNumber")
                        .IsUnique()
                        .HasFilter("[MobilePhoneNumber] IS NOT NULL");

                    b.ToTable("CabMobilePhone");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessEmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CallName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BusinessEmailId");

                    b.HasIndex("BusinessPhoneId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabPerson");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPersonCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("JobRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabPersonCompany");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabSkype", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SkypeNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkypeNumber")
                        .IsUnique()
                        .HasFilter("[SkypeNumber] IS NOT NULL");

                    b.ToTable("CabSkype");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabVat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabVat");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabWhatsApp", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WhatsAppNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WhatsAppNumber")
                        .IsUnique()
                        .HasFilter("[WhatsAppNumber] IS NOT NULL");

                    b.ToTable("CabWhatsApp");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcBasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcMaterialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcPressureClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcUnitOfSizeMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("InventoryPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxOrderQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("MinOrderQuantity")
                        .HasColumnType("float");

                    b.Property<string>("ResourceFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("WallThickness")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CpcBasicUnitOfMeasureId");

                    b.HasIndex("CpcMaterialId");

                    b.HasIndex("CpcPressureClassId");

                    b.HasIndex("CpcUnitOfSizeMeasureId");

                    b.HasIndex("ResourceFamilyId");

                    b.HasIndex("ResourceNumber")
                        .IsUnique()
                        .HasFilter("[ResourceNumber] IS NOT NULL");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("CoperateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcBasicUnitOfMeasure");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcImage");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcPressureClass", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcPressureClass");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamily", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcResourceFamily");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceNickname", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcResourceNickname");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcResourceType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcUnitOfSizeMeasure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcUnitOfSizeMeasure");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcVendor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxOrderQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("MinOrderQuantity")
                        .HasColumnType("float");

                    b.Property<bool>("PreferredParty")
                        .HasColumnType("bit");

                    b.Property<string>("PurchasingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceLeadTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResourcePrice")
                        .HasColumnType("float");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RoundingValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcVendor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CalendarTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalendarTemplate");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryName")
                        .IsUnique()
                        .HasFilter("[CountryName] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ErrorMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorMessage");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LastSeenProjectDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ViewTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LastSeenProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LocaleName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LocalizedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<double>("Heading")
                        .HasColumnType("float");

                    b.Property<double>("HorizontalAccuracy")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<double>("VerticleAccuracy")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ConsumableForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsConsumableForPbs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.LabourForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsLabourForPbs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.MaterialForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsMaterialForPbs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsExperience");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsInstruction");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductItemTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductToleranceStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDerivation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductFormatPresentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductItemTypeId");

                    b.HasIndex("PbsProductStatusId");

                    b.HasIndex("PbsProductToleranceStatusId");

                    b.ToTable("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductItemType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductItemType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductStatus");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductToleranceStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductToleranceStatus");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PPbsExperienceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsSkillsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PPbsExperienceId");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("PbsSkillsId");

                    b.ToTable("PbsSkillExperience");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkills", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsSkills");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ToolsForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("ToolsForPbs");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagementLevelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectTemplateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectToleranceStateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagementLevelId");

                    b.HasIndex("ProjectTemplateId");

                    b.HasIndex("ProjectToleranceStateId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("SequenceCode")
                        .IsUnique()
                        .HasFilter("[SequenceCode] IS NOT NULL");

                    b.ToTable("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinitionHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.ToTable("ProjectDefinitionHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("BudgetLabour")
                        .HasColumnType("float");

                    b.Property<double?>("BudgetMaterial")
                        .HasColumnType("float");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalBudget")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectFinance");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectStateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectStateId");

                    b.ToTable("ProjectHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectKPI", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomLabelOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomLabelThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomLabelTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CustomPropOne")
                        .HasColumnType("float");

                    b.Property<double?>("CustomPropThree")
                        .HasColumnType("float");

                    b.Property<double?>("CustomPropTwo")
                        .HasColumnType("float");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectKPI");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectManagementLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListingOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectManagementLevel");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractingUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEngineerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectManagerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectOwnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectEngineerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("ProjectOwnerId");

                    b.ToTable("ProjectTeam");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTemplate");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CalendarTemplateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CalendarTemplateId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectTime");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectToleranceState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListingOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectToleranceState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QRCode", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("QRCode");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WorkflowStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkflowStateId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShiftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("QRCodeId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeClock");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClockActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeClockActivityType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllUsers");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WorkflowState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkflowState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabAddress", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompany", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabBankAccount", "CabBankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", null)
                        .WithMany("CompanyList")
                        .HasForeignKey("CabPersonId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabVat", "CabVat")
                        .WithMany()
                        .HasForeignKey("VatId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "BusinessEmail")
                        .WithMany()
                        .HasForeignKey("BusinessEmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "BusinessPhone")
                        .WithMany()
                        .HasForeignKey("BusinessPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPersonCompany", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany("PersonCompanyList")
                        .HasForeignKey("PersonId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", "CpcBasicUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("CpcBasicUnitOfMeasureId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcMaterial", "CpcMaterial")
                        .WithMany()
                        .HasForeignKey("CpcMaterialId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcPressureClass", "CpcPressureClass")
                        .WithMany()
                        .HasForeignKey("CpcPressureClassId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcUnitOfSizeMeasure", "CpcUnitOfSizeMeasure")
                        .WithMany()
                        .HasForeignKey("CpcUnitOfSizeMeasureId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceFamily", "ResourceFamily")
                        .WithMany()
                        .HasForeignKey("ResourceFamilyId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceType", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcImage", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany("CpcImage")
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceNickname", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CooperateProductCatalog")
                        .WithMany("CpcResourceNickname")
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcVendor", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany("CpcVendor")
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ConsumableForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.LabourForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.MaterialForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProduct", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProductItemType", "PbsProductItemType")
                        .WithMany()
                        .HasForeignKey("PbsProductItemTypeId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProductStatus", "PbsProductStatus")
                        .WithMany()
                        .HasForeignKey("PbsProductStatusId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProductToleranceStatus", "PbsProductToleranceStatus")
                        .WithMany()
                        .HasForeignKey("PbsProductToleranceStatusId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillExperience", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsExperience", "PbsExperience")
                        .WithMany()
                        .HasForeignKey("PPbsExperienceId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsSkills", "PbsSkill")
                        .WithMany()
                        .HasForeignKey("PbsSkillsId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ToolsForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CoperateProductCatalog", "CoperateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinition", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectManagementLevel", "ProjectManagementLevel")
                        .WithMany()
                        .HasForeignKey("ProjectManagementLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.ProjectTemplate", "ProjectTemplate")
                        .WithMany()
                        .HasForeignKey("ProjectTemplateId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectToleranceState", "ProjectToleranceState")
                        .WithMany()
                        .HasForeignKey("ProjectToleranceStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinitionHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinance", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectFinance")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectFinance", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectState", "ProjectState")
                        .WithMany()
                        .HasForeignKey("ProjectStateId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectKPI", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectKpi")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectKPI", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeam", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ProjectEngineer")
                        .WithMany()
                        .HasForeignKey("ProjectEngineerId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.Users", "ProjectOwner")
                        .WithMany()
                        .HasForeignKey("ProjectOwnerId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTime", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CalendarTemplate", "CalendarTemplate")
                        .WithMany()
                        .HasForeignKey("CalendarTemplateId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectTime")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectTime", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QRCode", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.TimeClockActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("UPrinceV4.Web.Data.WorkflowState", "WorkflowState")
                        .WithMany()
                        .HasForeignKey("WorkflowStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClock", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("UPrinceV4.Web.Data.QRCode", "QRCode")
                        .WithMany()
                        .HasForeignKey("QRCodeId");

                    b.HasOne("UPrinceV4.Web.Data.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.UserRole", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Roles", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
