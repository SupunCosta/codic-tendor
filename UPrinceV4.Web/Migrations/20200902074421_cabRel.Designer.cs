// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UPrinceV4.Web.Data;

namespace UPrinceV4.Web.Migrations
{
    [DbContext(typeof(UPrinceV4Context))]
    [Migration("20200902074421_cabRel")]
    partial class cabRel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UPrinceV4.Web.Data.AppConfigurationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsConfigured")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppConfigurationData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabAddress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MailBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CabAddress");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabBankAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabBankAccount");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("VatId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabCompany");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabEmail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasFilter("[EmailAddress] IS NOT NULL");

                    b.ToTable("CabEmail");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.ToTable("CabHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabLandPhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LandPhoneNumber")
                        .IsUnique()
                        .HasFilter("[LandPhoneNumber] IS NOT NULL");

                    b.ToTable("CabLandPhone");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabMobilePhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobilePhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MobilePhoneNumber")
                        .IsUnique()
                        .HasFilter("[MobilePhoneNumber] IS NOT NULL");

                    b.ToTable("CabMobilePhone");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessEmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CallName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BusinessEmailId");

                    b.HasIndex("BusinessPhoneId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabPerson");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPersonCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("JobRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MobilePhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SkypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WhatsAppId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmailId");

                    b.HasIndex("LandPhoneId");

                    b.HasIndex("MobilePhoneId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SkypeId");

                    b.HasIndex("WhatsAppId");

                    b.ToTable("CabPersonCompany");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabSkype", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SkypeNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SkypeNumber")
                        .IsUnique()
                        .HasFilter("[SkypeNumber] IS NOT NULL");

                    b.ToTable("CabSkype");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabVat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CabVat");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabWhatsApp", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WhatsAppNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WhatsAppNumber")
                        .IsUnique()
                        .HasFilter("[WhatsAppNumber] IS NOT NULL");

                    b.ToTable("CabWhatsApp");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcBasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcBrandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcMaterialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcPressureClassId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcUnitOfSizeMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("InventoryPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxOrderQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("MinOrderQuantity")
                        .HasColumnType("float");

                    b.Property<string>("ResourceFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("WallThickness")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CpcBasicUnitOfMeasureId");

                    b.HasIndex("CpcBrandId");

                    b.HasIndex("CpcMaterialId");

                    b.HasIndex("CpcPressureClassId");

                    b.HasIndex("CpcUnitOfSizeMeasureId");

                    b.HasIndex("ResourceFamilyId");

                    b.HasIndex("ResourceNumber")
                        .IsUnique()
                        .HasFilter("[ResourceNumber] IS NOT NULL");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("CorporateProductCatalog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcBasicUnitOfMeasure");

                    b.HasData(
                        new
                        {
                            Id = "3ba6dc81-dcdf-4749-b13f-482cvsje75262",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "m"
                        },
                        new
                        {
                            Id = "b48dkcn3-dcdf-cdfg-b13f-482cvsje75262",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "(stuk)"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasureLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpcBasicUnitOfMeasureId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcBasicUnitOfMeasureId");

                    b.ToTable("CpcBasicUnitOfMeasureLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBrand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcBrand");

                    b.HasData(
                        new
                        {
                            Id = "013f0f14-2675-41e5-8219-ff91c9d2c688",
                            LocaleCode = "",
                            Name = "Geberit"
                        },
                        new
                        {
                            Id = "141f28dd-6fea-4d76-a07c-7e7c65d52a3b",
                            LocaleCode = "",
                            Name = "Mepla"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcImage");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcMaterial");

                    b.HasData(
                        new
                        {
                            Id = "123d2354a-8d13-4041-b756-d25f1bc0e890",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "PVC"
                        },
                        new
                        {
                            Id = "123d2354a-8d13-4041-b756-d25f1bc0e444",
                            DisplayOrder = 0,
                            LocaleCode = "",
                            Name = "PVC-U1"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterialLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcMaterialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcMaterialId");

                    b.ToTable("CpcMaterialLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcPressureClass", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcPressureClass");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamily", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcResourceFamily");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamilyLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcResourceFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceFamilyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcResourceFamilyId");

                    b.ToTable("CpcResourceFamilyLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceNickname", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcResourceNickname");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcResourceType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceTypeLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpcResourceTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpcResourceTypeId");

                    b.ToTable("CpcResourceTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcUnitOfSizeMeasure", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CpcUnitOfSizeMeasure");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcVendor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxOrderQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("MinOrderQuantity")
                        .HasColumnType("float");

                    b.Property<bool>("PreferredParty")
                        .HasColumnType("bit");

                    b.Property<string>("PurchasingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceLeadTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResourcePrice")
                        .HasColumnType("float");

                    b.Property<string>("ResourceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RoundingValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CoperateProductCatalogId");

                    b.ToTable("CpcVendor");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CalendarTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalendarTemplate");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryName")
                        .IsUnique()
                        .HasFilter("[CountryName] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ErrorMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorMessage");

                    b.HasData(
                        new
                        {
                            Id = "NoProjectBreakdownStructureAvailable",
                            LocaleCode = "NoProjectBreakdownStructureAvailable",
                            Message = "No available project breakdown structure"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LastSeenProjectDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ViewTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LastSeenProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LocaleName", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.LocalizedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalizedData");

                    b.HasData(
                        new
                        {
                            Id = 1315,
                            Label = "No available project breakdown structure (es)",
                            LanguageCode = "es",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1316,
                            Label = "No available project breakdown structure (nl)",
                            LanguageCode = "nl",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1317,
                            Label = "No available project breakdown structure (nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1632,
                            Label = "No available project breakdown structure (zh)",
                            LanguageCode = "zh",
                            LocaleCode = "NoProjectBreakdownStructureAvailable"
                        },
                        new
                        {
                            Id = 1633,
                            Label = "External Products(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1634,
                            Label = "External Products(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1635,
                            Label = "External Products(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1636,
                            Label = "External Products(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14"
                        },
                        new
                        {
                            Id = 1637,
                            Label = "Internal Products(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1638,
                            Label = "Internal Products(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1639,
                            Label = "Internal Products(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1640,
                            Label = "Internal Products(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da"
                        },
                        new
                        {
                            Id = 1641,
                            Label = "Pending Development(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1643,
                            Label = "Pending Development(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1644,
                            Label = "Pending Development(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1645,
                            Label = "Pending Development(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477"
                        },
                        new
                        {
                            Id = 1646,
                            Label = "In Development(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1647,
                            Label = "In Development(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1648,
                            Label = "In Development(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1649,
                            Label = "In Development(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1"
                        },
                        new
                        {
                            Id = 1650,
                            Label = "In Review(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1651,
                            Label = "In Review(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1652,
                            Label = "In Review(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1653,
                            Label = "In Review(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c"
                        },
                        new
                        {
                            Id = 1654,
                            Label = "Approved(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1655,
                            Label = "Approved(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1656,
                            Label = "Approved(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1657,
                            Label = "Approved(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da"
                        },
                        new
                        {
                            Id = 1658,
                            Label = "Handed Over(es)",
                            LanguageCode = "es",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1659,
                            Label = "Handed Over(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1660,
                            Label = "Handed Over(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1661,
                            Label = "Handed Over(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb"
                        },
                        new
                        {
                            Id = 1704,
                            Label = "In Scope(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "scope.inscope"
                        },
                        new
                        {
                            Id = 1705,
                            Label = "In Scope(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "scope.inscope"
                        },
                        new
                        {
                            Id = 1706,
                            Label = "In Scope(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "scope.inscope"
                        },
                        new
                        {
                            Id = 1707,
                            Label = "Out of Scope(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "scope.outofscope"
                        },
                        new
                        {
                            Id = 1708,
                            Label = "Out of Scope(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "scope.outofscope"
                        },
                        new
                        {
                            Id = 1709,
                            Label = "Out of Scope(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "scope.outofscope"
                        },
                        new
                        {
                            Id = 1662,
                            Label = "Newbie(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceNewbie"
                        },
                        new
                        {
                            Id = 1663,
                            Label = "Novice(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceNovice"
                        },
                        new
                        {
                            Id = 1664,
                            Label = "Rookie(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceRookie"
                        },
                        new
                        {
                            Id = 1665,
                            Label = "Beginner(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceBeginner"
                        },
                        new
                        {
                            Id = 1666,
                            Label = "Talented(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceTalented"
                        },
                        new
                        {
                            Id = 1667,
                            Label = "Skilled(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSkilled"
                        },
                        new
                        {
                            Id = 1668,
                            Label = "Intermediate(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceIntermediate"
                        },
                        new
                        {
                            Id = 1669,
                            Label = "Skilful(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSkilful"
                        },
                        new
                        {
                            Id = 1670,
                            Label = "Seasoned(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSeasoned"
                        },
                        new
                        {
                            Id = 1671,
                            Label = "Proficient(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceProficient"
                        },
                        new
                        {
                            Id = 1672,
                            Label = "Experienced(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceExperienced"
                        },
                        new
                        {
                            Id = 1673,
                            Label = "Advanced(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceAdvanced"
                        },
                        new
                        {
                            Id = 1674,
                            Label = "Senior(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceSenior"
                        },
                        new
                        {
                            Id = 1675,
                            Label = "Expert(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsExperienceExpert"
                        },
                        new
                        {
                            Id = 1676,
                            Label = "Team Building Skills(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillTeam Building Skills"
                        },
                        new
                        {
                            Id = 1677,
                            Label = "Collaboration(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillCollaboration"
                        },
                        new
                        {
                            Id = 1678,
                            Label = "Communication(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillCommunication"
                        },
                        new
                        {
                            Id = 1679,
                            Label = "Flexibility(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillFlexibility"
                        },
                        new
                        {
                            Id = 1680,
                            Label = "Listening(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillListening"
                        },
                        new
                        {
                            Id = 1681,
                            Label = "Analytical Skills(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillAnalytical Skills"
                        },
                        new
                        {
                            Id = 1682,
                            Label = "Critical thinking(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillCritical thinking"
                        },
                        new
                        {
                            Id = 1683,
                            Label = "Data analysis(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillData analysis"
                        },
                        new
                        {
                            Id = 1684,
                            Label = "Numeracy(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillNumeracy"
                        },
                        new
                        {
                            Id = 1685,
                            Label = "Reporting(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsSkillReporting"
                        },
                        new
                        {
                            Id = 1690,
                            Label = "Utility(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomy.Utility"
                        },
                        new
                        {
                            Id = 1691,
                            Label = "Location(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomy.Location"
                        },
                        new
                        {
                            Id = 1692,
                            Label = "Scope(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomy.Scope"
                        },
                        new
                        {
                            Id = 1693,
                            Label = "Utility(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomy.Utility"
                        },
                        new
                        {
                            Id = 1694,
                            Label = "Location(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomy.Location"
                        },
                        new
                        {
                            Id = 1695,
                            Label = "Scope(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomy.Scope"
                        },
                        new
                        {
                            Id = 1696,
                            Label = "Utility(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomy.Utility"
                        },
                        new
                        {
                            Id = 1697,
                            Label = "Location(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomy.Location"
                        },
                        new
                        {
                            Id = 1698,
                            Label = "Scope(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomy.Scope"
                        },
                        new
                        {
                            Id = 1686,
                            Label = "Family 01(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilyTechnical instructions"
                        },
                        new
                        {
                            Id = 1687,
                            Label = "Family 02(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilySafety instructions"
                        },
                        new
                        {
                            Id = 1688,
                            Label = "Family 03(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilyEnvironmental instructions"
                        },
                        new
                        {
                            Id = 1689,
                            Label = "Family 04(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsInstructionFamilyHealth instructions"
                        },
                        new
                        {
                            Id = 1700,
                            Label = "Threat(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "4dba0e61-15f8-47a9-8fcd-0ced2e2ce210"
                        },
                        new
                        {
                            Id = 1701,
                            Label = "Opportunity(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "ac9f4655-f14c-43c7-8e4a-5390bfdc16d0"
                        },
                        new
                        {
                            Id = 1702,
                            Label = "Active(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "00b0a1c6-e5c8-4143-90f1-7dec0b0397ae"
                        },
                        new
                        {
                            Id = 1703,
                            Label = "Closed(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "8b0d0513-6111-466f-86c8-b26278c3c4f7"
                        },
                        new
                        {
                            Id = 1710,
                            Label = "Product(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product"
                        },
                        new
                        {
                            Id = 1711,
                            Label = "Product(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product"
                        },
                        new
                        {
                            Id = 1712,
                            Label = "Product(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product"
                        },
                        new
                        {
                            Id = 1713,
                            Label = "Separation(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation"
                        },
                        new
                        {
                            Id = 1714,
                            Label = "Separation(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation"
                        },
                        new
                        {
                            Id = 1715,
                            Label = "Separation(zh)",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation"
                        },
                        new
                        {
                            Id = 1716,
                            Label = "Traject Part(nl)",
                            LanguageCode = "nl",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart"
                        },
                        new
                        {
                            Id = 1717,
                            Label = "Traject Part(nl-BE)",
                            LanguageCode = "nl-BE",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart"
                        },
                        new
                        {
                            Id = 1718,
                            Label = "Traject Part()",
                            LanguageCode = "zh",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Location", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Altitude")
                        .HasColumnType("float");

                    b.Property<double>("Heading")
                        .HasColumnType("float");

                    b.Property<double>("HorizontalAccuracy")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<double>("VerticleAccuracy")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thread")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ConsumableForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsConsumable");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.LabourForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsLabour");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.MaterialForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsMaterial");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsExperience");

                    b.HasData(
                        new
                        {
                            Id = "49c32125-f8c2-498b-83a7-48c4a8d112f1",
                            LocaleCode = "PbsExperienceNewbie",
                            Name = "Newbie"
                        },
                        new
                        {
                            Id = "46e02a0c-4c87-437b-8342-b16c2fa6cf45",
                            LocaleCode = "PbsExperienceNovice",
                            Name = "Novice"
                        },
                        new
                        {
                            Id = "1a56fb81-8308-4f72-97c7-32bb0692d297",
                            LocaleCode = "PbsExperienceRookie",
                            Name = "Rookie"
                        },
                        new
                        {
                            Id = "e2ce864c-564c-49a4-8860-b79dbbffb673",
                            LocaleCode = "PbsExperienceBeginner",
                            Name = "Beginner"
                        },
                        new
                        {
                            Id = "c98e47d8-6b1f-4bee-97a1-fd1207e3670d",
                            LocaleCode = "PbsExperienceTalented",
                            Name = "Talented"
                        },
                        new
                        {
                            Id = "2c945d24-3937-47c6-a793-d82f6b53d0c7",
                            LocaleCode = "PbsExperienceSkilled",
                            Name = "Skilled"
                        },
                        new
                        {
                            Id = "3417e806-8e97-46d3-adb6-34426cd93bf4",
                            LocaleCode = "PbsExperienceIntermediate",
                            Name = "Intermediate"
                        },
                        new
                        {
                            Id = "b08b0641-e260-4750-8141-3cd8c25f6344",
                            LocaleCode = "PbsExperienceSkilful",
                            Name = "Skilful"
                        },
                        new
                        {
                            Id = "ea27ee00-8b38-48b6-8cc7-6872dc3cf09c",
                            LocaleCode = "PbsExperienceSeasoned",
                            Name = "Seasoned"
                        },
                        new
                        {
                            Id = "df186961-6453-4c42-af53-c8866684a075",
                            LocaleCode = "PbsExperienceProficient",
                            Name = "Proficient"
                        },
                        new
                        {
                            Id = "ee146eff-0f1f-44b1-a6ba-73b267416973",
                            LocaleCode = "PbsExperienceExperienced",
                            Name = "Experienced"
                        },
                        new
                        {
                            Id = "42325533-9834-4fd8-ac51-5b4e02fc0494",
                            LocaleCode = "PbsExperienceAdvanced",
                            Name = "Advanced"
                        },
                        new
                        {
                            Id = "cec1293c-7f89-48ed-865c-65cc7cbe526f",
                            LocaleCode = "PbsExperienceSenior",
                            Name = "Senior"
                        },
                        new
                        {
                            Id = "8c4bd8eb-f087-4904-8507-0f494dcf7d86",
                            LocaleCode = "PbsExperienceExpert",
                            Name = "Expert"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.ToTable("PbsHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InstructionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionsDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsInstructionFamilyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsInstructionFamilyId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsInstruction");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstructionFamily", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsInstructionFamily");

                    b.HasData(
                        new
                        {
                            Id = "26f71a21-b062-4fc8-b47a-f50038e71fe1",
                            Family = "Family 01",
                            LocaleCode = "PbsInstructionFamilyTechnical instructions"
                        },
                        new
                        {
                            Id = "fc925493-c443-437d-a367-b88e81941aaa",
                            Family = "Family 02",
                            LocaleCode = "PbsInstructionFamilySafety instructions"
                        },
                        new
                        {
                            Id = "48ec5849-1daf-425c-8fcf-fb0dd9748b8c",
                            Family = "Family 03",
                            LocaleCode = "PbsInstructionFamilyEnvironmental instructions"
                        },
                        new
                        {
                            Id = "e286e905-c157-4d19-ac7c-55550df0ee9a",
                            Family = "Family 04",
                            LocaleCode = "PbsInstructionFamilyHealth instructions"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstructionLink", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsInstructionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsInstructionId");

                    b.ToTable("PbsInstructionLink");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductItemTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsQualityResponsibilityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsToleranceStateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDerivation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductFormatPresentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductItemTypeId");

                    b.HasIndex("PbsProductStatusId");

                    b.HasIndex("PbsQualityResponsibilityId");

                    b.HasIndex("PbsToleranceStateId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PbsProduct");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductItemType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductItemType");

                    b.HasData(
                        new
                        {
                            Id = "48a7dd9c-55ac-4e7c-a2f3-653811c0eb14",
                            LocaleCode = "PbsProductItemType.48a7dd9c-55ac-4e7c-a2f3-653811c0eb14",
                            Name = "External Products"
                        },
                        new
                        {
                            Id = "aa0c8e3c-f716-4f92-afee-851d485164da",
                            LocaleCode = "PbsProductItemType.aa0c8e3c-f716-4f92-afee-851d485164da",
                            Name = "Internal Products"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsProductStatus");

                    b.HasData(
                        new
                        {
                            Id = "d60aad0b-2e84-482b-ad25-618d80d49477",
                            DisplayOrder = 1,
                            LocaleCode = "PbsProductStatus.d60aad0b-2e84-482b-ad25-618d80d49477",
                            Name = "Pending Development"
                        },
                        new
                        {
                            Id = "94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            DisplayOrder = 2,
                            LocaleCode = "PbsProductStatus.94282458-0b40-40a3-b0f9-c2e40344c8f1",
                            Name = "In Development"
                        },
                        new
                        {
                            Id = "7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            DisplayOrder = 3,
                            LocaleCode = "PbsProductStatus.7143ff01-d173-4a20-8c17-cacdfecdb84c",
                            Name = "In Review"
                        },
                        new
                        {
                            Id = "7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            DisplayOrder = 4,
                            LocaleCode = "PbsProductStatus.7bcb4e8d-8e8c-487d-8170-6b91c89fc3da",
                            Name = "Approved"
                        },
                        new
                        {
                            Id = "4010e768-3e06-4702-b337-ee367a82addb",
                            DisplayOrder = 5,
                            LocaleCode = "PbsProductStatus.4010e768-3e06-4702-b337-ee367a82addb",
                            Name = "Handed Over"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsTaxonomyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsTaxonomyLevelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("PbsTaxonomyId");

                    b.HasIndex("PbsTaxonomyLevelId");

                    b.ToTable("PbsProductTaxonomy");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQuality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("QualityId");

                    b.ToTable("PbsQuality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQualityResponsibility", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityApproverId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityProducerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QualityReviewerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("QualityApproverId");

                    b.HasIndex("QualityProducerId");

                    b.HasIndex("QualityReviewerId");

                    b.ToTable("PbsQualityResponsibility");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsRisk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RiskId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("RiskId");

                    b.ToTable("PbsRisk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkill", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsSkill");

                    b.HasData(
                        new
                        {
                            Id = "8b145fdc-b666-488c-beec-f335627024601",
                            LocaleCode = "PbsSkillTeam Building Skills",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "bfd3f176-cc91-4d01-b27f-bef8888fc21c1",
                            LocaleCode = "PbsSkillCollaboration",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "0ffe382d-fe7d-4ac7-91b3-204570427c371",
                            LocaleCode = "PbsSkillCommunication",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "8f992d6e-7fee-43a3-b06c-430fa4d9d8e41",
                            LocaleCode = "PbsSkillFlexibility",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "1ae3028d-ab5b-4d88-bf4a-5bf53d969c4d1",
                            LocaleCode = "PbsSkillListening",
                            ParentId = "8b145fdc-b666-488c-beec-f335627024601"
                        },
                        new
                        {
                            Id = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1",
                            LocaleCode = "PbsSkillAnalytical Skills",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "7fd2a1b0-c559-4727-a596-dbc0af7c171e1",
                            LocaleCode = "PbsSkillCritical thinking",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "a1e3c91b-a8cf-43b1-b551-8bba9f64c3351",
                            LocaleCode = "PbsSkillData analysis",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "4a2cb5e5-e9ab-47a6-b1c5-080bdc5d60b61",
                            LocaleCode = "PbsSkillNumeracy",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        },
                        new
                        {
                            Id = "74e9f3ce-5338-467c-add0-ba7116cd300b1",
                            LocaleCode = "PbsSkillReporting",
                            ParentId = "fb88dff8-cf84-4cdb-acae-4a8b9241178f1"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillExperience", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsExperienceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsSkillId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PbsExperienceId");

                    b.HasIndex("PbsProductId");

                    b.HasIndex("PbsSkillId");

                    b.ToTable("PbsSkillExperience");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsTaxonomy");

                    b.HasData(
                        new
                        {
                            Id = "6e54725c-e396-4ce4-88f3-a6e9678a0389",
                            LocaleCode = "PbsTaxonomy.Utility",
                            Name = "Utility"
                        },
                        new
                        {
                            Id = "ab294299-f251-41a8-94bd-3ae0150df134",
                            LocaleCode = "PbsTaxonomy.Location",
                            Name = "Location"
                        },
                        new
                        {
                            Id = "b08d229c-0c03-4593-8bd6-652939986a22",
                            LocaleCode = "PbsTaxonomy.Scope",
                            Name = "Scope"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsTaxonomyLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsTaxonomyLevel");

                    b.HasData(
                        new
                        {
                            Id = "f0d64941-145a-4a8a-8619-165c965a16eb",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product",
                            Name = "Product",
                            Order = 100,
                            Type = "Location"
                        },
                        new
                        {
                            Id = "077845b7-79a7-4883-a02d-6094fc6d6563",
                            LocaleCode = "PbsTaxonomyLevel.Location.Separation",
                            Name = "Separation",
                            Order = 200,
                            Type = "Location"
                        },
                        new
                        {
                            Id = "8bb27024-ce91-4406-8e48-db08286f0b4b",
                            LocaleCode = "PbsTaxonomyLevel.Location.Product",
                            Name = "Product",
                            Order = 100,
                            Type = "Utility"
                        },
                        new
                        {
                            Id = "cd8418c0-502e-4893-b387-1426a5edd3a4",
                            LocaleCode = "PbsTaxonomyLevel.Utility.TrajectPart",
                            Name = "Traject Part",
                            Order = 200,
                            Type = "Utility"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsToleranceState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PbsToleranceState");

                    b.HasData(
                        new
                        {
                            Id = "004eb795-8bba-47e8-9049-d14774ab0b18",
                            LocaleCode = "ProjectToleranceState.csvWithin Tolerance (green)",
                            Name = "Within Tolerance (green)"
                        },
                        new
                        {
                            Id = "8f33bdf6-7600-4ad7-b558-c98899c1e5b2",
                            LocaleCode = "ProjectToleranceState.csvOut of Tolerance (red)",
                            Name = "Out of Tolerance (red)"
                        },
                        new
                        {
                            Id = "d9712fb3-02b6-4c2a-991c-ee904c87d8a8",
                            LocaleCode = "ProjectToleranceState.csvTolerance limit (orange)",
                            Name = "Tolerance limit (orange)"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ToolsForPbs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoperateProductCatalogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PbsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoperateProductCatalogId");

                    b.HasIndex("PbsProductId");

                    b.ToTable("PbsTools");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagementLevelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectTemplateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectToleranceStateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagementLevelId");

                    b.HasIndex("ProjectTemplateId");

                    b.HasIndex("ProjectToleranceStateId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("SequenceCode")
                        .IsUnique()
                        .HasFilter("[SequenceCode] IS NOT NULL");

                    b.ToTable("ProjectDefinition");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinitionHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.ToTable("ProjectDefinitionHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("BudgetLabour")
                        .HasColumnType("float");

                    b.Property<double?>("BudgetMaterial")
                        .HasColumnType("float");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TotalBudget")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectFinance");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectStateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RevisionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectStateId");

                    b.ToTable("ProjectHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectKPI", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomLabelOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomLabelThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomLabelTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CustomPropOne")
                        .HasColumnType("float");

                    b.Property<double?>("CustomPropThree")
                        .HasColumnType("float");

                    b.Property<double?>("CustomPropTwo")
                        .HasColumnType("float");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectKPI");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectManagementLevel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListingOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectManagementLevel");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectManagementLevelLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagementLevelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectManagementLevelId");

                    b.ToTable("ProjectManagementLevelLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectStateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectStateId");

                    b.ToTable("ProjectStateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractingUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEngineerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectManagerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectOwnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectEngineerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("ProjectOwnerId");

                    b.ToTable("ProjectTeam");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTemplate");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTemplateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTemplateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTemplateId");

                    b.ToTable("ProjectTemplateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTime", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CalendarTemplateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CalendarTemplateId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectTime");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectToleranceState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ListingOrder")
                        .HasColumnType("int");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectToleranceState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectToleranceStateLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectToleranceStateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectToleranceStateId");

                    b.ToTable("ProjectToleranceStateLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTypeLocalizedData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTypeId");

                    b.ToTable("ProjectTypeLocalizedData");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Key = "PbsSequenceCode",
                            Value = "PBS-0001"
                        },
                        new
                        {
                            Id = 6,
                            Key = "PbsSequenceCode",
                            Value = "PBS-0001"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QRCode", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("QRCode");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Quality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tolerance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDefinitionId");

                    b.ToTable("Quality");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QualityHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.ToTable("QualityHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Risk", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CabPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDefinitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RiskDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RiskTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SequenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CabPersonId");

                    b.HasIndex("ProjectDefinitionId");

                    b.HasIndex("RiskStatusId");

                    b.HasIndex("RiskTypeId");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskHistoryLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RiskId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedByUserId");

                    b.ToTable("RiskHistoryLog");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskStatus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskStatus");

                    b.HasData(
                        new
                        {
                            Id = "00b0a1c6-e5c8-4143-90f1-7dec0b0397ae",
                            Status = "Active"
                        },
                        new
                        {
                            Id = "8b0d0513-6111-466f-86c8-b26278c3c4f7",
                            Status = "Closed"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskType");

                    b.HasData(
                        new
                        {
                            Id = "4dba0e61-15f8-47a9-8fcd-0ced2e2ce210",
                            Type = "Threat"
                        },
                        new
                        {
                            Id = "ac9f4655-f14c-43c7-8e4a-5390bfdc16d0",
                            Type = "Opportunity"
                        });
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WorkflowStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkflowStateId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShiftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("QRCodeId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("UserId");

                    b.ToTable("TimeClock");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClockActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TimeClockActivityType");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AllUsers");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.WorkflowState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkflowState");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabAddress", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabCompany", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabBankAccount", "CabBankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabVat", "CabVat")
                        .WithMany()
                        .HasForeignKey("VatId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPerson", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "BusinessEmail")
                        .WithMany()
                        .HasForeignKey("BusinessEmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "BusinessPhone")
                        .WithMany()
                        .HasForeignKey("BusinessPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CAB.CabPersonCompany", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabEmail", "Email")
                        .WithMany()
                        .HasForeignKey("EmailId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabLandPhone", "LandPhone")
                        .WithMany()
                        .HasForeignKey("LandPhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabMobilePhone", "MobilePhone")
                        .WithMany()
                        .HasForeignKey("MobilePhoneId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany("PersonCompanyList")
                        .HasForeignKey("PersonId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabSkype", "Skype")
                        .WithMany()
                        .HasForeignKey("SkypeId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabWhatsApp", "WhatsApp")
                        .WithMany()
                        .HasForeignKey("WhatsAppId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", "CpcBasicUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("CpcBasicUnitOfMeasureId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBrand", "CpcBrand")
                        .WithMany()
                        .HasForeignKey("CpcBrandId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcMaterial", "CpcMaterial")
                        .WithMany()
                        .HasForeignKey("CpcMaterialId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcPressureClass", "CpcPressureClass")
                        .WithMany()
                        .HasForeignKey("CpcPressureClassId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcUnitOfSizeMeasure", "CpcUnitOfSizeMeasure")
                        .WithMany()
                        .HasForeignKey("CpcUnitOfSizeMeasureId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceFamily", "ResourceFamily")
                        .WithMany()
                        .HasForeignKey("ResourceFamilyId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceType", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasureLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcBasicUnitOfMeasure", null)
                        .WithMany("CpcBasicUnitOfMeasureLocalizedData")
                        .HasForeignKey("CpcBasicUnitOfMeasureId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcImage", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany("CpcImage")
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcMaterialLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcMaterial", null)
                        .WithMany("CpcMaterialLocalizedData")
                        .HasForeignKey("CpcMaterialId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceFamilyLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceFamily", null)
                        .WithMany("CpcResourceFamilyLocalizedData")
                        .HasForeignKey("CpcResourceFamilyId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceNickname", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany("CpcResourceNickname")
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcResourceTypeLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CpcResourceType", null)
                        .WithMany("CpcResourceTypeLocalizedData")
                        .HasForeignKey("CpcResourceTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.CPC.CpcVendor", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany("CpcVendor")
                        .HasForeignKey("CoperateProductCatalogId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ConsumableForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.LabourForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.MaterialForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstruction", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsInstructionFamily", "PbsInstructionFamily")
                        .WithMany()
                        .HasForeignKey("PbsInstructionFamilyId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsInstructionLink", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsInstruction", null)
                        .WithMany("PbsInstructionLink")
                        .HasForeignKey("PbsInstructionId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProduct", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProductItemType", "PbsProductItemType")
                        .WithMany()
                        .HasForeignKey("PbsProductItemTypeId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProductStatus", "PbsProductStatus")
                        .WithMany()
                        .HasForeignKey("PbsProductStatusId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsQualityResponsibility", "PbsQualityResponsibility")
                        .WithMany()
                        .HasForeignKey("PbsQualityResponsibilityId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsToleranceState", "PbsToleranceState")
                        .WithMany()
                        .HasForeignKey("PbsToleranceStateId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsProductTaxonomy", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany("PbsProductTaxonomyList")
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsTaxonomy", "PbsTaxonomy")
                        .WithMany()
                        .HasForeignKey("PbsTaxonomyId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsTaxonomyLevel", "PbsTaxonomyLevel")
                        .WithMany()
                        .HasForeignKey("PbsTaxonomyLevelId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQuality", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.Quality", "Quality")
                        .WithMany()
                        .HasForeignKey("QualityId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsQualityResponsibility", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "QualityApprover")
                        .WithMany()
                        .HasForeignKey("QualityApproverId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "QualityProducer")
                        .WithMany()
                        .HasForeignKey("QualityProducerId");

                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "QualityReviewer")
                        .WithMany()
                        .HasForeignKey("QualityReviewerId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsRisk", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.Risk", "Risk")
                        .WithMany()
                        .HasForeignKey("RiskId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.PbsSkillExperience", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsExperience", "PbsExperience")
                        .WithMany()
                        .HasForeignKey("PbsExperienceId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsSkill", "PbsSkill")
                        .WithMany()
                        .HasForeignKey("PbsSkillId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.PBS_.ToolsForPbs", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CPC.CorporateProductCatalog", "CorporateProductCatalog")
                        .WithMany()
                        .HasForeignKey("CoperateProductCatalogId");

                    b.HasOne("UPrinceV4.Web.Data.PBS_.PbsProduct", "PbsProduct")
                        .WithMany()
                        .HasForeignKey("PbsProductId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinition", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectManagementLevel", "ProjectManagementLevel")
                        .WithMany()
                        .HasForeignKey("ProjectManagementLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.ProjectTemplate", "ProjectTemplate")
                        .WithMany()
                        .HasForeignKey("ProjectTemplateId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectToleranceState", "ProjectToleranceState")
                        .WithMany()
                        .HasForeignKey("ProjectToleranceStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.ProjectType", "ProjectType")
                        .WithMany()
                        .HasForeignKey("ProjectTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectDefinitionHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectFinance", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectFinance")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectFinance", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectState", "ProjectState")
                        .WithMany()
                        .HasForeignKey("ProjectStateId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectKPI", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectKpi")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectKPI", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectManagementLevelLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectManagementLevel", null)
                        .WithMany("ProjectManagementLevelLocalizedData")
                        .HasForeignKey("ProjectManagementLevelId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectStateLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectState", null)
                        .WithMany("ProjectStateLocalizedData")
                        .HasForeignKey("ProjectStateId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTeam", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ProjectEngineer")
                        .WithMany()
                        .HasForeignKey("ProjectEngineerId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.Users", "ProjectOwner")
                        .WithMany()
                        .HasForeignKey("ProjectOwnerId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTemplateLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectTemplate", null)
                        .WithMany("ProjectTemplateLocalizedData")
                        .HasForeignKey("ProjectTemplateId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTime", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CalendarTemplate", "CalendarTemplate")
                        .WithMany()
                        .HasForeignKey("CalendarTemplateId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithOne("ProjectTime")
                        .HasForeignKey("UPrinceV4.Web.Data.ProjectTime", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectToleranceStateLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectToleranceState", null)
                        .WithMany("ProjectToleranceStateLocalizedData")
                        .HasForeignKey("ProjectToleranceStateId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.ProjectTypeLocalizedData", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectType", null)
                        .WithMany("ProjectTypeLocalizedData")
                        .HasForeignKey("ProjectTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QRCode", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.TimeClockActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Quality", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectDefinitionId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.QualityHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Risk", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.CAB.CabPerson", "Person")
                        .WithMany()
                        .HasForeignKey("CabPersonId");

                    b.HasOne("UPrinceV4.Web.Data.ProjectDefinition", "ProjectDefinition")
                        .WithMany()
                        .HasForeignKey("ProjectDefinitionId");

                    b.HasOne("UPrinceV4.Web.Data.RiskStatus", "RiskStatus")
                        .WithMany()
                        .HasForeignKey("RiskStatusId");

                    b.HasOne("UPrinceV4.Web.Data.RiskType", "RiskType")
                        .WithMany()
                        .HasForeignKey("RiskTypeId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.RiskHistoryLog", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "ChangedByUser")
                        .WithMany()
                        .HasForeignKey("ChangedByUserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.Shift", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("UPrinceV4.Web.Data.WorkflowState", "WorkflowState")
                        .WithMany()
                        .HasForeignKey("WorkflowStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.TimeClock", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("UPrinceV4.Web.Data.QRCode", "QRCode")
                        .WithMany()
                        .HasForeignKey("QRCodeId");

                    b.HasOne("UPrinceV4.Web.Data.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("UPrinceV4.Web.Data.UserRole", b =>
                {
                    b.HasOne("UPrinceV4.Web.Data.Roles", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId");

                    b.HasOne("UPrinceV4.Web.Data.Users", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
